<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE tmx SYSTEM "tmx11.dtd">
<tmx version="1.1">
  <header creationtool="OmegaT" o-tmf="OmegaT TMX" adminlang="EN-US" datatype="plaintext" creationtoolversion="5.0.0_0_dev" segtype="sentence" srclang="EN-US"/>
  <body>
<!-- Default translations -->
    <tu>
      <tuv lang="EN-US">
        <seg>*</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T114422Z" creationid="pingfangx" creationdate="20191011T114422Z">
        <seg>*</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;a0&gt;&lt;i1&gt;Buffers&lt;/i1&gt;&lt;/a0&gt;, which are containers for data;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T083707Z" creationid="pingfangx" creationdate="20191011T083707Z">
        <seg>&lt;a0&gt;&lt;i1&gt;缓冲区&lt;/i1&gt;&lt;/a0&gt;，它们是数据容器；</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;a0&gt;&lt;i1&gt;Channels&lt;/i1&gt;&lt;/a0&gt; of various types, which represent connections</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T101820Z" creationid="pingfangx" creationdate="20191011T101756Z">
        <seg>各种类型的 &lt;a0&gt;&lt;i1&gt;通道&lt;/i1&gt;&lt;/a0&gt;，</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;a0&gt;&lt;i1&gt;Charsets&lt;/i1&gt;&lt;/a0&gt; and their associated &lt;i2&gt;decoders&lt;/i2&gt; and &lt;i3&gt;encoders&lt;/i3&gt;,</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T083730Z" creationid="pingfangx" creationdate="20191011T083730Z">
        <seg>&lt;a0&gt;&lt;i1&gt;字符集&lt;/i1&gt;&lt;/a0&gt; 及其相关 &lt;i2&gt;解码器&lt;/i2&gt; 和 &lt;i3&gt;编码器&lt;/i3&gt;，</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;a0&gt;About Android&lt;/a0&gt; &lt;a1&gt;Auto&lt;/a1&gt; &lt;a2&gt;TV&lt;/a2&gt; &lt;a3&gt;Wear&lt;/a3&gt; &lt;a4&gt;Legal&lt;/a4&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T114412Z" creationid="pingfangx" creationdate="20191011T114412Z">
        <seg>&lt;a0&gt;About Android&lt;/a0&gt; &lt;a1&gt;Auto&lt;/a1&gt; &lt;a2&gt;TV&lt;/a2&gt; &lt;a3&gt;Wear&lt;/a3&gt; &lt;a4&gt;Legal&lt;/a4&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;a0&gt;Blog&lt;/a0&gt; &lt;a1&gt;Support&lt;/a1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T114409Z" creationid="pingfangx" creationdate="20191011T114409Z">
        <seg>&lt;a0&gt;Blog&lt;/a0&gt; &lt;a1&gt;Support&lt;/a1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;&lt;a1&gt;DatagramSocket&lt;/a1&gt;&lt;/c0&gt; is a UDP endpoint API and is used to &lt;a2&gt;send&lt;/a2&gt;&lt;/a3&gt; and &lt;a4&gt;receive&lt;/a4&gt;&lt;/a5&gt; &lt;a6&gt;datagram packets&lt;/a6&gt;&lt;/a7&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T080744Z" creationid="pingfangx" creationdate="20191011T080744Z">
        <seg>&lt;c0&gt;&lt;a1&gt;DatagramSocket&lt;/a1&gt;&lt;/c0&gt; 是 UDP 端点 API，用于 &lt;a2&gt;发送&lt;/a2&gt;&lt;/a3&gt; 和 &lt;a4&gt;接收&lt;/a4&gt;&lt;/a5&gt; &lt;a6&gt;数据包&lt;/a6&gt;&lt;/a7&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;&lt;a1&gt;HttpURLConnection&lt;/a1&gt;&lt;/c0&gt; is a subclass of URLConnection and provides some additional functionalities specific to the HTTP protocol.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T082050Z" creationid="pingfangx" creationdate="20191011T082050Z">
        <seg>&lt;c0&gt;&lt;a1&gt;HttpURLConnection&lt;/a1&gt;&lt;/c0&gt; 是 URLConnection 的子类，提供一些特定于 HTTP 协议的附加功能。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;&lt;a1&gt;Inet4Address&lt;/a1&gt;&lt;/c0&gt; for IPv4 addresses.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T080250Z" creationid="pingfangx" creationdate="20191011T080250Z">
        <seg>用于 IPv4 地址的 &lt;c0&gt;&lt;a1&gt;Inet4Address&lt;/a1&gt;&lt;/c0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;&lt;a1&gt;Inet6Address&lt;/a1&gt;&lt;/c0&gt; for IPv6 addresses.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T080417Z" creationid="pingfangx" creationdate="20191011T080417Z">
        <seg>用于 IPv6 地址的 &lt;c0&gt;&lt;a1&gt;Inet6Address&lt;/a1&gt;&lt;/c0&gt; 。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;&lt;a1&gt;MulticastSocket&lt;/a1&gt;&lt;/c0&gt; is a subclass of &lt;c2&gt;DatagramSocket&lt;/c2&gt; used when dealing with multicast groups.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T080837Z" creationid="pingfangx" creationdate="20191011T080837Z">
        <seg>&lt;c0&gt;&lt;a1&gt;MulticastSocket&lt;/a1&gt;&lt;/c0&gt; 是 &lt;c2&gt;DatagramSocket&lt;/c2&gt; 的子类，在处理多播组时使用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;&lt;a1&gt;ServerSocket&lt;/a1&gt;&lt;/c0&gt; is a TCP server API, and will typically &lt;a2&gt;accept&lt;/a2&gt;&lt;/a3&gt; connections from client sockets.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T080619Z" creationid="pingfangx" creationdate="20191011T080619Z">
        <seg>&lt;c0&gt;&lt;a1&gt;ServerSocket&lt;/a1&gt;&lt;/c0&gt; 是 TCP 服务器 API，通常 &lt;a2&gt;接受&lt;/a2&gt;&lt;/a3&gt; 源于客户端套接字的连接。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;&lt;a1&gt;Socket&lt;/a1&gt;&lt;/c0&gt; is a TCP client API, and will typically be used to &lt;a2&gt;connect&lt;/a2&gt;&lt;/a3&gt; to a remote host.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T080545Z" creationid="pingfangx" creationdate="20191011T080519Z">
        <seg>&lt;c0&gt;&lt;a1&gt;Socket&lt;/a1&gt;&lt;/c0&gt; 是 TCP 客户端 API，通常用于 &lt;a2&gt;连接&lt;/a2&gt;&lt;/a3&gt; 远程主机。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;&lt;a1&gt;URI&lt;/a1&gt;&lt;/c0&gt; is the class representing a Universal Resource Identifier, as specified in RFC 2396.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T081106Z" creationid="pingfangx" creationdate="20191011T081106Z">
        <seg>&lt;c0&gt;&lt;a1&gt;URI&lt;/a1&gt;&lt;/c0&gt; 是表示在 RFC 2396 中指定的统一资料标识符的类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;&lt;a1&gt;URL&lt;/a1&gt;&lt;/c0&gt; is the class representing a Universal Resource Locator, which is both an older concept for URIs and a means to access the resources.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T081122Z" creationid="pingfangx" creationdate="20191011T081122Z">
        <seg>&lt;c0&gt;&lt;a1&gt;URL&lt;/a1&gt;&lt;/c0&gt; 是表示统一资源定位符的类，它既是 URI 的旧式概念又是访问资源的方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;&lt;a1&gt;URLConnection&lt;/a1&gt;&lt;/c0&gt; is created from a URL and is the communication link used to access the resource pointed by the URL.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T081140Z" creationid="pingfangx" creationdate="20191011T081140Z">
        <seg>&lt;c0&gt;&lt;a1&gt;URLConnection&lt;/a1&gt;&lt;/c0&gt; 是根据 URL 创建的，是用于访问 URL 所指向资源的通信链接。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;AccessibleObject&lt;/c0&gt; allows suppression of access checks if the necessary &lt;c1&gt;ReflectPermission&lt;/c1&gt; is available.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T091021Z" creationid="pingfangx" creationdate="20191012T091021Z">
        <seg>如果必需的 &lt;c0&gt;ReflectPermission&lt;/c0&gt; 可用，则 &lt;c1&gt;AccessibleObject&lt;/c1&gt; 允许抑制访问检查。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;Array&lt;/c0&gt; provides static methods to dynamically create and access arrays.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T091028Z" creationid="pingfangx" creationdate="20191012T091028Z">
        <seg>&lt;c0&gt;Array&lt;/c0&gt; 提供动态创建和访问数组的静态方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;Builder&lt;/c0&gt; is used to build instances of &lt;c1&gt;Locale&lt;/c1&gt; from values configured by the setters.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T045816Z" creationid="pingfangx" creationdate="20191012T045816Z">
        <seg>&lt;c0&gt;Builder&lt;/c0&gt; 用于根据 setters 配置的值构建 &lt;c1&gt;Locale&lt;/c1&gt; 的实例。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;Constructor&lt;/c0&gt; provides information about, and access to, a single constructor for a class.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T092056Z" creationid="pingfangx" creationdate="20191012T092056Z">
        <seg>&lt;c0&gt;Constructor&lt;/c0&gt; 提供关于类的单个构造方法的信息以及对它的访问权限。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;DateFormat&lt;/c0&gt; is an abstract class for date/time formatting subclasses which formats and parses dates or time in a language-independent manner.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T033417Z" creationid="pingfangx" creationdate="20191012T033417Z">
        <seg>&lt;c0&gt;DateFormat&lt;/c0&gt; 是日期/时间格式化子类的抽象类，它以与语言无关的方式格式化并解析日期或时间。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;DateFormatSymbols&lt;/c0&gt; is a public class for encapsulating localizable date-time formatting data, such as the names of the months, the names of the days of the week, and the time zone data.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T033420Z" creationid="pingfangx" creationdate="20191012T033420Z">
        <seg>&lt;c0&gt;DateFormatSymbols&lt;/c0&gt; 是一个公共类，用于封装可本地化的日期-时间格式化数据，如月名、星期几的名称和时区数据。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;DecimalFormat&lt;/c0&gt; is a concrete subclass of &lt;c1&gt;NumberFormat&lt;/c1&gt; that formats decimal numbers.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T033423Z" creationid="pingfangx" creationdate="20191012T033423Z">
        <seg>&lt;c0&gt;DecimalFormat&lt;/c0&gt; 是 &lt;c1&gt;NumberFormat&lt;/c1&gt; 的一个具体子类，用于格式化十进制数字。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;FieldPosition&lt;/c0&gt; is a simple class used by &lt;c1&gt;Format&lt;/c1&gt; and its subclasses to identify fields in formatted output.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T033427Z" creationid="pingfangx" creationdate="20191012T033427Z">
        <seg>&lt;c0&gt;FieldPosition&lt;/c0&gt; 是 &lt;c1&gt;Format&lt;/c1&gt; 及其子类用于在格式输出中标识字段的简单类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;Format&lt;/c0&gt; is an abstract base class for formatting locale-sensitive information such as dates, messages, and numbers.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T033429Z" creationid="pingfangx" creationdate="20191012T033429Z">
        <seg>&lt;c0&gt;Format&lt;/c0&gt; 是一个用于格式化语言环境敏感的信息（如日期、消息和数字）的抽象基类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;GenericArrayType&lt;/c0&gt; represents an array type whose component type is either a parameterized type or a type variable.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T091053Z" creationid="pingfangx" creationdate="20191012T091053Z">
        <seg>&lt;c0&gt;GenericArrayType&lt;/c0&gt; 表示一种数组类型，其组件类型为参数化类型或类型变量。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;GregorianCalendar&lt;/c0&gt; is a concrete subclass of &lt;c1&gt;Calendar&lt;/c1&gt; and provides the standard calendar system used by most of the world.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T045627Z" creationid="pingfangx" creationdate="20191012T045627Z">
        <seg>&lt;c0&gt;GregorianCalendar&lt;/c0&gt; 是 &lt;c1&gt;Calendar&lt;/c1&gt; 的一个具体子类，提供了世界上大多数国家/地区使用的标准日历系统。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;InvocationHandler&lt;/c0&gt; is the interface implemented by the &lt;i1&gt;invocation handler&lt;/i1&gt; of a proxy instance.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T091104Z" creationid="pingfangx" creationdate="20191012T091104Z">
        <seg>&lt;c0&gt;InvocationHandler&lt;/c0&gt; 是代理实例的 &lt;i1&gt;调用处理程序&lt;/i1&gt; 实现的接口。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;ListResourceBundle&lt;/c0&gt; is an abstract subclass of &lt;c1&gt;ResourceBundle&lt;/c1&gt; that manages resources for a locale in a convenient and easy to use list.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T045747Z" creationid="pingfangx" creationdate="20191012T045747Z">
        <seg>&lt;c0&gt;ListResourceBundle&lt;/c0&gt; 是 &lt;c1&gt;ResourceBundle&lt;/c1&gt; 的一个抽象类，用于管理方便而又易于使用的列表中的语言环境资源。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;MessageFormat&lt;/c0&gt; provides a means to produce concatenated messages in a language-neutral way.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T033437Z" creationid="pingfangx" creationdate="20191012T033437Z">
        <seg>&lt;c0&gt;MessageFormat&lt;/c0&gt; 提供了以与语言无关方式生成连接消息的方式。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;NumberFormat&lt;/c0&gt; is the abstract base class for all number formats.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T033442Z" creationid="pingfangx" creationdate="20191012T033442Z">
        <seg>&lt;c0&gt;NumberFormat&lt;/c0&gt; 是所有数值格式的抽象基类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;Package&lt;/c0&gt; objects contain version information about the implementation and specification of a Java package.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T071502Z" creationid="pingfangx" creationdate="20191012T071502Z">
        <seg>&lt;c0&gt;Package&lt;/c0&gt; 对象包含有关 Java 包的实现和规范的版本信息。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;ParsePosition&lt;/c0&gt; is a simple class used by &lt;c1&gt;Format&lt;/c1&gt; and its subclasses to keep track of the current position during parsing.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T033445Z" creationid="pingfangx" creationdate="20191012T033445Z">
        <seg>&lt;c0&gt;ParsePosition&lt;/c0&gt; 是 &lt;c1&gt;Format&lt;/c1&gt; 及其子类所使用的简单类，用来在解析过程中跟踪当前位置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;PropertyResourceBundle&lt;/c0&gt; is a concrete subclass of &lt;c1&gt;ResourceBundle&lt;/c1&gt; that manages resources for a locale using a set of static strings from a property file.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T050048Z" creationid="pingfangx" creationdate="20191012T050048Z">
        <seg>&lt;c0&gt;PropertyResourceBundle&lt;/c0&gt; 是 &lt;c1&gt;ResourceBundle&lt;/c1&gt; 的一个具体子类，它使用属性文件中的静态字符串集来管理语言环境资源。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;Proxy&lt;/c0&gt; provides static methods for creating dynamic proxy classes and instances, and it is also the superclass of all dynamic proxy classes created by those methods.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T092149Z" creationid="pingfangx" creationdate="20191012T092149Z">
        <seg>&lt;c0&gt;Proxy&lt;/c0&gt; 提供用于创建动态代理类和实例的静态方法，它还是由这些方法创建的所有动态代理类的超类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;ResourceBundle.Control&lt;/c0&gt; defines a set of callback methods that are invoked by the &lt;c1&gt;&lt;a2&gt;ResourceBundle.getBundle&lt;/a2&gt;&lt;/c1&gt; factory methods during the bundle loading process.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T050054Z" creationid="pingfangx" creationdate="20191012T050054Z">
        <seg>&lt;c0&gt;ResourceBundle.Control&lt;/c0&gt; 定义一个回调方法集，它在包加载进程中由 &lt;c1&gt;&lt;a2&gt;ResourceBundle.getBundle&lt;/a2&gt;&lt;/c1&gt; 工厂方法调用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;RuntimeException&lt;/c0&gt; is the superclass of those exceptions that can be thrown during the normal operation of the Java Virtual Machine.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T073123Z" creationid="pingfangx" creationdate="20191012T073123Z">
        <seg>&lt;c0&gt;RuntimeException&lt;/c0&gt; 是那些可能在 Java 虚拟机正常运行期间抛出的异常的超类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;SimpleDateFormat&lt;/c0&gt; is a concrete class for formatting and parsing dates in a locale-sensitive manner.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T033447Z" creationid="pingfangx" creationdate="20191012T033447Z">
        <seg>&lt;c0&gt;SimpleDateFormat&lt;/c0&gt; 是一个以与语言环境有关的方式来格式化和解析日期的具体类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;SimpleTimeZone&lt;/c0&gt; is a concrete subclass of &lt;c1&gt;TimeZone&lt;/c1&gt; that represents a time zone for use with a Gregorian calendar.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T050110Z" creationid="pingfangx" creationdate="20191012T050110Z">
        <seg>&lt;c0&gt;SimpleTimeZone&lt;/c0&gt; 是 &lt;c1&gt;TimeZone&lt;/c1&gt; 的具体子类，表示一个使用格里高利历的时区。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;StringJoiner&lt;/c0&gt; is used to construct a sequence of characters separated by a delimiter and optionally starting with a supplied prefix and ending with a supplied suffix.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T050707Z" creationid="pingfangx" creationdate="20191012T050707Z">
        <seg>&lt;c0&gt;StringJoiner&lt;/c0&gt; 用于构建由分隔符隔开并任选地开始与供给前缀和使用所提供的后缀结束的字符序列。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;TimeZone&lt;/c0&gt; represents a time zone offset, and also figures out daylight savings.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T050213Z" creationid="pingfangx" creationdate="20191012T050213Z">
        <seg>&lt;c0&gt;TimeZone&lt;/c0&gt; 表示时区偏移量，也可以计算夏令时。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;e0&gt; This class was deprecated in API level 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T031502Z" creationid="pingfangx" creationdate="20191012T031502Z">
        <seg>&lt;e0&gt; 此类在 API 级别 17 中已弃用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;i0&gt;A High Level API&lt;/i0&gt;, which deals with the following abstractions:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T074517Z" creationid="pingfangx" creationdate="20191011T074517Z">
        <seg>&lt;i0&gt;高级 API&lt;/i0&gt;，用于处理以下抽象：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;i0&gt;A Low Level API&lt;/i0&gt;, which deals with the following abstractions:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T074500Z" creationid="pingfangx" creationdate="20191011T074500Z">
        <seg>&lt;i0&gt;低级 API&lt;/i0&gt;，用于处理以下抽象：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;i0&gt;Addresses&lt;/i0&gt;, which are networking identifiers, like IP addresses.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T074510Z" creationid="pingfangx" creationdate="20191011T074510Z">
        <seg>&lt;i0&gt;地址&lt;/i0&gt;，也就是网络标识符，如 IP 地址。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;i0&gt;Connections&lt;/i0&gt;, which represents connections to the resource pointed to by &lt;i1&gt;URLs&lt;/i1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T074525Z" creationid="pingfangx" creationdate="20191011T074525Z">
        <seg>&lt;i0&gt;连接&lt;/i0&gt;，表示到 &lt;i1&gt;URL&lt;/i1&gt;所指向资源的连接。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;i0&gt;Interfaces&lt;/i0&gt;, which describe network interfaces.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T074515Z" creationid="pingfangx" creationdate="20191011T074515Z">
        <seg>&lt;i0&gt;接口&lt;/i0&gt;，用于描述网络接口。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;i0&gt;Selectors&lt;/i0&gt; and &lt;i1&gt;selection keys&lt;/i1&gt;, which together with</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T101927Z" creationid="pingfangx" creationdate="20191011T101901Z">
        <seg>&lt;i0&gt;选择器&lt;/i0&gt; 和 &lt;i1&gt;选择键&lt;/i1&gt;，</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;i0&gt;Sockets&lt;/i0&gt;, which are basic bidirectional data communication mechanisms.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T074512Z" creationid="pingfangx" creationdate="20191011T074512Z">
        <seg>&lt;i0&gt;套接字&lt;/i0&gt;，也就是基本双向数据通信机制。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;i0&gt;URIs&lt;/i0&gt;, which represent Universal Resource Identifiers.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T074519Z" creationid="pingfangx" creationdate="20191011T074519Z">
        <seg>&lt;i0&gt;URI&lt;/i0&gt;，表示统一资源标识符。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;i0&gt;URLs&lt;/i0&gt;, which represent Universal Resource Locators.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T074520Z" creationid="pingfangx" creationdate="20191011T074520Z">
        <seg>&lt;i0&gt;URL&lt;/i0&gt;，表示统一资源定位符。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;i0&gt;selectable channels&lt;/i0&gt; define a &lt;a1&gt;multiplexed, non-blocking</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T102110Z" creationid="pingfangx" creationdate="20191011T101947Z">
        <seg>它们与 &lt;i0&gt;可选择信道&lt;/i0&gt; 一起定义了 &lt;a1&gt;多路复用、非阻塞 </seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Which best describes your business:&lt;/s0&gt;&lt;s1&gt;*&lt;/s1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T114425Z" creationid="pingfangx" creationdate="20191011T114425Z">
        <seg>&lt;s0&gt;Which best describes your business:&lt;/s0&gt;&lt;s1&gt;*&lt;/s1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A &lt;c0&gt;&lt;a1&gt;Map&lt;/a1&gt;&lt;/c0&gt; that further provides a &lt;e2&gt;total ordering&lt;/e2&gt; on its keys.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T044815Z" creationid="pingfangx" creationdate="20191012T044815Z">
        <seg>进一步提供关于键的 &lt;e2&gt;总体排序&lt;/e2&gt; 的 &lt;c0&gt;&lt;a1&gt;Map&lt;/a1&gt;&lt;/c0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A &lt;c0&gt;&lt;a1&gt;NavigableSet&lt;/a1&gt;&lt;/c0&gt; implementation based on a &lt;c2&gt;&lt;a3&gt;TreeMap&lt;/a3&gt;&lt;/c2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T050221Z" creationid="pingfangx" creationdate="20191012T050221Z">
        <seg>基于 &lt;c0&gt;&lt;a1&gt;TreeMap&lt;/a1&gt;&lt;/c0&gt; 的 &lt;c2&gt;&lt;a3&gt;NavigableSet&lt;/a3&gt;&lt;/c2&gt; 实现。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A &lt;c0&gt;&lt;a1&gt;Set&lt;/a1&gt;&lt;/c0&gt; that further provides a &lt;i2&gt;total ordering&lt;/i2&gt; on its elements.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T044827Z" creationid="pingfangx" creationdate="20191012T044827Z">
        <seg>进一步提供关于元素的 &lt;i2&gt;总体排序&lt;/i2&gt; 的 &lt;c0&gt;&lt;a1&gt;Set&lt;/a1&gt;&lt;/c0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A &lt;c0&gt;&lt;a1&gt;SortedMap&lt;/a1&gt;&lt;/c0&gt; extended with navigation methods returning the closest matches for given search targets.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T034530Z" creationid="pingfangx" creationdate="20191012T034530Z">
        <seg>扩展的 &lt;c0&gt;&lt;a1&gt;SortedMap&lt;/a1&gt;&lt;/c0&gt;，具有了针对给定搜索目标返回最接近匹配项的导航方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A &lt;c0&gt;&lt;a1&gt;SortedSet&lt;/a1&gt;&lt;/c0&gt; extended with navigation methods reporting closest matches for given search targets.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T034536Z" creationid="pingfangx" creationdate="20191012T034536Z">
        <seg>扩展的 &lt;c0&gt;&lt;a1&gt;SortedSet&lt;/a1&gt;&lt;/c0&gt;，具有了为给定搜索目标报告最接近匹配项的导航方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A &lt;c0&gt;BufferedInputStream&lt;/c0&gt; adds functionality to another input stream-namely, the ability to buffer the input and to support the &lt;c1&gt;mark&lt;/c1&gt; and &lt;c2&gt;reset&lt;/c2&gt; methods.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191010T094613Z" creationid="pingfangx" creationdate="20191010T094613Z">
        <seg>&lt;c0&gt;BufferedInputStream&lt;/c0&gt; 为另一个输入流添加一些功能，即缓冲输入以及支持 &lt;c1&gt;mark&lt;/c1&gt; 和 &lt;c2&gt;reset&lt;/c2&gt; 方法的能力。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A &lt;c0&gt;ByteArrayInputStream&lt;/c0&gt; contains an internal buffer that contains bytes that may be read from the stream.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191010T094643Z" creationid="pingfangx" creationdate="20191010T094643Z">
        <seg>&lt;c0&gt;ByteArrayInputStream&lt;/c0&gt; 包含一个内部缓冲区，该缓冲区包含从流中读取的字节。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A &lt;c0&gt;ChoiceFormat&lt;/c0&gt; allows you to attach a format to a range of numbers.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T033209Z" creationid="pingfangx" creationdate="20191012T033209Z">
        <seg>&lt;c0&gt;ChoiceFormat&lt;/c0&gt; 允许将格式应用到某个范围的数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A &lt;c0&gt;Closeable&lt;/c0&gt; is a source or destination of data that can be closed.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191010T094018Z" creationid="pingfangx" creationdate="20191010T094018Z">
        <seg>&lt;c0&gt;Closeable&lt;/c0&gt; 是可以关闭的数据源或目标。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A &lt;c0&gt;CollationKey&lt;/c0&gt; represents a &lt;c1&gt;String&lt;/c1&gt; under the rules of a specific &lt;c2&gt;Collator&lt;/c2&gt; object.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T033217Z" creationid="pingfangx" creationdate="20191012T033217Z">
        <seg>&lt;c0&gt;CollationKey&lt;/c0&gt; 表示遵守特定 &lt;c1&gt;Collator&lt;/c1&gt; 对象规则的 &lt;c2&gt;String&lt;/c2&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A &lt;c0&gt;Field&lt;/c0&gt; provides information about, and dynamic access to, a single field of a class or an interface.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T092107Z" creationid="pingfangx" creationdate="20191012T092107Z">
        <seg>&lt;c0&gt;Field&lt;/c0&gt; 提供有关类或接口的单个字段的信息，以及对它的动态访问权限。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A &lt;c0&gt;FileInputStream&lt;/c0&gt; obtains input bytes from a file in a file system.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191010T094748Z" creationid="pingfangx" creationdate="20191010T094748Z">
        <seg>&lt;c0&gt;FileInputStream&lt;/c0&gt; 从文件系统中的某个文件中获得输入字节。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A &lt;c0&gt;FilterInputStream&lt;/c0&gt; contains some other input stream, which it uses as its basic source of data, possibly transforming the data along the way or providing additional functionality.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191010T100738Z" creationid="pingfangx" creationdate="20191010T100738Z">
        <seg>&lt;c0&gt;FilterInputStream&lt;/c0&gt; 包含其他一些输入流，它将这些流用作其基本数据源，它可以直接传输数据或提供一些额外的功能。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A &lt;c0&gt;KeyStore&lt;/c0&gt; entry that holds a &lt;c1&gt;PrivateKey&lt;/c1&gt; and corresponding certificate chain.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T032404Z" creationid="pingfangx" creationdate="20191012T032404Z">
        <seg>保存 &lt;c0&gt;PrivateKey&lt;/c0&gt; 和相应证书链的 &lt;c1&gt;KeyStore&lt;/c1&gt; 项。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A &lt;c0&gt;KeyStore&lt;/c0&gt; entry that holds a &lt;c1&gt;SecretKey&lt;/c1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T032406Z" creationid="pingfangx" creationdate="20191012T032406Z">
        <seg>保存 &lt;c0&gt;SecretKey&lt;/c0&gt; 的 &lt;c1&gt;KeyStore&lt;/c1&gt; 项。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A &lt;c0&gt;KeyStore&lt;/c0&gt; entry that holds a trusted &lt;c1&gt;Certificate&lt;/c1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T032409Z" creationid="pingfangx" creationdate="20191012T032409Z">
        <seg>保存可信的 &lt;c0&gt;Certificate&lt;/c0&gt; 的 &lt;c1&gt;KeyStore&lt;/c1&gt; 项。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A &lt;c0&gt;Locale&lt;/c0&gt; object represents a specific geographical, political, or cultural region.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T045753Z" creationid="pingfangx" creationdate="20191012T045753Z">
        <seg>&lt;c0&gt;Locale&lt;/c0&gt; 对象表示了特定的地理、政治和文化地区。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A &lt;c0&gt;Method&lt;/c0&gt; provides information about, and access to, a single method on a class or interface.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T092140Z" creationid="pingfangx" creationdate="20191012T092140Z">
        <seg>&lt;c0&gt;Method&lt;/c0&gt; 提供关于类或接口上单独某个方法（以及如何访问该方法）的信息。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A &lt;c0&gt;PrintStream&lt;/c0&gt; adds functionality to another output stream, namely the ability to print representations of various data values conveniently.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191010T102725Z" creationid="pingfangx" creationdate="20191010T102725Z">
        <seg>&lt;c0&gt;PrintStream&lt;/c0&gt; 为其他输出流添加了功能，使它们能够方便地打印各种数据值表示形式。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A &lt;c0&gt;PushbackInputStream&lt;/c0&gt; adds functionality to another input stream, namely the ability to "push back" or "unread" one byte.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191010T102733Z" creationid="pingfangx" creationdate="20191010T102733Z">
        <seg>&lt;c0&gt;PushbackInputStream&lt;/c0&gt; 为另一个输入流添加性能，即“推回 (push back)”或“取消读取 (unread)”一个字节的能力。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A &lt;c0&gt;SequenceInputStream&lt;/c0&gt; represents the logical concatenation of other input streams.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191010T102802Z" creationid="pingfangx" creationdate="20191010T102802Z">
        <seg>&lt;c0&gt;SequenceInputStream&lt;/c0&gt; 表示其他输入流的逻辑串联。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A &lt;e0&gt;reference object&lt;/e0&gt; encapsulates a reference to some other object so that the reference itself may be examined and manipulated like any other object.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T085509Z" creationid="pingfangx" creationdate="20191012T085509Z">
        <seg>&lt;e0&gt;引用对象&lt;/e0&gt; 封装了对另一个对象的引用，这样就可以像其他任何对象一样检查和操作引用自身。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A &lt;i0&gt;buffer&lt;/i0&gt; is a container for a fixed amount of data of a specific primitive type.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T102835Z" creationid="pingfangx" creationdate="20191011T102835Z">
        <seg>&lt;i0&gt;缓冲区&lt;/i0&gt; 是一个固定数据量的指定基本类型的数据容器。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A &lt;i0&gt;thread&lt;/i0&gt; is a thread of execution in a program.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T071721Z" creationid="pingfangx" creationdate="20191012T071721Z">
        <seg>&lt;i0&gt;线程&lt;/i0&gt; 是程序中的执行线程。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A &lt;t0&gt;CharSequence&lt;/t0&gt; is a readable sequence of &lt;c1&gt;char&lt;/c1&gt; values.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T065701Z" creationid="pingfangx" creationdate="20191012T065701Z">
        <seg>&lt;t0&gt;CharSequence&lt;/t0&gt; 是 &lt;c1&gt;char&lt;/c1&gt; 值的一个可读序列。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A &lt;t0&gt;Flushable&lt;/t0&gt; is a destination of data that can be flushed.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191010T094538Z" creationid="pingfangx" creationdate="20191010T094538Z">
        <seg>&lt;t0&gt;Flushable&lt;/t0&gt; 是可刷新数据的目标地。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A &lt;t0&gt;Readable&lt;/t0&gt; is a source of characters.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T065920Z" creationid="pingfangx" creationdate="20191012T065920Z">
        <seg>&lt;t0&gt;Readable&lt;/t0&gt; 是一个字符源。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A CookieHandler object provides a callback mechanism to hook up a HTTP state management policy implementation into the HTTP protocol handler.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T083142Z" creationid="pingfangx" creationdate="20191011T083142Z">
        <seg>CookieHandler 对象提供一种回调机制以将 HTTP 状态管理策略实现挂钩到 HTTP 协议处理程序。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A CookieStore object represents a storage for cookie.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T083040Z" creationid="pingfangx" creationdate="20191011T083040Z">
        <seg>表示 cookie 存储区的 CookieStore 对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A GuardedObject is an object that is used to protect access to another object.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T031440Z" creationid="pingfangx" creationdate="20191012T031427Z">
        <seg>GuardedObject 是一个用来保护对另一个对象的访问的对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A ProtectionParameter encapsulating a CallbackHandler.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T032303Z" creationid="pingfangx" creationdate="20191012T032303Z">
        <seg>封装 CallbackHandler 的 ProtectionParameter。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A Red-Black tree based &lt;c0&gt;&lt;a1&gt;NavigableMap&lt;/a1&gt;&lt;/c0&gt; implementation.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T050219Z" creationid="pingfangx" creationdate="20191012T050219Z">
        <seg>基于红黑树（Red-Black tree）的 &lt;c0&gt;&lt;a1&gt;NavigableMap&lt;/a1&gt;&lt;/c0&gt; 实现。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A Spliterator specialized for &lt;c0&gt;double&lt;/c0&gt; values.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T044904Z" creationid="pingfangx" creationdate="20191012T044904Z">
        <seg>一个专用于 &lt;c0&gt;double&lt;/c0&gt; 值的 Spliterator。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A Spliterator specialized for &lt;c0&gt;int&lt;/c0&gt; values.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T044922Z" creationid="pingfangx" creationdate="20191012T044922Z">
        <seg>一个专用于 &lt;c0&gt;int&lt;/c0&gt; 值的 Spliterator。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A Spliterator specialized for &lt;c0&gt;long&lt;/c0&gt; values.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T044949Z" creationid="pingfangx" creationdate="20191012T044949Z">
        <seg>一个专用于 &lt;c0&gt;long&lt;/c0&gt; 值的 Spliterator。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A Spliterator specialized for primitive values.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T045018Z" creationid="pingfangx" creationdate="20191012T045018Z">
        <seg>专门用于基本类型值的 Spliterator。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A URL Connection to a Java ARchive (JAR) file or an entry in a JAR file.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T083322Z" creationid="pingfangx" creationdate="20191011T083322Z">
        <seg>连接到 Java ARchive (JAR) 文件或 JAR 文件中条目的 URL Connection。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A URLConnection with support for HTTP-specific features.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T083200Z" creationid="pingfangx" creationdate="20191011T083200Z">
        <seg>支持 HTTP 特定功能的 URLConnection。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A base type for primitive specializations of &lt;c0&gt;Iterator&lt;/c0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T034730Z" creationid="pingfangx" creationdate="20191012T034730Z">
        <seg>基本类型专用的 &lt;c0&gt;Iterator&lt;/c0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A buffered character-input stream that keeps track of line numbers.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191010T102616Z" creationid="pingfangx" creationdate="20191010T102616Z">
        <seg>跟踪行号的缓冲字符输入流。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A byte buffer can be allocated as a &lt;a0&gt; &lt;i1&gt;direct&lt;/i1&gt;&lt;/a0&gt; buffer, in which case the Java virtual machine will make a best effort to perform native I/O operations directly upon it.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T111837Z" creationid="pingfangx" creationdate="20191011T111837Z">
        <seg>可以将字节缓冲区分配为一个 &lt;a0&gt; &lt;i1&gt;直接&lt;/i1&gt;&lt;/a0&gt; 缓冲区，在这种情况下，Java 虚拟机将最大限度地直接在缓冲区上执行本机 I/O 操作。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A byte buffer can be created by &lt;c0&gt;&lt;a1&gt;&lt;/a1&gt;&lt;/c0&gt;&lt;i2&gt;mapping&lt;/i2&gt;&lt;c3&gt;&lt;/a4&gt;&lt;/c3&gt; a region of a file directly into memory, in which case a few additional file-related operations defined in the &lt;c5&gt;&lt;a6&gt;MappedByteBuffer&lt;/a6&gt;&lt;/c5&gt; class are available.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T112409Z" creationid="pingfangx" creationdate="20191011T112409Z">
        <seg>可以通过 &lt;c0&gt;&lt;a1&gt;&lt;/a1&gt;&lt;/c0&gt;&lt;i2&gt;mapping&lt;/i2&gt;&lt;c3&gt;&lt;/a4&gt;&lt;/c3&gt; 将文件区域直接包装到内存中来创建字节缓冲区，在这种情况下，可以使用 &lt;c5&gt;&lt;a6&gt;MappedByteBuffer&lt;/a6&gt;&lt;/c5&gt; 类中定义的几个其他文件相关的操作。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A byte buffer mapped to a file</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T102739Z" creationid="pingfangx" creationdate="20191011T102739Z">
        <seg>映射到文件的字节缓冲区</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A byte buffer provides access to its content as either a heterogeneous or homogeneous sequence of &lt;a0&gt;binary data&lt;/i1&gt;&lt;/a0&gt; of any non-boolean primitive type, in either big-endian or little-endian &lt;a2&gt;byte order&lt;/a2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T112134Z" creationid="pingfangx" creationdate="20191011T112101Z">
        <seg>字节缓冲区提供了对其内容的访问（其内容作为任何非布尔基本类型的异类或同类 &lt;a0&gt;二进制数据&lt;/i1&gt;&lt;/a0&gt; 序列），访问要么是以 big-endian 字节顺序进行，要么是以 little-endian &lt;a2&gt;字节顺序&lt;/a2&gt;进行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A byte buffer.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T114309Z" creationid="pingfangx" creationdate="20191011T114309Z">
        <seg>字节缓冲区。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A char buffer.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T114334Z" creationid="pingfangx" creationdate="20191011T114334Z">
        <seg>字符缓冲区。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A character stream that collects its output in a string buffer, which can then be used to construct a string.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T065334Z" creationid="pingfangx" creationdate="20191011T065334Z">
        <seg>一个字符流，可以用其回收在字符串缓冲区中的输出来构造字符串。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A character stream whose source is a string.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T053027Z" creationid="pingfangx" creationdate="20191011T053027Z">
        <seg>其源为一个字符串的字符流。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A character-stream reader that allows characters to be pushed back into the stream.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191010T102741Z" creationid="pingfangx" creationdate="20191010T102741Z">
        <seg>允许将字符推回到流的字符流 reader。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A class can implement the &lt;c0&gt;Observer&lt;/c0&gt; interface when it wants to be informed of changes in observable objects.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T034543Z" creationid="pingfangx" creationdate="20191012T034543Z">
        <seg>一个可在观察者要得到 observable 对象更改通知时可实现 &lt;c0&gt;Observer&lt;/c0&gt; 接口的类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A class implements the &lt;c0&gt;Cloneable&lt;/c0&gt; interface to indicate to the &lt;c1&gt;&lt;a2&gt;clone()&lt;/a2&gt;&lt;/c1&gt; method that it is legal for that method to make a field-for-field copy of instances of that class.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T065730Z" creationid="pingfangx" creationdate="20191012T065730Z">
        <seg>此类实现了 &lt;c0&gt;Cloneable&lt;/c0&gt; 接口，以指示 &lt;c1&gt;&lt;a2&gt;clone()&lt;/a2&gt;&lt;/c1&gt; 方法可以合法地对该类实例进行按字段复制。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A class loader is an object that is responsible for loading classes.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T071234Z" creationid="pingfangx" creationdate="20191012T071234Z">
        <seg>类加载器是负责加载类的对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A class that represents an immutable universally unique identifier (UUID).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T050227Z" creationid="pingfangx" creationdate="20191012T050227Z">
        <seg>表示通用唯一标识符 (UUID) 的类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A collection designed for holding elements prior to processing.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T034824Z" creationid="pingfangx" creationdate="20191012T034824Z">
        <seg>在处理元素前用于保存元素的 collection。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A collection that contains no duplicate elements.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T035109Z" creationid="pingfangx" creationdate="20191012T035109Z">
        <seg>一个不包含重复元素的 collection。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A common interface for all entities that declare type variables.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T091059Z" creationid="pingfangx" creationdate="20191012T091059Z">
        <seg>声明类型变量的所有实体的公共接口。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A comparison function, which imposes a &lt;i0&gt;total ordering&lt;/i0&gt; on some collection of objects.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T034340Z" creationid="pingfangx" creationdate="20191012T034340Z">
        <seg>强行对某个对象 collection 进行 &lt;i0&gt;整体排序&lt;/i0&gt; 的比较函数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A container for data of a specific primitive type.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T114308Z" creationid="pingfangx" creationdate="20191011T114308Z">
        <seg>一个用于特定基本类型数据的容器。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A container object which may or may not contain a &lt;c0&gt;double&lt;/c0&gt; value.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T045937Z" creationid="pingfangx" creationdate="20191012T045937Z">
        <seg>可能包含也可能不包含 &lt;c0&gt;double&lt;/c0&gt; 值的容器对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A container object which may or may not contain a &lt;c0&gt;int&lt;/c0&gt; value.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T045942Z" creationid="pingfangx" creationdate="20191012T045942Z">
        <seg>可能包含也可能不包含 &lt;c0&gt;int&lt;/c0&gt; 值的容器对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A container object which may or may not contain a &lt;c0&gt;long&lt;/c0&gt; value.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T045949Z" creationid="pingfangx" creationdate="20191012T045949Z">
        <seg>可能包含也可能不包含 &lt;c0&gt;long&lt;/c0&gt; 值的容器对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A container object which may or may not contain a non-null value.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T045914Z" creationid="pingfangx" creationdate="20191012T045914Z">
        <seg>可能包含也可能不包含非空值的容器对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A data input stream lets an application read primitive Java data types from an underlying input stream in a machine-independent way.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191010T094716Z" creationid="pingfangx" creationdate="20191010T094716Z">
        <seg>数据输入流允许应用程序以与机器无关方式从底层输入流中读取基本 Java 数据类型。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A data output stream lets an application write primitive Java data types to an output stream in a portable way.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191010T094724Z" creationid="pingfangx" creationdate="20191010T094724Z">
        <seg>数据输出流允许应用程序以适当方式将基本 Java 数据类型写入输出流中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A description of a Serializable field from a Serializable class.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191010T102649Z" creationid="pingfangx" creationdate="20191010T102649Z">
        <seg>Serializable 类中 Serializable 字段的描述。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A description of a to-be-instantiated KeyStore object.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T032301Z" creationid="pingfangx" creationdate="20191012T032301Z">
        <seg>将被实例化的 KeyStore 对象的描述。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A direct byte buffer whose content is a memory-mapped region of a file.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T114341Z" creationid="pingfangx" creationdate="20191011T114341Z">
        <seg>直接字节缓冲区，其内容是文件的内存映射区域。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A double buffer.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T114335Z" creationid="pingfangx" creationdate="20191011T114335Z">
        <seg>double 缓冲区。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A facility for threads to schedule tasks for future execution in a background thread.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T050210Z" creationid="pingfangx" creationdate="20191012T050210Z">
        <seg>一种工具，线程用其安排以后在后台线程中执行的任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A family of character subsets representing the character blocks in the Unicode specification.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T071223Z" creationid="pingfangx" creationdate="20191012T071223Z">
        <seg>表示 Unicode 规范中字符块的一系列字符子集。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A family of character subsets representing the character scripts defined in the &lt;a0&gt; &lt;i1&gt;Unicode Standard Annex #24: Script Names&lt;/i1&gt;&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T071956Z" creationid="pingfangx" creationdate="20191012T071956Z">
        <seg>表示 &lt;a0&gt; &lt;i1&gt;Unicode Standard Annex #24: Script Names&lt;/i1&gt;&lt;/a0&gt; 中定义的字符块的一系列字符子集。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A file output stream is an output stream for writing data to a &lt;c0&gt;File&lt;/c0&gt; or to a &lt;c1&gt;FileDescriptor&lt;/c1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191010T100316Z" creationid="pingfangx" creationdate="20191010T100316Z">
        <seg>文件输出流是用于将数据写入 &lt;c0&gt;File&lt;/c0&gt; 或 &lt;c1&gt;FileDescriptor&lt;/c1&gt; 的输出流。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A filter for abstract pathnames.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191010T094038Z" creationid="pingfangx" creationdate="20191010T094038Z">
        <seg>用于抽象路径名的过滤器。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A float buffer.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T114336Z" creationid="pingfangx" creationdate="20191011T114336Z">
        <seg>float 缓冲区。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A generator of uniform pseudorandom values applicable for use in (among other contexts) isolated parallel computations that may generate subtasks.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T050700Z" creationid="pingfangx" creationdate="20191012T050700Z">
        <seg>一种均匀伪随机值的生成器，适用于(在其它上下文中)可能生成子任务的独立并行计算。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A linear collection that supports element insertion and removal at both ends.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T034342Z" creationid="pingfangx" creationdate="20191012T034342Z">
        <seg>一个线性 collection，支持在两端插入和移除元素。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A long buffer.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T114339Z" creationid="pingfangx" creationdate="20191011T114339Z">
        <seg>long 缓冲区。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A map entry (key-value pair).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T034524Z" creationid="pingfangx" creationdate="20191012T034524Z">
        <seg>映射项（键-值对）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A marker interface for &lt;c0&gt;KeyStore&lt;/c0&gt; &lt;c1&gt;&lt;a2&gt;load&lt;/a2&gt;&lt;/c1&gt; and &lt;c3&gt;&lt;a4&gt;store&lt;/a4&gt;&lt;/c3&gt; parameters.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T152413Z" creationid="pingfangx" creationdate="20191011T152413Z">
        <seg>用于 &lt;c0&gt;KeyStore&lt;/c0&gt; &lt;c1&gt;&lt;a2&gt;load&lt;/a2&gt;&lt;/c1&gt; 和 &lt;c3&gt;&lt;a4&gt;store&lt;/a4&gt;&lt;/c3&gt; 参数的标记接口。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A marker interface for &lt;c0&gt;KeyStore&lt;/c0&gt; entry types.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T152410Z" creationid="pingfangx" creationdate="20191011T152410Z">
        <seg>用于 &lt;c0&gt;KeyStore&lt;/c0&gt; 项类型的标记接口。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A marker interface for keystore protection parameters.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T152414Z" creationid="pingfangx" creationdate="20191011T152414Z">
        <seg>用于 keystore 保护参数的标记接口。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A mutable sequence of characters.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T071710Z" creationid="pingfangx" creationdate="20191012T071710Z">
        <seg>一个可变的字符序列。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A new certificate handling package is created in the Java platform.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T152059Z" creationid="pingfangx" creationdate="20191011T152059Z">
        <seg>在 Java 平台中创建了新的证书处理包。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A newly-created object is strongly reachable by the thread that created it.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T090546Z" creationid="pingfangx" creationdate="20191012T090546Z">
        <seg>新创建的对象对于创建它的线程而言是强可到达对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A number of classes in the java.net package do provide for a much higher level of abstraction and allow for easy access to resources on the network.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T081019Z" creationid="pingfangx" creationdate="20191011T081019Z">
        <seg>java.net 包中的许多类可以提供更加高级的抽象，允许方便地访问网络上的资源。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A password-based implementation of &lt;c0&gt;ProtectionParameter&lt;/c0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T032304Z" creationid="pingfangx" creationdate="20191012T032304Z">
        <seg>&lt;c0&gt;ProtectionParameter&lt;/c0&gt; 的一个基于密码的实现。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A piped input stream should be connected to a piped output stream; the piped input stream then provides whatever data bytes are written to the piped output stream.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191010T102713Z" creationid="pingfangx" creationdate="20191010T102713Z">
        <seg>管道输入流应该连接到管道输出流；管道输入流提供要写入管道输出流的所有数据字节。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A piped output stream can be connected to a piped input stream to create a communications pipe.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191010T102715Z" creationid="pingfangx" creationdate="20191010T102715Z">
        <seg>可以将管道输出流连接到管道输入流来创建通信管道。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A private key.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T152422Z" creationid="pingfangx" creationdate="20191011T152422Z">
        <seg>私钥。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A program element annotated @Deprecated is one that programmers are discouraged from using, typically because it is dangerous, or because a better alternative exists.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T064828Z" creationid="pingfangx" creationdate="20191012T064828Z">
        <seg>用 @Deprecated 注释的程序元素，不鼓励程序员使用这样的元素，通常是因为它很危险或存在更好的选择。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A program element type.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T082759Z" creationid="pingfangx" creationdate="20191012T082759Z">
        <seg>程序元素类型。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A program may also arrange to be notified some time after the collector has determined that the reachability of a given object has changed.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T085457Z" creationid="pingfangx" creationdate="20191012T085457Z">
        <seg>程序还可以安排在回收器确定某一给定对象的可到达性已经更改之后的某个时间得到通知。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A program may further subclass these subclasses, adding whatever fields and methods are required for its purposes, or it may use these subclasses without change.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T085702Z" creationid="pingfangx" creationdate="20191012T085702Z">
        <seg>通过添加任何所需的字段和方法，程序可以为这些子类进一步创建子类，或者可以不加更改地使用这些子类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A program may request to be notified of changes in an object's reachability by &lt;e0&gt;registering&lt;/e0&gt; an appropriate reference object with a &lt;e1&gt;reference queue&lt;/e1&gt; at the time the reference object is created.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T085757Z" creationid="pingfangx" creationdate="20191012T085757Z">
        <seg>在创建引用对象时，通过向引用队列 &lt;e0&gt;注册&lt;/e0&gt; 一个适当的 &lt;e1&gt;引用对象&lt;/e1&gt;，程序可以请求在对象可到达性更改时获得通知。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A program may use a reference object to maintain a reference to some other object in such a way that the latter object may still be reclaimed by the collector.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T085454Z" creationid="pingfangx" creationdate="20191012T085454Z">
        <seg>程序可以使用一个引用对象来维持对另外某一对象的引用，所采用的方式是使后者仍然可以被回收器回收。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A programmer assertion that the body of the annotated method or constructor does not perform potentially unsafe operations on its varargs parameter.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T065053Z" creationid="pingfangx" creationdate="20191012T065053Z">
        <seg>程序员断言注解的方法或构造函数体不对其可变参数参数来执行潜在的不安全操作。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A public key.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T152426Z" creationid="pingfangx" creationdate="20191011T152426Z">
        <seg>公钥。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A resource that must be closed when it is no longer needed.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T065658Z" creationid="pingfangx" creationdate="20191012T065658Z">
        <seg>不再需要时必须关闭的资源。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A runtime exception for Provider exceptions (such as misconfiguration errors or unrecoverable internal errors), which may be subclassed by Providers to throw specialized, provider-specific runtime errors.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T032647Z" creationid="pingfangx" creationdate="20191012T032647Z">
        <seg>用于 Provider 异常(例如误配置错误或不可恢复的内部错误）的运行时异常，Provider 可以为它创建子类以抛出特殊的、特定于 provider 的运行时错误。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A short buffer.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T114353Z" creationid="pingfangx" creationdate="20191011T114353Z">
        <seg>short 缓冲区。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A simple interface which provides a mechanism to map between a file name and a MIME type string.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T083043Z" creationid="pingfangx" creationdate="20191011T083043Z">
        <seg>提供在文件名和 MIME 类型字符串之间进行映射的机制的简单接口。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A simple service-provider loading facility.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T050105Z" creationid="pingfangx" creationdate="20191012T050105Z">
        <seg>一个简单的服务提供者加载设施。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A simple text scanner which can parse primitive types and strings using regular expressions.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T050057Z" creationid="pingfangx" creationdate="20191012T050057Z">
        <seg>一个可以使用正则表达式来解析基本类型和字符串的简单文本扫描器。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A socket option associated with a socket.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T083122Z" creationid="pingfangx" creationdate="20191011T083122Z">
        <seg>与套接字关联的套接字选项。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A specialized &lt;c0&gt;&lt;a1&gt;Map&lt;/a1&gt;&lt;/c0&gt; implementation for use with enum type keys.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T045530Z" creationid="pingfangx" creationdate="20191012T045530Z">
        <seg>与枚举类型键一起使用的专用 &lt;c0&gt;&lt;a1&gt;Map&lt;/a1&gt;&lt;/c0&gt; 实现。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A specialized &lt;c0&gt;&lt;a1&gt;Set&lt;/a1&gt;&lt;/c0&gt; implementation for use with enum types.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T045535Z" creationid="pingfangx" creationdate="20191012T045535Z">
        <seg>与枚举类型一起使用的专用 &lt;c0&gt;&lt;a1&gt;Set&lt;/a1&gt;&lt;/c0&gt; 实现。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A state object for collecting statistics such as count, min, max, sum, and average.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T045528Z" creationid="pingfangx" creationdate="20191012T045528Z">
        <seg>一个状态对象，用于收集统计信息，如计数、最小值、最大值、总和和平均值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A tactic that often works well is to examine a reference queue in the course of performing some other fairly-frequent action.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T090252Z" creationid="pingfangx" creationdate="20191012T090252Z">
        <seg>一种通常很有用的策略是：在执行另一个相当频繁的操作期间检查引用队列。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A tagging interface that all event listener interfaces must extend.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T034345Z" creationid="pingfangx" creationdate="20191012T034345Z">
        <seg>所有事件侦听器接口必须扩展的标记接口。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A task that can be scheduled for one-time or repeated execution by a Timer.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T050211Z" creationid="pingfangx" creationdate="20191012T050211Z">
        <seg>由 Timer 安排为一次执行或重复执行的任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A thread group represents a set of threads.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T071725Z" creationid="pingfangx" creationdate="20191012T071725Z">
        <seg>线程组表示一个线程的集合。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A thread state.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T071958Z" creationid="pingfangx" creationdate="20191012T071958Z">
        <seg>线程状态。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A thread-safe, mutable sequence of characters.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T071706Z" creationid="pingfangx" creationdate="20191012T071706Z">
        <seg>线程安全的可变字符序列。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A transparent stream that updates the associated message digest using the bits going through the stream.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T031252Z" creationid="pingfangx" creationdate="20191012T031252Z">
        <seg>GuardedObject 是一个用来保护对另一个对象的访问的对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A typesafe enumeration for byte orders.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T114314Z" creationid="pingfangx" creationdate="20191011T114314Z">
        <seg>字节顺序的类型安全枚举。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>About IPv6</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T080423Z" creationid="pingfangx" creationdate="20191011T080423Z">
        <seg>关于 IPv6</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Abstract base class for reference objects.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T090711Z" creationid="pingfangx" creationdate="20191012T090711Z">
        <seg>引用对象的抽象基类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Abstract class for reading character streams.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191010T102749Z" creationid="pingfangx" creationdate="20191010T102749Z">
        <seg>用于读取字符流的抽象类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Abstract class for reading filtered character streams.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191010T100744Z" creationid="pingfangx" creationdate="20191010T100744Z">
        <seg>用于读取已过滤的字符流的抽象类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Abstract class for writing filtered character streams.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191010T100746Z" creationid="pingfangx" creationdate="20191010T100746Z">
        <seg>用于写入已过滤的字符流的抽象类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Abstract class for writing to character streams.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T065410Z" creationid="pingfangx" creationdate="20191011T065410Z">
        <seg>写入字符流的抽象类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Abstract datagram and multicast socket implementation base class.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T083156Z" creationid="pingfangx" creationdate="20191011T083156Z">
        <seg>数据报和多播套接字实现的抽象基类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Additional Specification</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T083019Z" creationid="pingfangx" creationdate="20191011T083019Z">
        <seg>其他规格</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Addresses</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T074527Z" creationid="pingfangx" creationdate="20191011T074527Z">
        <seg>地址</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Addresses are used throughout the java.net APIs as either host identifiers, or socket endpoint identifiers.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T074535Z" creationid="pingfangx" creationdate="20191011T074535Z">
        <seg>在整个 java.net API 中，地址或者用作主机标识符或者用作套接字端点标识符。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Although the JDBC&lt;s2&gt;&lt;f3&gt;TM&lt;/f3&gt;&lt;/s2&gt; API is mainly geared to passing SQL statements to a database, it provides for reading and writing data from any data source with a tabular format.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T032916Z" creationid="pingfangx" creationdate="20191012T032905Z">
        <seg>虽然 JDBC&lt;s2&gt;&lt;f3&gt;TM&lt;/f3&gt;&lt;/s2&gt; API 主要用于将 SQL 语句传递给数据库，但它还可以用于以表格方式从任何数据源中读写数据。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An &lt;c0&gt;AttributedCharacterIterator&lt;/c0&gt; allows iteration through both text and related attribute information.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T033148Z" creationid="pingfangx" creationdate="20191012T033148Z">
        <seg>&lt;c0&gt;AttributedCharacterIterator&lt;/c0&gt; 允许对文本和相关属性信息的迭代。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An &lt;c0&gt;Error&lt;/c0&gt; is a subclass of &lt;c1&gt;Throwable&lt;/c1&gt; that indicates serious problems that a reasonable application should not try to catch.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T073214Z" creationid="pingfangx" creationdate="20191012T073214Z">
        <seg>&lt;c0&gt;Error&lt;/c0&gt; 是 &lt;c1&gt;Throwable&lt;/c1&gt; 的子类，用于指示合理的应用程序不应该试图捕获的严重问题。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An Annotation object is used as a wrapper for a text attribute value if the attribute has annotation characteristics.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T033155Z" creationid="pingfangx" creationdate="20191012T033155Z">
        <seg>如果文本属性具有 annotation 特征，则 Annotation 对象用作文本属性值的包装器。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An AttributedString holds text and related attribute information.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T033159Z" creationid="pingfangx" creationdate="20191012T033159Z">
        <seg>AttributedString 保存文本及相关属性信息。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An Entry maintaining a key and a value.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T045100Z" creationid="pingfangx" creationdate="20191012T045100Z">
        <seg>维护键和值的 Entry。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An Entry maintaining an immutable key and value.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T045105Z" creationid="pingfangx" creationdate="20191012T045105Z">
        <seg>维护不可变的键和值的 Entry。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An HttpCookie object represents an http cookie, which carries state information between server and user agent.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T083158Z" creationid="pingfangx" creationdate="20191011T083158Z">
        <seg>HttpCookie 对象表示一个 http cookie，该 cookie 带有服务器和用户代理之间的状态信息。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An IllegalAccessException is thrown when an application tries to reflectively create an instance (other than an array), set or get a field, or invoke a method, but the currently executing method does not have access to the definition of the specified class, field, method or constructor.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T073008Z" creationid="pingfangx" creationdate="20191012T073008Z">
        <seg>当应用程序试图反射性地创建一个实例（而不是数组）、设置或获取一个字段，或者调用一个方法，但当前正在执行的方法无法访问指定类、字段、方法或构造方法的定义时，抛出 IllegalAccessException。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An InputStreamReader is a bridge from byte streams to character streams: It reads bytes and decodes them into characters using a specified &lt;c0&gt;&lt;a1&gt;&lt;c2&gt;charset&lt;/c2&gt;&lt;/a1&gt;&lt;/c0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191010T101638Z" creationid="pingfangx" creationdate="20191010T101638Z">
        <seg>InputStreamReader 是字节流通向字符流的桥梁：它使用指定的 &lt;c0&gt;&lt;a1&gt;&lt;c2&gt;charset&lt;/c2&gt;&lt;/a1&gt;&lt;/c0&gt; 读取字节并将其解码为字符。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An Iterator specialized for &lt;c0&gt;double&lt;/c0&gt; values.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T034808Z" creationid="pingfangx" creationdate="20191012T034808Z">
        <seg>一个专用于 &lt;c0&gt;double&lt;/c0&gt; 值的迭代器。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An Iterator specialized for &lt;c0&gt;int&lt;/c0&gt; values.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T034818Z" creationid="pingfangx" creationdate="20191012T034818Z">
        <seg>一个专用于 &lt;c0&gt;int&lt;/c0&gt; 值的迭代器。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An Iterator specialized for &lt;c0&gt;long&lt;/c0&gt; values.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T034822Z" creationid="pingfangx" creationdate="20191012T034822Z">
        <seg>一个专用于 &lt;c0&gt;long&lt;/c0&gt; 值的迭代器。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An ObjectInputStream deserializes primitive data and objects previously written using an ObjectOutputStream.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191010T102618Z" creationid="pingfangx" creationdate="20191010T102618Z">
        <seg>ObjectInputStream 对以前使用 ObjectOutputStream 写入的基本数据和对象进行反序列化。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An ObjectOutputStream writes primitive data types and graphs of Java objects to an OutputStream.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191010T102627Z" creationid="pingfangx" creationdate="20191010T102627Z">
        <seg>ObjectOutputStream 将 Java 对象的基本数据类型和图形写入 OutputStream。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An OutputStreamWriter is a bridge from character streams to byte streams: Characters written to it are encoded into bytes using a specified &lt;c0&gt;&lt;a1&gt;&lt;c2&gt;charset&lt;/c2&gt;&lt;/a1&gt;&lt;/c0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191010T102710Z" creationid="pingfangx" creationdate="20191010T102710Z">
        <seg>OutputStreamWriter 是字符流通向字节流的桥梁：可使用指定的 &lt;c0&gt;&lt;a1&gt;&lt;c2&gt;charset&lt;/c2&gt;&lt;/a1&gt;&lt;/c0&gt; 将要写入流中的字符编码成字节。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An abstract &lt;c0&gt;Spliterator.OfDouble&lt;/c0&gt; that implements &lt;c1&gt;trySplit&lt;/c1&gt; to permit limited parallelism.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T050743Z" creationid="pingfangx" creationdate="20191012T050743Z">
        <seg>一个抽象 &lt;c0&gt;Spliterator.OfDouble&lt;/c0&gt; 实现 &lt;c1&gt;trySplit&lt;/c1&gt; 以允许有限的并行性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An abstract &lt;c0&gt;Spliterator.OfInt&lt;/c0&gt; that implements &lt;c1&gt;trySplit&lt;/c1&gt; to permit limited parallelism.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T050741Z" creationid="pingfangx" creationdate="20191012T050741Z">
        <seg>一个抽象 &lt;c0&gt;Spliterator.OfInt&lt;/c0&gt; 实现 &lt;c1&gt;trySplit&lt;/c1&gt; 以允许有限的并行性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An abstract &lt;c0&gt;Spliterator.OfLong&lt;/c0&gt; that implements &lt;c1&gt;trySplit&lt;/c1&gt; to permit limited parallelism.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T050737Z" creationid="pingfangx" creationdate="20191012T050737Z">
        <seg>一个抽象 &lt;c0&gt;Spliterator.OfLong&lt;/c0&gt; 实现 &lt;c1&gt;trySplit&lt;/c1&gt; 以允许有限的并行性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An abstract &lt;c0&gt;Spliterator&lt;/c0&gt; that implements &lt;c1&gt;trySplit&lt;/c1&gt; to permit limited parallelism.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T050730Z" creationid="pingfangx" creationdate="20191012T050730Z">
        <seg>一个抽象 &lt;c0&gt;Spliterator&lt;/c0&gt; 实现 &lt;c1&gt;trySplit&lt;/c1&gt; 以允许有限的并行性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An abstract representation of file and directory pathnames.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191010T094737Z" creationid="pingfangx" creationdate="20191010T094737Z">
        <seg>文件和目录路径名的抽象表示形式。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An abstract wrapper class for an &lt;c0&gt;EventListener&lt;/c0&gt; class which associates a set of additional parameters with the listener.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T045550Z" creationid="pingfangx" creationdate="20191012T045550Z">
        <seg>将一组附加参数与侦听器关联的 &lt;c0&gt;EventListener&lt;/c0&gt; 类的抽象包装器类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An element in a stack trace, as returned by &lt;c0&gt;&lt;a1&gt;getStackTrace()&lt;/a1&gt;&lt;/c0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T071636Z" creationid="pingfangx" creationdate="20191012T071636Z">
        <seg>堆栈跟踪中的元素，它由 &lt;c0&gt;&lt;a1&gt;getStackTrace()&lt;/a1&gt;&lt;/c0&gt; 返回。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An enumeration of cryptographic primitives.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T032559Z" creationid="pingfangx" creationdate="20191012T032559Z">
        <seg>密码原语的枚举。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An immutable arbitrary-precision signed decimal.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T070509Z" creationid="pingfangx" creationdate="20191011T070509Z">
        <seg>不可变的、任意精度的有符号十进制数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An immutable arbitrary-precision signed integer.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T070840Z" creationid="pingfangx" creationdate="20191011T070513Z">
        <seg>不可变的、任意精度的有符号整数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An informative annotation type used to indicate that an interface type declaration is intended to be a &lt;i0&gt;functional interface&lt;/i0&gt; as defined by the Java Language Specification.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T064946Z" creationid="pingfangx" creationdate="20191012T064946Z">
        <seg>一种信息性注解类型，用于指示接口类型声明是由 Java 语言规范定义的 &lt;i0&gt;functional interface (函数式接口)&lt;/i0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An instance of &lt;c0&gt;ThreadDeath&lt;/c0&gt; is thrown in the victim thread when the (deprecated) &lt;c1&gt;&lt;a2&gt;stop()&lt;/a2&gt;&lt;/c1&gt; method is invoked.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T073423Z" creationid="pingfangx" creationdate="20191012T073423Z">
        <seg>实例 &lt;c0&gt;ThreadDeath&lt;/c0&gt; 在受害线程(废弃的) &lt;c1&gt;&lt;a2&gt;stop()&lt;/a2&gt;&lt;/c1&gt; 方法调用时抛出。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An instance of one of these subclasses encapsulates a single reference to a particular object, called the &lt;e3&gt;referent&lt;/e3&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T085642Z" creationid="pingfangx" creationdate="20191012T085642Z">
        <seg>其中一个子类的实例封装了对特定对象的引用，该对象名为 &lt;e3&gt;指示对象&lt;/e3&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An instance of this class is used to generate a stream of pseudorandom numbers.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T050050Z" creationid="pingfangx" creationdate="20191012T050050Z">
        <seg>此类的实例用于生成伪随机数流。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An int buffer.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T114338Z" creationid="pingfangx" creationdate="20191011T114338Z">
        <seg>int 缓冲区。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An interpreter for printf-style format strings.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T045623Z" creationid="pingfangx" creationdate="20191012T045623Z">
        <seg>printf 风格的格式字符串的解释程序。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An iterator for lists that allows the programmer to traverse the list in either direction, modify the list during iteration, and obtain the iterator's current position in the list.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T034519Z" creationid="pingfangx" creationdate="20191012T034519Z">
        <seg>系列表迭代器，允许程序员按任一方向遍历列表、迭代期间修改列表，并获得迭代器在列表中的当前位置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An iterator over a collection.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T034510Z" creationid="pingfangx" creationdate="20191012T034510Z">
        <seg>对 collection 进行迭代的迭代器。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An object for traversing and partitioning elements of a source.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T044846Z" creationid="pingfangx" creationdate="20191012T044846Z">
        <seg>用于遍历和划分源元素的对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An object is &lt;e0&gt;phantom reachable&lt;/e0&gt; if it is neither strongly, softly, nor weakly reachable, it has been finalized, and some phantom reference refers to it.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T090701Z" creationid="pingfangx" creationdate="20191012T090701Z">
        <seg>如果一个对象既不是强可到达对象，也不是软可到达对象或弱可到达对象，它已经终止，并且某个虚引用在引用它，则该对象是 &lt;e0&gt;虚可到达&lt;/e0&gt; 对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An object is &lt;e0&gt;softly reachable&lt;/e0&gt; if it is not strongly reachable but can be reached by traversing a soft reference.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T090654Z" creationid="pingfangx" creationdate="20191012T090654Z">
        <seg>如果一个对象不是强可到达对象，但通过遍历某一软引用可以到达它，则该对象是 &lt;e0&gt;软可到达&lt;/e0&gt; 对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An object is &lt;e0&gt;strongly reachable&lt;/e0&gt; if it can be reached by some thread without traversing any reference objects.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T090545Z" creationid="pingfangx" creationdate="20191012T090545Z">
        <seg>如果某一线程可以不必遍历所有引用对象而直接到达一个对象，则该对象是 &lt;e0&gt;强可到达&lt;/e0&gt; 对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An object is &lt;e0&gt;weakly reachable&lt;/e0&gt; if it is neither strongly nor softly reachable but can be reached by traversing a weak reference.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T090658Z" creationid="pingfangx" creationdate="20191012T090658Z">
        <seg>如果一个对象既不是强可到达对象，也不是软可到达对象，但通过遍历弱引用可以到达它，则该对象是 &lt;e0&gt;弱可到达&lt;/e0&gt; 对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An object of type &lt;c6&gt;Double&lt;/c6&gt;, for example, contains a field whose type is double, representing that value in such a way that a reference to it can be stored in a variable of reference type.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T061511Z" creationid="pingfangx" creationdate="20191012T061511Z">
        <seg>例如，一个 &lt;c6&gt;Double&lt;/c6&gt; 类型的对象包含了一个类型为 double 的字段，这表示如果引用某个值，则可以将该值存储在引用类型的变量中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An object that implements the Enumeration interface generates a series of elements, one at a time.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T034344Z" creationid="pingfangx" creationdate="20191012T034344Z">
        <seg>实现 Enumeration 接口的对象，它生成一系列元素，一次生成一个。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An object that is reachable via phantom references will remain so until all such references are cleared or themselves become unreachable.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T090537Z" creationid="pingfangx" creationdate="20191012T090537Z">
        <seg>通过虚引用可到达的对象将仍然保持原状，直到所有这类引用都被清除，或者它们都变得不可到达。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An object that maps keys to values.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T034522Z" creationid="pingfangx" creationdate="20191012T034522Z">
        <seg>将键映射到值的对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An object to which &lt;t0&gt;char&lt;/t0&gt; sequences and values can be appended.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T065648Z" creationid="pingfangx" creationdate="20191012T065648Z">
        <seg>能够被添加 &lt;t0&gt;char&lt;/t0&gt; 序列和值的对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An ordered collection (also known as a &lt;i0&gt;sequence&lt;/i0&gt;).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T034517Z" creationid="pingfangx" creationdate="20191012T034517Z">
        <seg>有序的 collection（也称为 &lt;i0&gt;序列&lt;/i0&gt; ）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An unbounded priority &lt;a0&gt;queue&lt;/a0&gt;&lt;/a1&gt; based on a priority heap.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T050012Z" creationid="pingfangx" creationdate="20191012T050012Z">
        <seg>一个基于优先级堆的无界优先级 &lt;a0&gt;队列&lt;/a0&gt;&lt;/a1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Android 6.0 r1 —</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T114411Z" creationid="pingfangx" creationdate="20191011T114411Z">
        <seg>Android 6.0 r1 —</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Annotation retention policy.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T082801Z" creationid="pingfangx" creationdate="20191012T082801Z">
        <seg>注释保留策略。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Annotations</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T064813Z" creationid="pingfangx" creationdate="20191012T064813Z">
        <seg>注解</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Apps</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T114426Z" creationid="pingfangx" creationdate="20191011T114426Z">
        <seg>Apps</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Apps &amp; Games</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T114427Z" creationid="pingfangx" creationdate="20191011T114427Z">
        <seg>Apps &amp; Games</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As mentioned, URL and URLConnection rely on protocol handlers which must be present, otherwise an Exception is thrown.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T082846Z" creationid="pingfangx" creationdate="20191011T082846Z">
        <seg>如上所述，URL 和 URLConnection 都依赖于协议处理程序，所以协议处理程序必须存在；否则将抛出异常。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As of JDK 1.1, the preferred way to create a stream from a string is via the &lt;c1&gt;StringReader&lt;/c1&gt; class.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T052947Z" creationid="pingfangx" creationdate="20191011T052947Z">
        <seg>从 JDK 1.1 开始，从字符串创建流的首选方法是通过 &lt;c1&gt;StringReader&lt;/c1&gt; 类进行创建。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As of JDK 1.1, the preferred way to operate on character streams is via the new character-stream classes, which include a class for counting line numbers.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191010T101816Z" creationid="pingfangx" creationdate="20191010T101816Z">
        <seg>从 JDK 1.1 开始，对字符流操作的首选方法是通过新字符流类（其中包括计算行号的类）进行操作。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As the name indicates, this is just an Identifier and doesn't provide directly the means to access the resource.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T081109Z" creationid="pingfangx" creationdate="20191011T081109Z">
        <seg>顾名思义，它只是一个标识符，不直接提供访问资源的方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Aside from the clearing operation reference objects are otherwise immutable, so no &lt;c4&gt;set&lt;/c4&gt; operation is provided.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T085658Z" creationid="pingfangx" creationdate="20191012T085658Z">
        <seg>引用对象是不可变的，因此，除了清除操作之外，没有提供 &lt;c4&gt;set&lt;/c4&gt; 操作。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>At this point, the reference is considered to be &lt;e2&gt;enqueued&lt;/e2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T085804Z" creationid="pingfangx" creationdate="20191012T085804Z">
        <seg>此时，该引用被认为是 &lt;e2&gt;已加入队列的&lt;/e2&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Automatically-cleared references</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T090527Z" creationid="pingfangx" creationdate="20191012T090527Z">
        <seg>自动清除引用</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Bahasa Indonesia</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T114415Z" creationid="pingfangx" creationdate="20191011T114415Z">
        <seg>Bahasa Indonesia</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Base class for character conversion exceptions.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T065421Z" creationid="pingfangx" creationdate="20191011T065421Z">
        <seg>用于字符转换异常的基类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Because the &lt;c3&gt;&lt;c4&gt;&lt;a5&gt;ReferenceQueue.poll&lt;/a5&gt;&lt;/c4&gt;&lt;/c3&gt; method simply checks an internal data structure, this check will add little overhead to the hashtable access methods.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T090457Z" creationid="pingfangx" creationdate="20191012T090457Z">
        <seg>因为 &lt;c3&gt;&lt;c4&gt;&lt;a5&gt;ReferenceQueue.poll&lt;/a5&gt;&lt;/c4&gt;&lt;/c3&gt; 方法仅仅检查内部数据结构，此检查只为哈希表访问方法增加了很小的系统开销。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Buffers</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T102719Z" creationid="pingfangx" creationdate="20191011T102719Z">
        <seg>缓冲区</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>But, in most cases, there is no need to deal directly with the subclasses, as the InetAddress abstraction should cover most of the needed functionality.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T080421Z" creationid="pingfangx" creationdate="20191011T080421Z">
        <seg>但是，在大多数情况下，不必直接处理子类，因为 InetAddress 抽象应该覆盖大多数必需的功能。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>By default the protocol handlers are loaded dynamically from the default location.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T082902Z" creationid="pingfangx" creationdate="20191011T082902Z">
        <seg>默认情况下，协议处理程序从默认位置动态加载。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Byte buffers are distinguished in that they can be used as the sources and targets of I/O operations.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T111732Z" creationid="pingfangx" creationdate="20191011T111732Z">
        <seg>因为字节缓冲区可以用作 I/O 操作的源缓冲区和目标缓冲区，所以可以对它们加以区分。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Callback interface to allow validation of objects within a graph.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191010T094548Z" creationid="pingfangx" creationdate="20191010T094548Z">
        <seg>允许验证图形中对象的回调接口。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Character Encodings</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T063059Z" creationid="pingfangx" creationdate="20191012T063059Z">
        <seg>字符编码</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Checked exception thrown to indicate that a string could not be parsed as a URI reference.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T083542Z" creationid="pingfangx" creationdate="20191011T083542Z">
        <seg>抛出经过检查的指示字符串不能解析为 URI 引用的异常。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Class &lt;c0&gt;Object&lt;/c0&gt; is the root of the class hierarchy.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T071455Z" creationid="pingfangx" creationdate="20191012T071455Z">
        <seg>类 &lt;c0&gt;Object&lt;/c0&gt; 是类层次结构的根类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Class &lt;c0&gt;Throwable&lt;/c0&gt; encompasses objects that may be thrown by the &lt;c1&gt;throw&lt;/c1&gt; statement.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T063114Z" creationid="pingfangx" creationdate="20191012T062954Z">
        <seg>类 &lt;c0&gt;Throwable&lt;/c0&gt; 包含了可能由 &lt;c1&gt;throw&lt;/c1&gt; 语句抛出的对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Class &lt;c0&gt;URL&lt;/c0&gt; represents a Uniform Resource Locator, a pointer to a "resource" on the World Wide Web.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T083405Z" creationid="pingfangx" creationdate="20191011T083405Z">
        <seg>类 &lt;c0&gt;URL&lt;/c0&gt; 代表一个统一资源定位符，它是指向互联网“资源”的指针。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Classes</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191010T094558Z" creationid="pingfangx" creationdate="20191010T094558Z">
        <seg>类</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Classes &lt;c0&gt;ClassLoader&lt;/c0&gt;, &lt;c1&gt;Process&lt;/c1&gt;, &lt;c2&gt;ProcessBuilder&lt;/c2&gt;, &lt;c3&gt;Runtime&lt;/c3&gt;, &lt;c4&gt;SecurityManager&lt;/c4&gt;, and &lt;c5&gt;System&lt;/c5&gt; provide "system operations" that manage the dynamic loading of classes, creation of external processes, host environment inquiries such as the time of day, and enforcement of security policies.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T062936Z" creationid="pingfangx" creationdate="20191012T062841Z">
        <seg>类 &lt;c0&gt;ClassLoader&lt;/c0&gt;、&lt;c1&gt;Process&lt;/c1&gt;、 &lt;c2&gt;ProcessBuilder&lt;/c2&gt;、&lt;c3&gt;Runtime&lt;/c3&gt;、&lt;c4&gt;SecurityManager&lt;/c4&gt; 和 &lt;c5&gt;System&lt;/c5&gt; 提供了管理类的动态加载、外部进程创建、主机环境查询（比如时间）和安全策略实施等“系统操作”。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Classes for formatting and parsing</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T033114Z" creationid="pingfangx" creationdate="20191012T033114Z">
        <seg>用于格式化和分析的类</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Classes for iteration over text</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T033113Z" creationid="pingfangx" creationdate="20191012T033113Z">
        <seg>用于迭代文本的类</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Classes for string collation</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T033118Z" creationid="pingfangx" creationdate="20191012T033118Z">
        <seg>用于整理字符串的类</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Classes in this package, along with &lt;c0&gt;java.lang.Class&lt;/c0&gt; accommodate applications such as debuggers, interpreters, object inspectors, class browsers, and services such as Object Serialization and JavaBeans that need access to either the public members of a target object (based on its runtime class) or the members declared by a given class.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T091039Z" creationid="pingfangx" creationdate="20191012T091039Z">
        <seg>此包中的类以及 &lt;c0&gt;java.lang.Class&lt;/c0&gt; 可以适应以下应用程序的需要：调试程序、解释程序、对象检查程序、类浏览程序，以及服务（比如，Object Serialization 和 JavaBean，它们需要访问目标对象（基于其运行时类）的公共成员或给定类声明的成员）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Common superclass of exceptions thrown by reflective operations in core reflection.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T073121Z" creationid="pingfangx" creationdate="20191012T073121Z">
        <seg>通过反射操作核心反射抛出的异常的通用超类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Company / developer name</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T114424Z" creationid="pingfangx" creationdate="20191011T114424Z">
        <seg>Company / developer name</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Constants written into the Object Serialization Stream.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191010T094553Z" creationid="pingfangx" creationdate="20191010T094553Z">
        <seg>写入 Object Serialization Stream 的常量。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Contains the collections framework, legacy collection classes, event model, date and time facilities, internationalization, and miscellaneous utility classes (a string tokenizer, a random-number generator, and a bit array).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T034323Z" creationid="pingfangx" creationdate="20191012T034323Z">
        <seg>包含 collection 框架、遗留的 collection 类、事件模型、日期和时间设施、国际化和各种实用工具类（字符串标记生成器、随机数生成器和位数组）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Convenience class for reading character files.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191010T100346Z" creationid="pingfangx" creationdate="20191010T100346Z">
        <seg>用来读取字符文件的便捷类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Convenience class for writing character files.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191010T100350Z" creationid="pingfangx" creationdate="20191010T100350Z">
        <seg>用来写入字符文件的便捷类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>CookieManager provides a concrete implementation of &lt;c0&gt;&lt;a1&gt;CookieHandler&lt;/a1&gt;&lt;/c0&gt;, which separates the storage of cookies from the policy surrounding accepting and rejecting cookies.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T083152Z" creationid="pingfangx" creationdate="20191011T083152Z">
        <seg>CookieManager 提供 &lt;c0&gt;&lt;a1&gt;CookieHandler&lt;/a1&gt;&lt;/c0&gt; 的具体实现，它将 cookie 的存储区与围绕接受和拒绝 cookie 的策略分离开来。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>CookiePolicy implementations decide which cookies should be accepted and which should be rejected.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T083038Z" creationid="pingfangx" creationdate="20191011T083038Z">
        <seg>CookiePolicy 实现决定应该接受哪个 cookie 以及应该拒绝哪个 cookie。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Defines attribute keys that are used to identify text attributes.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T033156Z" creationid="pingfangx" creationdate="20191012T033156Z">
        <seg>定义用于标识文本属性的属性键。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Defines buffers, which are containers for data, and provides an overview of the other NIO packages.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T083701Z" creationid="pingfangx" creationdate="20191011T083701Z">
        <seg>定义作为数据容器的缓冲区，并提供其他 NIO 包的概述。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Defines constants that are used as attribute keys in the &lt;c0&gt;AttributedCharacterIterator&lt;/c0&gt; returned from &lt;c1&gt;DateFormat.formatToCharacterIterator&lt;/c1&gt; and as field identifiers in &lt;c2&gt;FieldPosition&lt;/c2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T033419Z" creationid="pingfangx" creationdate="20191012T033419Z">
        <seg>定义了各种常量，这些常量用作 &lt;c0&gt;DateFormat.formatToCharacterIterator&lt;/c0&gt; 所返回的 &lt;c1&gt;AttributedCharacterIterator&lt;/c1&gt; 中的属性键和 &lt;c2&gt;FieldPosition&lt;/c2&gt; 中的字段标识符。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Defines constants that are used as attribute keys in the &lt;c0&gt;AttributedCharacterIterator&lt;/c0&gt; returned from &lt;c1&gt;Format.formatToCharacterIterator&lt;/c1&gt; and as field identifiers in &lt;c2&gt;FieldPosition&lt;/c2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T033432Z" creationid="pingfangx" creationdate="20191012T033432Z">
        <seg>定义在 &lt;c0&gt;AttributedCharacterIterator&lt;/c0&gt; （从 &lt;c1&gt;Format.formatToCharacterIterator&lt;/c1&gt; 返回）中用作属性键和在 &lt;c2&gt;FieldPosition&lt;/c2&gt; 中用作字段标识符的常量。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Defines constants that are used as attribute keys in the &lt;c0&gt;AttributedCharacterIterator&lt;/c0&gt; returned from &lt;c1&gt;MessageFormat.formatToCharacterIterator&lt;/c1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T033438Z" creationid="pingfangx" creationdate="20191012T033438Z">
        <seg>在从 &lt;c0&gt;MessageFormat.formatToCharacterIterator&lt;/c0&gt; 返回的 &lt;c1&gt;AttributedCharacterIterator&lt;/c1&gt; 中定义用作属性键的常量。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Defines constants that are used as attribute keys in the &lt;c0&gt;AttributedCharacterIterator&lt;/c0&gt; returned from &lt;c1&gt;NumberFormat.formatToCharacterIterator&lt;/c1&gt; and as field identifiers in &lt;c2&gt;FieldPosition&lt;/c2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T033443Z" creationid="pingfangx" creationdate="20191012T033443Z">
        <seg>定义将用作从 &lt;c0&gt;NumberFormat.formatToCharacterIterator&lt;/c0&gt; 返回的 &lt;c1&gt;AttributedCharacterIterator&lt;/c1&gt; 中属性键以及 &lt;c2&gt;FieldPosition&lt;/c2&gt; 中字段标识符的常量。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Defines the &lt;e0&gt;standard&lt;/e0&gt; socket options.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T083402Z" creationid="pingfangx" creationdate="20191011T083402Z">
        <seg>定义了 &lt;e0&gt;standard (标准)&lt;/e0&gt; 插座选项。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Defines the standard families of communication protocols.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T083428Z" creationid="pingfangx" creationdate="20191011T083428Z">
        <seg>定义的通信协议标准的家族。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Description</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T102720Z" creationid="pingfangx" creationdate="20191011T102720Z">
        <seg>描述</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Does nothing on Android.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T071246Z" creationid="pingfangx" creationdate="20191012T071246Z">
        <seg>在 Android 上什么都不做。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Doubly-linked list implementation of the &lt;c0&gt;List&lt;/c0&gt; and &lt;c1&gt;Deque&lt;/c1&gt; interfaces.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T045744Z" creationid="pingfangx" creationdate="20191012T045744Z">
        <seg>&lt;c0&gt;List&lt;/c0&gt; 和 &lt;c1&gt;Deque&lt;/c1&gt; 接口的双链表实现。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Each class defines a family of &lt;i0&gt;get&lt;/i0&gt; and &lt;i1&gt;put&lt;/i1&gt; methods for moving data out of and in to a buffer, methods for &lt;i2&gt;compacting&lt;/i2&gt;, &lt;i3&gt;duplicating&lt;/i3&gt;, and &lt;i4&gt;slicing&lt;/i4&gt; a buffer, and static methods for &lt;i5&gt;allocating&lt;/i5&gt; a new buffer as well as for &lt;i6&gt;wrapping&lt;/i6&gt; an existing array into a buffer.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T114212Z" creationid="pingfangx" creationdate="20191011T114212Z">
        <seg>每个类定义了一系列用于将数据移出或移入缓冲区的 &lt;i0&gt;get&lt;/i0&gt; 和 &lt;i1&gt;put&lt;/i1&gt; 方法，用于 &lt;i2&gt;压缩&lt;/i2&gt; 、 &lt;i3&gt;复制&lt;/i3&gt; 和 &lt;i4&gt;切片&lt;/i4&gt; 缓冲区的方法，以及用于 &lt;i5&gt;分配&lt;/i5&gt; 新缓冲区和将现有数组 &lt;i6&gt;包装&lt;/i6&gt; 到缓冲区中的静态方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Each of these subpackages has its own service-provider (SPI) subpackage, the contents of which can be used to extend the platform's default implementations or to construct alternative implementations.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T102632Z" creationid="pingfangx" creationdate="20191011T102632Z">
        <seg>每个子包都具有自己的服务提供者接口 (SPI) 子包，SPI 子包的内容可用于扩展平台的默认实现或构造替代实现。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Each reference-object type is implemented by a subclass of the abstract base &lt;c0&gt;&lt;c1&gt;&lt;a2&gt;Reference&lt;/a2&gt;&lt;/c1&gt;&lt;/c0&gt; class.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T085631Z" creationid="pingfangx" creationdate="20191012T085631Z">
        <seg>每种引用对象类型都是通过抽象的基本 &lt;c0&gt;&lt;c1&gt;&lt;a2&gt;Reference&lt;/a2&gt;&lt;/c1&gt;&lt;/c0&gt; 类的一个子类实现的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Each type corresponds to a different level of reachability, as defined below.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T085547Z" creationid="pingfangx" creationdate="20191012T085547Z">
        <seg>正如下面定义的那样，每种类型对应于一个不同的可到达性级别。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Email address</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T114423Z" creationid="pingfangx" creationdate="20191011T114423Z">
        <seg>Email address</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>English</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T114413Z" creationid="pingfangx" creationdate="20191011T114413Z">
        <seg>English</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Enum for locale categories.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T050337Z" creationid="pingfangx" creationdate="20191012T050329Z">
        <seg>语言环境类别的枚举。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Enums</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T070705Z" creationid="pingfangx" creationdate="20191011T070705Z">
        <seg>枚举</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Error thrown when something goes wrong while loading a service provider.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T050600Z" creationid="pingfangx" creationdate="20191012T050600Z">
        <seg>在加载服务提供者的过程中出错时抛出的错误。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Errors</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T065635Z" creationid="pingfangx" creationdate="20191011T065635Z">
        <seg>错误</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Español</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T114414Z" creationid="pingfangx" creationdate="20191011T114414Z">
        <seg>Español</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Every Java application has a single instance of class &lt;c0&gt;Runtime&lt;/c0&gt; that allows the application to interface with the environment in which the application is running.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T071555Z" creationid="pingfangx" creationdate="20191012T071555Z">
        <seg>每个 Java 应用程序都有一个 &lt;c0&gt;Runtime&lt;/c0&gt; 类实例，使应用程序能够与其运行的环境相连接。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Every reference object provides methods for getting and clearing the reference.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T085651Z" creationid="pingfangx" creationdate="20191012T085651Z">
        <seg>每个引用对象都提供了获取和清除该引用的方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Except as noted, this content is licensed under &lt;a0&gt;Apache 2.0&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T114410Z" creationid="pingfangx" creationdate="20191011T114410Z">
        <seg>Except as noted, this content is licensed under &lt;a0&gt;Apache 2.0&lt;/a0&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Exception indicating the failure of an object read operation due to unread primitive data, or the end of data belonging to a serialized object in the stream.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T065523Z" creationid="pingfangx" creationdate="20191011T065523Z">
        <seg>指示对象读取操作失败的异常，原因是无法读取流中的基本数据或已序列化对象的数据末尾。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Exceptions</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T065411Z" creationid="pingfangx" creationdate="20191011T065411Z">
        <seg>异常</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Finally, an object is &lt;e0&gt;unreachable&lt;/e0&gt;, and therefore eligible for reclamation, when it is not reachable in any of the above ways.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T090705Z" creationid="pingfangx" creationdate="20191012T090705Z">
        <seg>最后，当不能以上述任何方法到达某一对象时，该对象是 &lt;e0&gt;不可到达&lt;/e0&gt; 对象，因此可以回收此对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Finally, this package provides classes that support signed/guarded objects and secure random number generation.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T151949Z" creationid="pingfangx" creationdate="20191011T151949Z">
        <seg>最后，此包提供支持 signed/guarded 对象和安全随机数生成的对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>FomattableFlags are passed to the &lt;c0&gt;&lt;a1&gt;Formattable.formatTo()&lt;/a1&gt;&lt;/c0&gt; method and modify the output format for &lt;a2&gt;Formattables&lt;/a2&gt;&lt;/a3&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T045620Z" creationid="pingfangx" creationdate="20191012T045620Z">
        <seg>将 FomattableFlags 传递给 &lt;c0&gt;&lt;a1&gt;Formattable.formatTo()&lt;/a1&gt;&lt;/c0&gt; 方法，并修改 &lt;a2&gt;Formattables&lt;/a2&gt;&lt;/a3&gt; 的输出格式。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For details and restrictions, see the &lt;a1&gt; Content License&lt;/a1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T114410Z" creationid="pingfangx" creationdate="20191011T114410Z">
        <seg>For details and restrictions, see the &lt;a1&gt; Content License&lt;/a1&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, a hashtable that uses weak references to implement weak keys could poll its reference queue each time the table is accessed.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T090255Z" creationid="pingfangx" creationdate="20191012T090255Z">
        <seg>例如，使用弱引用来实现弱键的哈希表能在每次访问表时轮询其引用队列。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For further documentation, please see:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T152025Z" creationid="pingfangx" creationdate="20191011T152025Z">
        <seg>有关进一步文档，请参阅：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For instance if it is set to &lt;c1&gt;myapp.protocols&lt;/c1&gt;, then the URL code will try, in the case of http, first to load &lt;c2&gt;myapp.protocols.http.Handler&lt;/c2&gt;, then, if this fails, &lt;c3&gt;http.Handler&lt;/c3&gt; from the default location.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T082906Z" creationid="pingfangx" creationdate="20191011T082906Z">
        <seg>例如，如果将其设置为 &lt;c1&gt;myapp.protocols&lt;/c1&gt;，则 URL 代码将首先尝试（对于 http 而言）加载 &lt;c2&gt;myapp.protocols.http.Handler&lt;/c2&gt;，然后，如果失败，则尝试从默认位置加载 &lt;c3&gt;http.Handler&lt;/c3&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For overviews, tutorials, examples, guides, and tool documentation, please see:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191010T085358Z" creationid="pingfangx" creationdate="20191010T085358Z">
        <seg>有关概述、教程、示例、指南和工具文档的信息，请参阅：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Frequently it is necessary to represent a value of primitive type as if it were an object.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T061440Z" creationid="pingfangx" creationdate="20191012T061440Z">
        <seg>把基本类型的值当成一个对象来表示通常很有必要。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>From that URL, you can either get the &lt;c4&gt;&lt;a5&gt;URLConnection&lt;/a5&gt;&lt;/c4&gt; for fine control, or get directly the InputStream.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T082828Z" creationid="pingfangx" creationdate="20191011T082828Z">
        <seg>从该 URL 可以获取 &lt;c4&gt;&lt;a5&gt;URLConnection&lt;/a5&gt;&lt;/c4&gt; 以进行良好控制，也可以直接获取 InputStream。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Full name</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T114421Z" creationid="pingfangx" creationdate="20191011T114421Z">
        <seg>Full name</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Games</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T114426Z" creationid="pingfangx" creationdate="20191011T114426Z">
        <seg>Games</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Get news &amp; tips</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T083551Z" creationid="pingfangx" creationdate="20191011T083551Z">
        <seg>获取新闻和提示</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Get/put, compact, views; allocate, wrap</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T102735Z" creationid="pingfangx" creationdate="20191011T102735Z">
        <seg>Get/put，压缩，查看；分配，包装</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Get/put, compact; allocate, wrap</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T102741Z" creationid="pingfangx" creationdate="20191011T102741Z">
        <seg>Get/put，压缩；分配，包装</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Going from strongest to weakest, the different levels of reachability reflect the life cycle of an object.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T090540Z" creationid="pingfangx" creationdate="20191012T090540Z">
        <seg>从最强到最弱，不同的可到达性级别反映了对象的生命周期。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Hash table and linked list implementation of the &lt;t0&gt;Map&lt;/t0&gt; interface, with predictable iteration order.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T045710Z" creationid="pingfangx" creationdate="20191012T045710Z">
        <seg>&lt;t0&gt;Map&lt;/t0&gt; 接口的哈希表和链接列表实现，具有可预知的迭代顺序。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Hash table and linked list implementation of the &lt;t0&gt;Set&lt;/t0&gt; interface, with predictable iteration order.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T045713Z" creationid="pingfangx" creationdate="20191012T045713Z">
        <seg>具有可预知迭代顺序的 &lt;t0&gt;Set&lt;/t0&gt; 接口的哈希表和链接列表实现。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Hash table based implementation of the &lt;t0&gt;Map&lt;/t0&gt; interface, with &lt;e1&gt;weak keys&lt;/e1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T050316Z" creationid="pingfangx" creationdate="20191012T050316Z">
        <seg>以 &lt;e1&gt;弱键&lt;/e1&gt; 实现的基于哈希表的 &lt;t0&gt;Map&lt;/t0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Hash table based implementation of the &lt;t0&gt;Map&lt;/t0&gt; interface.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T045633Z" creationid="pingfangx" creationdate="20191012T045633Z">
        <seg>基于哈希表的 &lt;t0&gt;Map&lt;/t0&gt; 接口的实现。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here is an example:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T082830Z" creationid="pingfangx" creationdate="20191011T082830Z">
        <seg>下面是一个示例：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>High level API</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T081017Z" creationid="pingfangx" creationdate="20191011T081017Z">
        <seg>高级 API</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Hooray!</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T114420Z" creationid="pingfangx" creationdate="20191011T114420Z">
        <seg>Hooray!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>I/O&lt;/a0&gt; facility.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T102050Z" creationid="pingfangx" creationdate="20191011T102050Z">
        <seg>I/O&lt;/a0&gt; 族。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If a registered reference becomes unreachable itself, then it will never be enqueued.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T090236Z" creationid="pingfangx" creationdate="20191012T090236Z">
        <seg>如果一个已注册的引用本身变得不可到达，则永远不会将它加入到队列中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Immutable objects describing settings such as rounding mode and digit precision for the numerical operations provided by class &lt;c0&gt;&lt;a1&gt;BigDecimal&lt;/a1&gt;&lt;/c0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T070654Z" creationid="pingfangx" creationdate="20191011T070654Z">
        <seg>描述由 &lt;c0&gt;&lt;a1&gt;BigDecimal&lt;/a1&gt;&lt;/c0&gt; 类提供的数值运算的舍入模式和数字精度等设置的不可变对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Implementing this interface allows an object to be the target of the "for-each loop" statement.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T065851Z" creationid="pingfangx" creationdate="20191012T065851Z">
        <seg>实现这个接口允许对象成为 "for-each 循环" 语句的目标。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In addition to its content a buffer has a &lt;i1&gt;position&lt;/i1&gt;, which is the index of the next element to be read or written, and a &lt;i2&gt;limit&lt;/i2&gt;, which is the index of the first element that should not be read or written.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T110800Z" creationid="pingfangx" creationdate="20191011T110800Z">
        <seg>除内容之外，缓冲区还具有 &lt;i1&gt;位置&lt;/i1&gt; 和 &lt;i2&gt;界限&lt;/i2&gt;，其中位置是要读写的下一个元素的索引，界限是第一个应该读写的元素的索引。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In the case where IPv6 is not available, or explicitly disabled, Inet6Address are not valid arguments for most networking operations any more.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T080432Z" creationid="pingfangx" creationdate="20191011T080432Z">
        <seg>在 IPv6 不可用或被显式禁用的情况下，Inet6Address 对大多数网络连接操作都不再是有效参数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In which case, most methods, when called with an Inet6Address will throw an Exception.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T080454Z" creationid="pingfangx" creationdate="20191011T080454Z">
        <seg>在此情况下，大多数方法在使用 Inet6Address 调用时都将抛出异常。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Indicates how long annotations with the annotated type are to be retained.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T082754Z" creationid="pingfangx" creationdate="20191012T082720Z">
        <seg>指示注释类型的注释要保留多久。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Indicates that a method declaration is intended to override a method declaration in a supertype.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T065020Z" creationid="pingfangx" creationdate="20191012T065020Z">
        <seg>表示一个方法声明打算重写超类中的另一个方法声明。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Indicates that an annotation type is automatically inherited.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T082731Z" creationid="pingfangx" creationdate="20191012T082607Z">
        <seg>指示注释类型被自动继承。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Indicates that annotations with a type are to be documented by javadoc and similar tools by default.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T082730Z" creationid="pingfangx" creationdate="20191012T082558Z">
        <seg>指示某一类型的注释将通过 javadoc 和类似的默认工具进行文档化。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Indicates that one or more deserialized objects failed validation tests.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T065505Z" creationid="pingfangx" creationdate="20191011T065505Z">
        <seg>指示一个或多个反序列化对象未通过验证测试。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Indicates that the named compiler warnings should be suppressed in the annotated element (and in all program elements contained in the annotated element).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T065056Z" creationid="pingfangx" creationdate="20191012T065056Z">
        <seg>指示应该在注释元素（以及包含在该注释元素中的所有程序元素）中取消显示指定的编译器警告。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Indicates the kinds of program element to which an annotation type is applicable.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T082726Z" creationid="pingfangx" creationdate="20191012T082726Z">
        <seg>指示注释类型所适用的程序元素的种类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Instances of classes that implement this interface are used to filter filenames.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191010T094042Z" creationid="pingfangx" creationdate="20191010T094042Z">
        <seg>实现此接口的类实例可用于过滤器文件名。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Instances of the class &lt;c0&gt;Class&lt;/c0&gt; represent classes and interfaces in a running Java application.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T071229Z" creationid="pingfangx" creationdate="20191012T071229Z">
        <seg>&lt;c0&gt;Class&lt;/c0&gt; 类的实例表示正在运行的 Java 应用程序中的类和接口。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Instances of the file descriptor class serve as an opaque handle to the underlying machine-specific structure representing an open file, an open socket, or another source or sink of bytes.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191010T094742Z" creationid="pingfangx" creationdate="20191010T094742Z">
        <seg>文件描述符类的实例用作与基础机器有关的某种结构的不透明句柄，该结构表示开放文件、开放套接字或者字节的另一个源或接收者。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Instances of this class represent particular subsets of the Unicode character set.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T071221Z" creationid="pingfangx" creationdate="20191012T071221Z">
        <seg>此类的实例表示 Unicode 字符集的特定子集。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Instances of this class support both reading and writing to a random access file.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191010T102743Z" creationid="pingfangx" creationdate="20191010T102743Z">
        <seg>此类的实例支持对随机访问文件的读取和写入。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Interface for handlers invoked when a &lt;t0&gt;Thread&lt;/t0&gt; abruptly terminates due to an uncaught exception.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T070031Z" creationid="pingfangx" creationdate="20191012T070031Z">
        <seg>当 &lt;t0&gt;Thread&lt;/t0&gt; 因未捕获的异常而突然终止时，调用处理程序的接口。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Interface of methods to get/set socket options.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T083127Z" creationid="pingfangx" creationdate="20191011T083127Z">
        <seg>获取/设置套接字选项的方法的接口。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Interfaces</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191010T093602Z" creationid="pingfangx" creationdate="20191010T093602Z">
        <seg>接口</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>InvocationTargetException is a checked exception that wraps an exception thrown by an invoked method or constructor.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T092154Z" creationid="pingfangx" creationdate="20191012T092154Z">
        <seg>InvocationTargetException 是一种包装由调用方法或构造方法所抛出异常的经过检查的异常。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It has two subclasses:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T080207Z" creationid="pingfangx" creationdate="20191011T080207Z">
        <seg>它拥有两个子类：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It is the responsibility of the program using reference objects to ensure that the objects remain reachable for as long as the program is interested in their referents.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T090241Z" creationid="pingfangx" creationdate="20191012T090241Z">
        <seg>使用引用对象的程序的责任是，确保对象是可达到的，只要程序对其指示对象感兴趣。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It is through that class that you can check if any of the local interfaces is configured to support IPv6.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T081014Z" creationid="pingfangx" creationdate="20191011T081014Z">
        <seg>只有通过该类才可以检查是否将所有本地接口都配置为支持 IPv6。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It is, however, possible to add to the search path by setting the &lt;c0&gt;java.protocol.handler.pkgs&lt;/c0&gt; system property.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T082904Z" creationid="pingfangx" creationdate="20191011T082904Z">
        <seg>但是，通过设置 &lt;c0&gt;java.protocol.handler.pkgs&lt;/c0&gt; 系统属性也可能增加搜索路径。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Its functionality has been replaced by &lt;c1&gt;java.security.KeyStore&lt;/c1&gt;, the &lt;c2&gt;java.security.cert&lt;/c2&gt; package, and &lt;c3&gt;java.security.Principal&lt;/c3&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T032236Z" creationid="pingfangx" creationdate="20191012T032236Z">
        <seg>其功能已由 &lt;c1&gt;java.security.KeyStore&lt;/c1&gt; 、 &lt;c2&gt;java.security.cert&lt;/c2&gt; 包和 &lt;c3&gt;java.security.Principal&lt;/c3&gt; 所取代。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Key factories are used to convert &lt;i0&gt;keys&lt;/i0&gt; (opaque cryptographic keys of type &lt;c1&gt;Key&lt;/c1&gt;) into &lt;i2&gt;key specifications&lt;/i2&gt; (transparent representations of the underlying key material), and vice versa.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T032253Z" creationid="pingfangx" creationdate="20191012T032253Z">
        <seg>密钥工厂用于将 &lt;i0&gt;密钥&lt;/i0&gt; （ &lt;c1&gt;Key&lt;/c1&gt; 类型的不透明加密密钥）转换成 &lt;i2&gt;密钥规范&lt;/i2&gt; （底层密钥材料的透明表示），反之亦然。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Key type.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T032559Z" creationid="pingfangx" creationdate="20191012T032559Z">
        <seg>Key 类型。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Legacy security code; do not use.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191010T100343Z" creationid="pingfangx" creationdate="20191010T100343Z">
        <seg>遗留安全代码；不要使用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Many of the classes provided in this package (the cryptographic and secure random number generator classes in particular) are provider-based.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T151954Z" creationid="pingfangx" creationdate="20191011T151954Z">
        <seg>此包中提供的许多类（特别是密码和安全随机数生成器类）是基于提供商的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Marker interface used by &lt;t0&gt;List&lt;/t0&gt; implementations to indicate that they support fast (generally constant time) random access.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T034836Z" creationid="pingfangx" creationdate="20191012T034836Z">
        <seg>&lt;t0&gt;List&lt;/t0&gt; 实现所使用的标记接口，用来表明其支持快速（通常是固定时间）随机访问。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Member is an interface that reflects identifying information about a single member (a field or a method) or a constructor.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T091109Z" creationid="pingfangx" creationdate="20191012T091109Z">
        <seg>成员是一种接口，反映有关单个成员（字段或方法）或构造方法的标识信息。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Methods to access the character-based console device, if any, associated with the current Java virtual machine.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191010T094710Z" creationid="pingfangx" creationdate="20191010T094710Z">
        <seg>此类包含多个方法，可访问与当前 Java 虚拟机关联的基于字符的控制台设备（如果有）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Not all systems have support for the IPv6 protocol, and while the Java networking stack will attempt to detect it and use it transparently when available, it is also possible to disable its use with a system property.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T080427Z" creationid="pingfangx" creationdate="20191011T080427Z">
        <seg>并非所有系统都支持 IPv6 协议，而当 Java 网络连接堆栈尝试检测它并在可用时透明地使用它时，还可以利用系统属性禁用它。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Note that the Handler class &lt;b0&gt;has to&lt;/b0&gt; be a subclass of the abstract class &lt;c1&gt;&lt;a2&gt;URLStreamHandler&lt;/a2&gt;&lt;/c1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T082955Z" creationid="pingfangx" creationdate="20191011T082955Z">
        <seg>注意，处理程序类 &lt;b0&gt;必须&lt;/b0&gt; 为抽象类 &lt;c1&gt;&lt;a2&gt;URLStreamHandler&lt;/a2&gt;&lt;/c1&gt; 的子类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Notification</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T085705Z" creationid="pingfangx" creationdate="20191012T085705Z">
        <seg>通知</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ObjectInput extends the DataInput interface to include the reading of objects.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191010T094545Z" creationid="pingfangx" creationdate="20191010T094545Z">
        <seg>ObjectInput 扩展 DataInput 接口以包含对象的读操作。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ObjectOutput extends the DataOutput interface to include writing of objects.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191010T094550Z" creationid="pingfangx" creationdate="20191010T094550Z">
        <seg>ObjectOutput 扩展 DataOutput 接口以包含对象的写入操作。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>One of your Play Store app URLs</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T114424Z" creationid="pingfangx" creationdate="20191011T114424Z">
        <seg>One of your Play Store app URLs</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Only the identity of the class of an Externalizable instance is written in the serialization stream and it is the responsibility of the class to save and restore the contents of its instances.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191010T094035Z" creationid="pingfangx" creationdate="20191010T094035Z">
        <seg>Externalizable 实例类的唯一特性是可以被写入序列化流中，该类负责保存和恢复实例内容。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Package Specification</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191010T085331Z" creationid="pingfangx" creationdate="20191010T085331Z">
        <seg>包规范</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ParameterizedType represents a parameterized type such as Collection&lt;String&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T091117Z" creationid="pingfangx" creationdate="20191012T091117Z">
        <seg>ParameterizedType 表示参数化类型，如 Collection&lt;String&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Phantom reference objects, which are enqueued after the collector determines that their referents may otherwise be reclaimed.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T090709Z" creationid="pingfangx" creationdate="20191012T090709Z">
        <seg>虚引用对象，在回收器确定其指示对象可另外回收之后，被加入队列。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Piped character-input streams.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191010T102716Z" creationid="pingfangx" creationdate="20191010T102716Z">
        <seg>传送的字符输入流。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Piped character-output streams.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191010T102722Z" creationid="pingfangx" creationdate="20191010T102722Z">
        <seg>传送的字符输出流。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Português Brasileiro</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T114416Z" creationid="pingfangx" creationdate="20191011T114416Z">
        <seg>Português Brasileiro</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Position, limit, and capacity;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T102725Z" creationid="pingfangx" creationdate="20191011T102725Z">
        <seg>位置，界限和容量；</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Prints formatted representations of objects to a text-output stream.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191010T102728Z" creationid="pingfangx" creationdate="20191010T102728Z">
        <seg>向文本输出流打印对象的格式化表示形式。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Protocol Handlers</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T082840Z" creationid="pingfangx" creationdate="20191011T082840Z">
        <seg>协议处理程序</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Provide access to the persistent fields read from the input stream.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191010T102622Z" creationid="pingfangx" creationdate="20191010T102622Z">
        <seg>提供对从输入流读取的持久字段的访问权限。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Provide programmatic access to the persistent fields to be written to ObjectOutput.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191010T102631Z" creationid="pingfangx" creationdate="20191010T102631Z">
        <seg>提供对要写入 ObjectOutput 的持久字段的编程访问。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Provides classes and interfaces for handling text, dates, numbers, and messages in a manner independent of natural languages.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T033059Z" creationid="pingfangx" creationdate="20191012T033059Z">
        <seg>提供以与自然语言无关的方式来处理文本、日期、数字和消息的类和接口。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Provides classes and interfaces for obtaining reflective information about classes and objects.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T091003Z" creationid="pingfangx" creationdate="20191012T091003Z">
        <seg>提供类和接口，以获得关于类和对象的反射信息。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Provides classes that are fundamental to the design of the Java programming language.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T061423Z" creationid="pingfangx" creationdate="20191012T061423Z">
        <seg>提供利用 Java 编程语言进行程序设计的基础类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Provides for system input and output through data streams, serialization and the file system.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191010T081910Z" creationid="pingfangx" creationdate="20191010T081910Z">
        <seg>通过数据流、序列化和文件系统提供系统输入和输出。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Provides library support for the Java programming language annotation facility.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T083336Z" creationid="pingfangx" creationdate="20191012T082542Z">
        <seg>为 Java 编程语言注释设施提供库支持。（译注：在其他地方一般译作“注解”，这里来自 api 1.6 中文版，所以沿用“注释”）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Provides methods to convert internationalized domain names (IDNs) between a normal Unicode representation and an ASCII Compatible Encoding (ACE) representation.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T083201Z" creationid="pingfangx" creationdate="20191011T083201Z">
        <seg>提供在普通 Unicode 表示形式和 ASCII 兼容性编码 (ACE) 表示形式之间进行国际化域名 (IDN) 转换的方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Provides reference-object classes, which support a limited degree of interaction with the garbage collector.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T085415Z" creationid="pingfangx" creationdate="20191012T085415Z">
        <seg>提供了引用对象类，支持在某种程度上与垃圾回收器之间的交互。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Provides the API for accessing and processing data stored in a data source (usually a relational database) using the Java&lt;s0&gt;&lt;f1&gt;TM&lt;/f1&gt;&lt;/s0&gt; programming language.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T032843Z" creationid="pingfangx" creationdate="20191012T032843Z">
        <seg>提供使用 Java&lt;s0&gt;&lt;f1&gt;TM&lt;/f1&gt;&lt;/s0&gt; 编程语言访问并处理存储在数据源（通常是一个关系数据库）中的数据的 API。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Provides the classes and interfaces for the security framework.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T151855Z" creationid="pingfangx" creationdate="20191011T151855Z">
        <seg>为安全框架提供类和接口。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Provides the classes for implementing networking applications.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T070930Z" creationid="pingfangx" creationdate="20191011T070930Z">
        <seg>为实现网络应用程序提供类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Reachability</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T090538Z" creationid="pingfangx" creationdate="20191012T090538Z">
        <seg>可到达性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Reads text from a character-input stream, buffering characters so as to provide for the efficient reading of characters, arrays, and lines.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191010T094626Z" creationid="pingfangx" creationdate="20191010T094626Z">
        <seg>从字符输入流中读取文本，缓冲各个字符，从而实现字符、数组和行的高效读取。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Reference queues are implemented by the &lt;c3&gt;&lt;c4&gt;&lt;a5&gt;ReferenceQueue&lt;/a5&gt;&lt;/c4&gt;&lt;/c3&gt; class.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T090223Z" creationid="pingfangx" creationdate="20191012T090223Z">
        <seg>引用队列是通过 &lt;c3&gt;&lt;c4&gt;&lt;a5&gt;ReferenceQueue&lt;/a5&gt;&lt;/c4&gt;&lt;/c3&gt; 类实现的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Reference queues, to which registered reference objects are appended by the garbage collector after the appropriate reachability changes are detected.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T090713Z" creationid="pingfangx" creationdate="20191012T090713Z">
        <seg>引用队列，在检测到适当的可到达性更改后，垃圾回收器将已注册的引用对象添加到该队列中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Reflection allows programmatic access to information about the fields, methods and constructors of loaded classes, and the use of reflected fields, methods, and constructors to operate on their underlying counterparts, within security restrictions.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T091009Z" creationid="pingfangx" creationdate="20191012T091009Z">
        <seg>在安全限制内，反射允许编程访问关于加载类的字段、方法和构造方法的信息，并允许使用反射字段、方法和构造方法对其底层对等项进行操作。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Related Documentation</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191010T085337Z" creationid="pingfangx" creationdate="20191010T085337Z">
        <seg>相关文档</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Represent channels for retrieving resources from the ResponseCache.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T083139Z" creationid="pingfangx" creationdate="20191011T083139Z">
        <seg>表示从 ResponseCache 获取资源的通道。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Represents a Uniform Resource Identifier (URI) reference.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T083403Z" creationid="pingfangx" creationdate="20191011T083403Z">
        <seg>表示一个统一资源标识符 (URI) 引用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Represents a cache response originally retrieved through secure means, such as TLS.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T083338Z" creationid="pingfangx" creationdate="20191011T083338Z">
        <seg>表示最初通过安全方法（如 TLS）获得的缓存响应。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Represents a currency.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T045451Z" creationid="pingfangx" creationdate="20191012T045451Z">
        <seg>表示货币。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Represents a family of communication protocols.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T083109Z" creationid="pingfangx" creationdate="20191011T083109Z">
        <seg>代表一个家族的通信协议。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Represents an annotated element of the program currently running in this VM.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T091044Z" creationid="pingfangx" creationdate="20191012T091044Z">
        <seg>表示目前正在此 VM 中运行的程序的一个已注释元素。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Represents channels for storing resources in the ResponseCache.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T083137Z" creationid="pingfangx" creationdate="20191011T083137Z">
        <seg>表示在 ResponseCache 中存储资源的通道。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Represents implementations of URLConnection caches.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T083337Z" creationid="pingfangx" creationdate="20191011T083337Z">
        <seg>表示 URLConnection 缓存的实现。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Represents the proxy type.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T083417Z" creationid="pingfangx" creationdate="20191011T083417Z">
        <seg>表示代理类型。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Resizable-array implementation of the &lt;c0&gt;&lt;a1&gt;Deque&lt;/a1&gt;&lt;/c0&gt; interface.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T045130Z" creationid="pingfangx" creationdate="20191012T045130Z">
        <seg>&lt;c0&gt;&lt;a1&gt;Deque&lt;/a1&gt;&lt;/c0&gt; 接口的大小可变数组的实现。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Resizable-array implementation of the &lt;t0&gt;List&lt;/t0&gt; interface.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T045135Z" creationid="pingfangx" creationdate="20191012T045135Z">
        <seg>&lt;t0&gt;List&lt;/t0&gt; 接口的大小可变数组的实现。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Resource bundles contain locale-specific objects.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T050051Z" creationid="pingfangx" creationdate="20191012T050051Z">
        <seg>资源包包含特定于语言环境的对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Selects the proxy server to use, if any, when connecting to the network resource referenced by a URL.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T083335Z" creationid="pingfangx" creationdate="20191011T083335Z">
        <seg>连接到 URL 引用的网络资源时选择要使用的代理服务器（如果有）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Sending and receiving with TCP sockets is done through InputStreams and OutputStreams which can be obtained via the &lt;c0&gt;&lt;a1&gt;getInputStream()&lt;/a1&gt;&lt;/c0&gt; and &lt;c2&gt;&lt;a3&gt;getOutputStream()&lt;/a3&gt;&lt;/c2&gt; methods.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T080920Z" creationid="pingfangx" creationdate="20191011T080920Z">
        <seg>使用 TCP 套接字的发送和接收操作需要借助 InputStream 和 OutputStream 来完成，这两者是通过 &lt;c0&gt;&lt;a1&gt;Socket.getInputStream()&lt;/a1&gt;&lt;/c0&gt; 和 &lt;c2&gt;&lt;a3&gt;Socket.getOutputStream()&lt;/a3&gt;&lt;/c2&gt; 方法获取的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Serializability of a class is enabled by the class implementing the java.io.Serializable interface.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191010T094557Z" creationid="pingfangx" creationdate="20191010T094557Z">
        <seg>类通过实现 java.io.Serializable 接口以启用其序列化功能。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Serialization's descriptor for classes.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191010T102633Z" creationid="pingfangx" creationdate="20191010T102633Z">
        <seg>类的序列化描述符。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Signals that a malformed string in &lt;a0&gt;modified UTF-8&lt;/a0&gt; format has been read in a data input stream or by any class that implements the data input interface.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T065627Z" creationid="pingfangx" creationdate="20191011T065627Z">
        <seg>在数据输入流中或由实现该数据输入接口的任何类中以 &lt;a0&gt;modified UTF-8&lt;/a0&gt; 格式读取错误字符串时，抛出此异常。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Signals that a method has been invoked at an illegal or inappropriate time.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T073021Z" creationid="pingfangx" creationdate="20191012T073021Z">
        <seg>在非法或不适当的时间调用方法时产生的信号。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Signals that a resource is missing.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T050434Z" creationid="pingfangx" creationdate="20191012T050434Z">
        <seg>缺少资源时抛出此异常。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Signals that a sync operation has failed.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T065529Z" creationid="pingfangx" creationdate="20191011T065529Z">
        <seg>当 sync 操作失败时，抛出此异常。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Signals that a timeout has occurred on a socket read or accept.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T083537Z" creationid="pingfangx" creationdate="20191011T083537Z">
        <seg>如果在读取或接受套接字时发生超时，则抛出此异常。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Signals that an I/O exception of some sort has occurred.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T065508Z" creationid="pingfangx" creationdate="20191011T065508Z">
        <seg>当发生某种 I/O 异常时，抛出此异常。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Signals that an I/O operation has been interrupted.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T065500Z" creationid="pingfangx" creationdate="20191011T065500Z">
        <seg>I/O 操作已中断信号，抛出此异常。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Signals that an ICMP Port Unreachable message has been received on a connected datagram.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T083438Z" creationid="pingfangx" creationdate="20191011T083438Z">
        <seg>在连接的数据报上已接收到 ICMP Port Unreachable 消息时，抛出该异常。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Signals that an attempt to open the file denoted by a specified pathname has failed.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T065448Z" creationid="pingfangx" creationdate="20191011T065448Z">
        <seg>当试图打开指定路径名表示的文件失败时，抛出此异常。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Signals that an end of file or end of stream has been reached unexpectedly during input.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T065438Z" creationid="pingfangx" creationdate="20191011T065438Z">
        <seg>当输入过程中意外到达文件或流的末尾时，抛出此异常。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Signals that an error has been reached unexpectedly while parsing.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T033654Z" creationid="pingfangx" creationdate="20191012T033654Z">
        <seg>表示解析时出现意外错误。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Signals that an error occurred while attempting to bind a socket to a local address and port.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T083431Z" creationid="pingfangx" creationdate="20191011T083431Z">
        <seg>试图将套接字绑定到本地地址和端口时发生错误的情况下，抛出此异常。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Signals that an error occurred while attempting to connect a socket to a remote address and port.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T083432Z" creationid="pingfangx" creationdate="20191011T083432Z">
        <seg>试图将套接字连接到远程地址和端口时发生错误的情况下，抛出此异常。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Signals that an unexpected exception has occurred in a static initializer.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T073217Z" creationid="pingfangx" creationdate="20191012T073217Z">
        <seg>静态初始化程序中发生意外异常的信号。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Signals that one of the ObjectStreamExceptions was thrown during a write operation.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T065629Z" creationid="pingfangx" creationdate="20191011T065629Z">
        <seg>在写入操作过程中抛出 ObjectStreamException 之一的信号。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Signals that the class doesn't have a field of a specified name.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T073037Z" creationid="pingfangx" creationdate="20191012T073037Z">
        <seg>类不包含指定名称的字段时产生的信号。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>SignedObject is a class for the purpose of creating authentic runtime objects whose integrity cannot be compromised without being detected.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T032531Z" creationid="pingfangx" creationdate="20191012T032531Z">
        <seg>SignedObject 是一个用来创建实际运行时对象的类，在检测不到这些对象的情况下，其完整性不会遭受损害。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>So, while it is possible to create an URI with any kind of protocol scheme (e.g. &lt;c0&gt;myproto://myhost.mydomain/resource/&lt;/c0&gt;), a similar URL will try to instantiate the handler for the specified protocol; if it doesn't exist an exception will be thrown.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T082858Z" creationid="pingfangx" creationdate="20191011T082858Z">
        <seg>因此，尽管可能利用任何种类的协议方案（例如，&lt;c0&gt;myproto://myhost.mydomain/resource/&lt;/c0&gt;）创建 URI，但类似的 URL 仍将试图实例化指定协议的处理程序；如果指定协议的处理程序不存在，则抛出异常。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Sockets</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T080456Z" creationid="pingfangx" creationdate="20191011T080456Z">
        <seg>套接字</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Sockets are means to establish a communication link between machines over the network.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T080458Z" creationid="pingfangx" creationdate="20191011T080458Z">
        <seg>套接字是在网络上建立机器之间的通信链接的方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Soft and weak references are automatically cleared by the collector before being added to the queues with which they are registered, if any.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T090533Z" creationid="pingfangx" creationdate="20191012T090533Z">
        <seg>在将软引用和弱引用添加到向其注册的队列（如果有）之前，回收器将自动清除这些引用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Soft reference objects, which are cleared at the discretion of the garbage collector in response to memory demand.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T090715Z" creationid="pingfangx" creationdate="20191012T090715Z">
        <seg>软引用对象，在响应内存需要时，由垃圾回收器决定是否清除此对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Soft references are for implementing memory-sensitive caches, weak references are for implementing canonicalizing mappings that do not prevent their keys (or values) from being reclaimed, and phantom references are for scheduling pre-mortem cleanup actions in a more flexible way than is possible with the Java finalization mechanism.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T085603Z" creationid="pingfangx" creationdate="20191012T085603Z">
        <seg>软引用适用于实现内存敏感的缓存，弱引用适用于实现无法防止其键（或值）被回收的规范化映射，而虚引用则适用于以某种比 Java 终结机制更灵活的方式调度 pre-mortem 清除操作。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Some time after the garbage collector determines that the reachability of the referent has changed to the value corresponding to the type of the reference, it will add the reference to the associated queue.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T085800Z" creationid="pingfangx" creationdate="20191012T085800Z">
        <seg>在垃圾回收器确定引用的可到达性已经更改为对应于引用类型的值之后的某一时间，它会将引用添加到相关的队列中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Specifies the rounding behavior for operations whose results cannot be represented exactly.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T070718Z" creationid="pingfangx" creationdate="20191011T070718Z">
        <seg>指定其结果不能精确表示的操作的舍入行为。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Standardized representation for serialized Key objects.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T032259Z" creationid="pingfangx" creationdate="20191012T032259Z">
        <seg>已序列化的 Key 对象的标准表示形式。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Static classes and methods for operating on or creating instances of &lt;c0&gt;&lt;a1&gt;Spliterator&lt;/a1&gt;&lt;/c0&gt; and its primitive specializations &lt;c2&gt;&lt;a3&gt;Spliterator.OfInt&lt;/a3&gt;&lt;/c2&gt;, &lt;c4&gt;&lt;a5&gt;Spliterator.OfLong&lt;/a5&gt;&lt;/c4&gt;, and &lt;c6&gt;&lt;a7&gt;Spliterator.OfDouble&lt;/a7&gt;&lt;/c6&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T050903Z" creationid="pingfangx" creationdate="20191012T050903Z">
        <seg>用于操作或创建 &lt;c0&gt;&lt;a1&gt;Spliterator&lt;/a1&gt;&lt;/c0&gt; 实例的静态类和方法，以及它的基本类型用的 &lt;c2&gt;&lt;a3&gt;Spliterator.OfInt&lt;/a3&gt;&lt;/c2&gt;、&lt;c4&gt;&lt;a5&gt;Spliterator.OfLong&lt;/a5&gt;&lt;/c4&gt; 和 &lt;c6&gt;&lt;a7&gt;Spliterator.OfDouble&lt;/a7&gt;&lt;/c6&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Subclasses of &lt;c0&gt;LinkageError&lt;/c0&gt; indicate that a class has some dependency on another class; however, the latter class has incompatibly changed after the compilation of the former class.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T073225Z" creationid="pingfangx" creationdate="20191012T073225Z">
        <seg>&lt;c0&gt;LinkageError&lt;/c0&gt; 的子类指示一个类在一定程度上依赖于另一个类；但是，在编译前一个类之后，后一个类发生了不相容的改变。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Subclasses of &lt;c2&gt;Throwable&lt;/c2&gt; represent errors and exceptions.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T063120Z" creationid="pingfangx" creationdate="20191012T063024Z">
        <seg>&lt;c2&gt;Throwable&lt;/c2&gt; 的子类表示错误和异常。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Superclass of all exceptions specific to Object Stream classes.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T065521Z" creationid="pingfangx" creationdate="20191011T065521Z">
        <seg>特定于 Object Stream 类的所有异常的超类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>That is, a queue does not keep track of the references that are registered with it.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T090232Z" creationid="pingfangx" creationdate="20191012T090232Z">
        <seg>也就是说，队列不会追踪那些向它注册的引用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt; TooManyListenersException &lt;/c0&gt; Exception is used as part of the Java Event model to annotate and implement a unicast special case of a multicast Event Source.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T050447Z" creationid="pingfangx" creationdate="20191012T050447Z">
        <seg>&lt;c0&gt;TooManyListenersException&lt;/c0&gt; 异常用作 Java Event 模型的一部分来注释和实现多播 Event Source 的单播特例。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;&lt;a1&gt;InetAddress&lt;/a1&gt;&lt;/c0&gt; class is the abstraction representing an IP (Internet Protocol) address.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T075223Z" creationid="pingfangx" creationdate="20191011T075223Z">
        <seg>&lt;c0&gt;&lt;a1&gt;InetAddress&lt;/a1&gt;&lt;/c0&gt; 类是表示 IP（Internet 协议）地址的抽象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;&lt;a1&gt;NetworkInterface&lt;/a1&gt;&lt;/c0&gt; class provides APIs to browse and query all the networking interfaces (e.g. ethernet connection or PPP endpoint) of the local machine.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T080957Z" creationid="pingfangx" creationdate="20191011T080957Z">
        <seg>&lt;c0&gt;&lt;a1&gt;NetworkInterface&lt;/a1&gt;&lt;/c0&gt; 类提供 API 以浏览和查询本地机器的所有网络接口（例如，以太网连接或 PPP 端点）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;&lt;a1&gt;start()&lt;/a1&gt;&lt;/c0&gt; and &lt;c2&gt;&lt;a3&gt;Runtime.exec&lt;/a3&gt;&lt;/c2&gt; methods create a native process and return an instance of a subclass of &lt;c4&gt;Process&lt;/c4&gt; that can be used to control the process and obtain information about it.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T071530Z" creationid="pingfangx" creationdate="20191012T071530Z">
        <seg>&lt;c0&gt;&lt;a1&gt;start()&lt;/a1&gt;&lt;/c0&gt; 和 &lt;c2&gt;&lt;a3&gt;Runtime.exec&lt;/a3&gt;&lt;/c2&gt; 方法创建一个本机进程，并返回 &lt;c4&gt;Process&lt;/c4&gt; 子类的一个实例，该实例可用来控制进程并获得相关信息。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;AlgorithmParameterGenerator&lt;/c0&gt; class is used to generate a set of parameters to be used with a certain algorithm.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T152811Z" creationid="pingfangx" creationdate="20191011T152811Z">
        <seg>&lt;c0&gt;AlgorithmParameterGenerator&lt;/c0&gt; 类用于生成将在某个特定算法中使用的参数集合。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;Array&lt;/c0&gt; class provides static methods to dynamically create and access Java arrays.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T092053Z" creationid="pingfangx" creationdate="20191012T092053Z">
        <seg>&lt;c0&gt;Array&lt;/c0&gt; 类提供了动态创建和访问 Java 数组的方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;BreakIterator&lt;/c0&gt; class implements methods for finding the location of boundaries in text.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T033205Z" creationid="pingfangx" creationdate="20191012T033205Z">
        <seg>&lt;c0&gt;BreakIterator&lt;/c0&gt; 类实现用于查找文本中边界位置的方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;Byte&lt;/c0&gt; class wraps a value of primitive type &lt;c1&gt;byte&lt;/c1&gt; in an object.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T071214Z" creationid="pingfangx" creationdate="20191012T071214Z">
        <seg>&lt;c0&gt;Byte&lt;/c0&gt; 类将基本类型 &lt;c1&gt;byte&lt;/c1&gt; 的值包装在一个对象中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;Calendar&lt;/c0&gt; class is an abstract class that provides methods for converting between a specific instant in time and a set of &lt;c1&gt;&lt;a2&gt;calendar fields&lt;/a2&gt;&lt;/c1&gt; such as &lt;c3&gt;YEAR&lt;/c3&gt;, &lt;c4&gt;MONTH&lt;/c4&gt;, &lt;c5&gt;DAY_OF_MONTH&lt;/c5&gt;, &lt;c6&gt;HOUR&lt;/c6&gt;, and so on, and for manipulating the calendar fields, such as getting the date of the next week.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T045431Z" creationid="pingfangx" creationdate="20191012T045213Z">
        <seg>&lt;c0&gt;Calendar&lt;/c0&gt; 类是一个抽象类，它为特定瞬间与一组诸如 &lt;c3&gt;YEAR&lt;/c3&gt;, 、 &lt;c4&gt;MONTH&lt;/c4&gt; 、 &lt;c5&gt;DAY_OF_MONTH&lt;/c5&gt; 、 &lt;c6&gt;HOUR&lt;/c6&gt; 等 &lt;c1&gt;&lt;a2&gt;日历字段&lt;/a2&gt;&lt;/c1&gt; 之间的转换提供了一些方法，并为操作日历字段（例如获得下星期的日期）提供了一些方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;Character&lt;/c0&gt; class wraps a value of the primitive type &lt;c1&gt;char&lt;/c1&gt; in an object.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T071216Z" creationid="pingfangx" creationdate="20191012T071216Z">
        <seg>&lt;c0&gt;Character&lt;/c0&gt; 类在对象中包装一个基本类型 &lt;c1&gt;char&lt;/c1&gt; 的值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;CollationElementIterator&lt;/c0&gt; class is used as an iterator to walk through each character of an international string.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T033211Z" creationid="pingfangx" creationdate="20191012T033211Z">
        <seg>&lt;c0&gt;CollationElementIterator&lt;/c0&gt; 类用作一个迭代器，以遍历国际化字符串的每个字符。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;Collator&lt;/c0&gt; class performs locale-sensitive &lt;c1&gt;String&lt;/c1&gt; comparison.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T033229Z" creationid="pingfangx" creationdate="20191012T033229Z">
        <seg>&lt;c0&gt;Collator&lt;/c0&gt; 类执行区分语言环境的 &lt;c1&gt;String&lt;/c1&gt; 比较。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;DataInput&lt;/c0&gt; interface provides for reading bytes from a binary stream and reconstructing from them data in any of the Java primitive types.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191010T094025Z" creationid="pingfangx" creationdate="20191010T094025Z">
        <seg>&lt;c0&gt;DataInput&lt;/c0&gt; 接口用于从二进制流中读取字节，并根据所有 Java 基本类型数据进行重构。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;DataOutput&lt;/c0&gt; interface provides for converting data from any of the Java primitive types to a series of bytes and writing these bytes to a binary stream.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191010T094031Z" creationid="pingfangx" creationdate="20191010T094031Z">
        <seg>&lt;c0&gt;DataOutput&lt;/c0&gt; 接口用于将数据从任意 Java 基本类型转换为一系列字节，并将这些字节写入二进制流。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;Dictionary&lt;/c0&gt; class is the abstract parent of any class, such as &lt;c1&gt;Hashtable&lt;/c1&gt;, which maps keys to values.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T045501Z" creationid="pingfangx" creationdate="20191012T045501Z">
        <seg>&lt;c0&gt;Dictionary&lt;/c0&gt; 类是任何可将键映射到相应值的类（如 &lt;c1&gt;Hashtable&lt;/c1&gt; ）的抽象父类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;Double&lt;/c0&gt; class wraps a value of the primitive type &lt;c1&gt;double&lt;/c1&gt; in an object.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T071250Z" creationid="pingfangx" creationdate="20191012T071250Z">
        <seg>&lt;c0&gt;Double&lt;/c0&gt; 类在对象中包装一个基本类型 &lt;c1&gt;double&lt;/c1&gt; 的值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;Float&lt;/c0&gt; class wraps a value of primitive type &lt;c1&gt;float&lt;/c1&gt; in an object.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T071309Z" creationid="pingfangx" creationdate="20191012T071309Z">
        <seg>&lt;c0&gt;Float&lt;/c0&gt; 类在对象中包装一个基本类型 &lt;c1&gt;float&lt;/c1&gt; 的值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;GeneralSecurityException&lt;/c0&gt; class is a generic security exception class that provides type safety for all the security-related exception classes that extend from it.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T032605Z" creationid="pingfangx" creationdate="20191012T032605Z">
        <seg>&lt;c0&gt;GeneralSecurityException&lt;/c0&gt; 类是一个一般安全异常类，可以为所有从其扩展的与安全有关的异常类提供类型安全。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;Integer&lt;/c0&gt; class wraps a value of the primitive type &lt;c1&gt;int&lt;/c1&gt; in an object.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T071410Z" creationid="pingfangx" creationdate="20191012T071410Z">
        <seg>&lt;c0&gt;Integer&lt;/c0&gt; 类在对象中包装了一个基本类型 &lt;c1&gt;int&lt;/c1&gt; 的值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;Long&lt;/c0&gt; class wraps a value of the primitive type &lt;c1&gt;long&lt;/c1&gt; in an object.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T071412Z" creationid="pingfangx" creationdate="20191012T071412Z">
        <seg>&lt;c0&gt;Long&lt;/c0&gt; 类在对象中包装了基本类型 &lt;c1&gt;long&lt;/c1&gt; 的值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;Properties&lt;/c0&gt; class represents a persistent set of properties.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T050044Z" creationid="pingfangx" creationdate="20191012T050044Z">
        <seg>&lt;c0&gt;Properties&lt;/c0&gt; 类表示了一个持久的属性集。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;RuleBasedCollator&lt;/c0&gt; class is a concrete subclass of &lt;c1&gt;Collator&lt;/c1&gt; that provides a simple, data-driven, table collator.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T033446Z" creationid="pingfangx" creationdate="20191012T033446Z">
        <seg>&lt;c0&gt;RuleBasedCollator&lt;/c0&gt; 类是 &lt;c1&gt;Collator&lt;/c1&gt; 的具体子类，它提供了一个简单的、数据驱动的表 collator。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;Runnable&lt;/c0&gt; interface should be implemented by any class whose instances are intended to be executed by a thread.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T070020Z" creationid="pingfangx" creationdate="20191012T070020Z">
        <seg>&lt;c0&gt;Runnable&lt;/c0&gt; 接口应该由那些打算通过某一线程执行其实例的类来实现。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;Short&lt;/c0&gt; class wraps a value of primitive type &lt;c1&gt;short&lt;/c1&gt; in an object.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T071601Z" creationid="pingfangx" creationdate="20191012T071601Z">
        <seg>&lt;c0&gt;Short&lt;/c0&gt; 类在对象中包装基本类型 &lt;c1&gt;short&lt;/c1&gt; 的值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;Stack&lt;/c0&gt; class represents a last-in-first-out (LIFO) stack of objects.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T050151Z" creationid="pingfangx" creationdate="20191012T050151Z">
        <seg>&lt;c0&gt;Stack&lt;/c0&gt; 类表示后进先出（LIFO）的对象堆栈。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;StreamTokenizer&lt;/c0&gt; class takes an input stream and parses it into "tokens", allowing the tokens to be read one at a time.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191010T102809Z" creationid="pingfangx" creationdate="20191010T102809Z">
        <seg>&lt;c0&gt;StreamTokenizer&lt;/c0&gt; 类获取输入流并将其解析为“标记”，允许一次读取一个标记。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;String&lt;/c0&gt; class represents character strings.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T071702Z" creationid="pingfangx" creationdate="20191012T071702Z">
        <seg>&lt;c0&gt;String&lt;/c0&gt; 类代表字符串。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;System&lt;/c0&gt; class contains several useful class fields and methods.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T071714Z" creationid="pingfangx" creationdate="20191012T071714Z">
        <seg>&lt;c0&gt;System&lt;/c0&gt; 类包含一些有用的类字段和方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;Throwable&lt;/c0&gt; class is the superclass of all errors and exceptions in the Java language.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T071736Z" creationid="pingfangx" creationdate="20191012T071736Z">
        <seg>&lt;c0&gt;Throwable&lt;/c0&gt; 类是 Java 语言中所有错误或异常的超类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;Vector&lt;/c0&gt; class implements a growable array of objects.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T050229Z" creationid="pingfangx" creationdate="20191012T050229Z">
        <seg>&lt;c0&gt;Vector&lt;/c0&gt; 类可以实现可增长的对象数组。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;Void&lt;/c0&gt; class is an uninstantiable placeholder class to hold a reference to the &lt;c1&gt;Class&lt;/c1&gt; object representing the Java keyword void.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T071825Z" creationid="pingfangx" creationdate="20191012T071825Z">
        <seg>&lt;c0&gt;Void&lt;/c0&gt; 类是一个不可实例化的占位符类，它持有对表示 Java 关键字 void 的 &lt;c1&gt;Class&lt;/c1&gt; 对象的引用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;forName&lt;/c0&gt; method in class &lt;c1&gt;Class&lt;/c1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T072939Z" creationid="pingfangx" creationdate="20191012T072939Z">
        <seg>&lt;c0&gt;Class&lt;/c0&gt; 类中的 &lt;c1&gt;forName&lt;/c1&gt; 方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c7&gt;Void&lt;/c7&gt; class is a non-instantiable class that holds a reference to a &lt;c8&gt;Class&lt;/c8&gt; object representing the type void.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T062634Z" creationid="pingfangx" creationdate="20191012T062634Z">
        <seg>&lt;c7&gt;Void&lt;/c7&gt; 类是一个非实例化的类，它保持一个对表示基本类型 void 的 &lt;c8&gt;Class&lt;/c8&gt; 对象的引用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;t0&gt;Formattable&lt;/t0&gt; interface must be implemented by any class that needs to perform custom formatting using the &lt;t1&gt;'s'&lt;/t1&gt; conversion specifier of &lt;c2&gt;&lt;a3&gt;Formatter&lt;/a3&gt;&lt;/c2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T034509Z" creationid="pingfangx" creationdate="20191012T034358Z">
        <seg>&lt;t0&gt;Formattable&lt;/t0&gt; 接口必须通过需要执行自定义格式化（使用 &lt;c2&gt;&lt;a3&gt;Formatter&lt;/a3&gt;&lt;/c2&gt; 的 &lt;t1&gt;'s'&lt;/t1&gt; 转换说明符）的任何类来实现。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;t0&gt;java.nio&lt;/t0&gt; package defines the buffer classes, which are used throughout the NIO APIs.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T102539Z" creationid="pingfangx" creationdate="20191011T102449Z">
        <seg>&lt;t0&gt;java.nio&lt;/t0&gt; 包定义了缓冲区类，这些类用于所有 NIO API。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The AccessibleObject class is the base class for Field, Method and Constructor objects.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T092051Z" creationid="pingfangx" creationdate="20191012T092051Z">
        <seg>AccessibleObject 类是 Field、Method 和 Constructor 对象的基类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Boolean class wraps a value of the primitive type &lt;c0&gt;boolean&lt;/c0&gt; in an object.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T071208Z" creationid="pingfangx" creationdate="20191012T071208Z">
        <seg>Boolean 类将基本类型为 &lt;c0&gt;boolean&lt;/c0&gt; 的值包装在一个对象中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Character Encoding is not supported.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T065557Z" creationid="pingfangx" creationdate="20191011T065557Z">
        <seg>不支持字符编码。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Key interface is the top-level interface for all keys.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T152408Z" creationid="pingfangx" creationdate="20191011T152408Z">
        <seg>Key 是所有密钥的顶层接口。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The KeyPairGenerator class is used to generate pairs of public and private keys.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T032256Z" creationid="pingfangx" creationdate="20191012T032256Z">
        <seg>KeyPairGenerator 类用于生成公钥和私钥对。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Modifier class provides &lt;c0&gt;static&lt;/c0&gt; methods and constants to decode class and member access modifiers.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T092142Z" creationid="pingfangx" creationdate="20191012T092142Z">
        <seg>Modifier 类提供了 &lt;c0&gt;static&lt;/c0&gt; 方法和常量，对类和成员访问修饰符进行解码。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Signature class is used to provide applications the functionality of a digital signature algorithm.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T032523Z" creationid="pingfangx" creationdate="20191012T032523Z">
        <seg>Signature 类用来为应用程序提供数字签名算法功能。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The abstract class &lt;c0&gt;ContentHandler&lt;/c0&gt; is the superclass of all classes that read an &lt;c1&gt;Object&lt;/c1&gt; from a &lt;c2&gt;URLConnection&lt;/c2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T083140Z" creationid="pingfangx" creationdate="20191011T083140Z">
        <seg>抽象类 &lt;c0&gt;ContentHandler&lt;/c0&gt; 是从 &lt;c1&gt;URLConnection&lt;/c1&gt; 读取 &lt;c2&gt;Object&lt;/c2&gt; 的所有类的超类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The abstract class &lt;c0&gt;Number&lt;/c0&gt; is the superclass of classes &lt;c1&gt;BigDecimal&lt;/c1&gt;, &lt;c2&gt;BigInteger&lt;/c2&gt;, &lt;c3&gt;Byte&lt;/c3&gt;, &lt;c4&gt;Double&lt;/c4&gt;, &lt;c5&gt;Float&lt;/c5&gt;, &lt;c6&gt;Integer&lt;/c6&gt;, &lt;c7&gt;Long&lt;/c7&gt;, and &lt;c8&gt;Short&lt;/c8&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T071447Z" creationid="pingfangx" creationdate="20191012T071447Z">
        <seg>抽象类 &lt;c0&gt;Number&lt;/c0&gt; 是 &lt;c1&gt;BigDecimal&lt;/c1&gt;、&lt;c2&gt;BigInteger&lt;/c2&gt;、&lt;c3&gt;Byte&lt;/c3&gt;、&lt;c4&gt;Double&lt;/c4&gt;、&lt;c5&gt;Float&lt;/c5&gt;、&lt;c6&gt;Integer&lt;/c6&gt;、&lt;c7&gt;Long&lt;/c7&gt; 和 &lt;c8&gt;Short&lt;/c8&gt; 类的超类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The abstract class &lt;c0&gt;SocketImpl&lt;/c0&gt; is a common superclass of all classes that actually implement sockets.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T083350Z" creationid="pingfangx" creationdate="20191011T083350Z">
        <seg>抽象类 &lt;c0&gt;SocketImpl&lt;/c0&gt; 是实际实现套接字的所有类的通用超类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The abstract class &lt;c0&gt;URLConnection&lt;/c0&gt; is the superclass of all classes that represent a communications link between the application and a URL.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T083409Z" creationid="pingfangx" creationdate="20191011T083409Z">
        <seg>抽象类 &lt;c0&gt;URLConnection&lt;/c0&gt; 是所有类的超类，它代表应用程序和 URL 之间的通信链接。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The abstract class &lt;c0&gt;URLStreamHandler&lt;/c0&gt; is the common superclass for all stream protocol handlers.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T083413Z" creationid="pingfangx" creationdate="20191011T083413Z">
        <seg>抽象类 &lt;c0&gt;URLStreamHandler&lt;/c0&gt; 是所有流协议处理程序的通用超类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The annotation type &lt;c0&gt;java.lang.annotation.Repeatable&lt;/c0&gt; is used to indicate that the annotation type whose declaration it (meta-)annotates is &lt;e1&gt;repeatable&lt;/e1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T082752Z" creationid="pingfangx" creationdate="20191012T082704Z">
        <seg>注释类型 &lt;c0&gt;java.lang.annotation.Repeatable&lt;/c0&gt; 用于指示注释类型，其声明它(元)注释是 &lt;e1&gt;repeatable (可重复的)&lt;/e1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The base &lt;c3&gt;&lt;a4&gt;Buffer&lt;/a4&gt;&lt;/c3&gt; class defines these properties as well as methods for &lt;i5&gt;clearing&lt;/i5&gt;, &lt;i6&gt;flipping&lt;/i6&gt;, and &lt;i7&gt;rewinding&lt;/i7&gt;, for &lt;i8&gt;marking&lt;/i8&gt; the current position, and for &lt;i9&gt;resetting&lt;/i9&gt; the position to the previous mark.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T111531Z" creationid="pingfangx" creationdate="20191011T111523Z">
        <seg>基本 &lt;c3&gt;&lt;a4&gt;Buffer&lt;/a4&gt;&lt;/c3&gt;  类定义了这些属性以及 &lt;i5&gt;清除&lt;/i5&gt; 、 &lt;i6&gt;反转&lt;/i6&gt; 和 &lt;i7&gt;重绕&lt;/i7&gt; 方法，用以 &lt;i8&gt;标记&lt;/i8&gt; 当前位置，以及将当前位置 &lt;i9&gt;重置&lt;/i9&gt; 为前一个标记处。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The central abstractions of the NIO APIs are:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T083704Z" creationid="pingfangx" creationdate="20191011T083704Z">
        <seg>NIO API 的集中抽象为：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The charset API is defined in the &lt;c1&gt;&lt;a2&gt;java.nio.charset&lt;/a2&gt;&lt;/c1&gt; package, and the channel and selector APIs are defined in the &lt;c3&gt;&lt;a4&gt;java.nio.channels&lt;/a4&gt;&lt;/c3&gt; package.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T102656Z" creationid="pingfangx" creationdate="20191011T102624Z">
        <seg>&lt;c1&gt;&lt;a2&gt;java.nio.charset&lt;/a2&gt;&lt;/c1&gt; 包中定义了字符集 API，&lt;c3&gt;&lt;a4&gt;java.nio.channels&lt;/a4&gt;&lt;/c3&gt; 包中定义了信道和选择器 API。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The class &lt;c0&gt;Date&lt;/c0&gt; represents a specific instant in time, with millisecond precision.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T045455Z" creationid="pingfangx" creationdate="20191012T045455Z">
        <seg>类 &lt;c0&gt;Date&lt;/c0&gt; 表示特定的瞬间，精确到毫秒。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The class &lt;c0&gt;Exception&lt;/c0&gt; and its subclasses are a form of &lt;c1&gt;Throwable&lt;/c1&gt; that indicates conditions that a reasonable application might want to catch.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T072955Z" creationid="pingfangx" creationdate="20191012T072955Z">
        <seg>&lt;c0&gt;Exception&lt;/c0&gt; 类及其子类是 &lt;c1&gt;Throwable&lt;/c1&gt; 的一种形式，它指出了合理的应用程序想要捕获的条件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The class &lt;c0&gt;Math&lt;/c0&gt; contains methods for performing basic numeric operations such as the elementary exponential, logarithm, square root, and trigonometric functions.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T071432Z" creationid="pingfangx" creationdate="20191012T071432Z">
        <seg>&lt;c0&gt;Math&lt;/c0&gt; 类包含用于执行基本数学运算的方法，如初等指数、对数、平方根和三角函数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The class &lt;c0&gt;Math&lt;/c0&gt; provides commonly used mathematical functions such as sine, cosine, and square root.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T062641Z" creationid="pingfangx" creationdate="20191012T062641Z">
        <seg>类 &lt;c0&gt;Math&lt;/c0&gt; 提供了常用的数学函数，比如正弦、余弦和平方根。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The class &lt;c0&gt;StrictMath&lt;/c0&gt; contains methods for performing basic numeric operations such as the elementary exponential, logarithm, square root, and trigonometric functions.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T071659Z" creationid="pingfangx" creationdate="20191012T071659Z">
        <seg>&lt;c0&gt;StrictMath&lt;/c0&gt; 类包含用于执行基本数学运算的方法，如初等指数、对数、平方根和三角函数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The class Authenticator represents an object that knows how to obtain authentication for a network connection.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T083135Z" creationid="pingfangx" creationdate="20191011T083135Z">
        <seg>Authenticator 类表示懂得如何获得网络连接验证的对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The class PasswordAuthentication is a data holder that is used by Authenticator.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T083331Z" creationid="pingfangx" creationdate="20191011T083331Z">
        <seg>PasswordAuthentication 类是供 Authenticator 使用的数据持有者。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The class implements a buffered output stream.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191010T094616Z" creationid="pingfangx" creationdate="20191010T094616Z">
        <seg>该类实现缓冲的输出流。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The class itself defines a programming interface to which applications may write.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T151959Z" creationid="pingfangx" creationdate="20191011T151959Z">
        <seg>该类本身定义了应用程序可以写入的编程接口。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The classes &lt;c1&gt;String&lt;/c1&gt;, &lt;c2&gt;StringBuffer&lt;/c2&gt;, and &lt;c3&gt;StringBuilder&lt;/c3&gt; similarly provide commonly used operations on character strings.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T062726Z" creationid="pingfangx" creationdate="20191012T062726Z">
        <seg>类似地，类 &lt;c1&gt;String&lt;/c1&gt;、&lt;c2&gt;StringBuffer&lt;/c2&gt; 和 &lt;c3&gt;StringBuilder&lt;/c3&gt; 提供了常用的字符串操作。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The classes are:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T081020Z" creationid="pingfangx" creationdate="20191011T081020Z">
        <seg>这些类为：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The common interface extended by all annotation types.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T082757Z" creationid="pingfangx" creationdate="20191012T082757Z">
        <seg>所有 annotation 类型都要扩展的公共接口。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The description of a security service.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T032454Z" creationid="pingfangx" creationdate="20191012T032454Z">
        <seg>安全服务的描述。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The implementations themselves may then be written by independent third-party vendors and plugged in seamlessly as needed.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T152001Z" creationid="pingfangx" creationdate="20191011T152001Z">
        <seg>实现本身可由独立的第三方厂商来写，可以根据需要进行无缝的插入。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The java.net package can be roughly divided in two sections:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T073136Z" creationid="pingfangx" creationdate="20191011T073136Z">
        <seg>java.net 包可以大致分为两个部分：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The java.net package provides 4 kinds of Sockets:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T080500Z" creationid="pingfangx" creationdate="20191011T080500Z">
        <seg>java.net 包提供 4 种套接字：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The most important classes are &lt;c0&gt;Object&lt;/c0&gt;, which is the root of the class hierarchy, and &lt;c1&gt;Class&lt;/c1&gt;, instances of which represent classes at run time.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T061431Z" creationid="pingfangx" creationdate="20191012T061431Z">
        <seg>最重要的类是 &lt;c0&gt;Object&lt;/c0&gt;（它是类层次结构的根）和 &lt;c1&gt;Class&lt;/c1&gt;（它的实例表示正在运行的应用程序中的类）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The multicast datagram socket class is useful for sending and receiving IP multicast packets.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T083325Z" creationid="pingfangx" creationdate="20191011T083325Z">
        <seg>多播数据报套接字类用于发送和接收 IP 多播包。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The program may remove references from a queue either by polling or by blocking until a reference becomes available.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T085809Z" creationid="pingfangx" creationdate="20191012T085809Z">
        <seg>通过轮询或阻塞，直到获得了引用，程序才可以从队列中移除引用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The reader/writer facility, available through the &lt;c4&gt;javax.sql.RowSet&lt;/c4&gt; group of interfaces, can be customized to use and update data from a spread sheet, flat file, or any other tabular data source.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T033029Z" creationid="pingfangx" creationdate="20191012T033029Z">
        <seg>通过接口的 &lt;c4&gt;javax.sql.RowSet&lt;/c4&gt; 组可以使用的 reader/writer 实用程序，可以被定制以使用和更新来自电子表格、纯文本文件或其他任何表格式数据源的数据。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The recommended usage is to use &lt;c0&gt;&lt;a1&gt;URI&lt;/a1&gt;&lt;/c0&gt; to identify resources, then convert it into a &lt;c2&gt;&lt;a3&gt;URL&lt;/a3&gt;&lt;/c2&gt; when it is time to access the resource.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T082826Z" creationid="pingfangx" creationdate="20191011T082826Z">
        <seg>建议的用法是使用 &lt;c0&gt;&lt;a1&gt;URI&lt;/a1&gt;&lt;/c0&gt; 指定资源，然后在访问资源时将其转换为 &lt;c2&gt;&lt;a3&gt;URL&lt;/a3&gt;&lt;/c2&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The relationship between a registered reference object and its queue is one-sided.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T090226Z" creationid="pingfangx" creationdate="20191012T090226Z">
        <seg>已注册的引用对象及其队列之间的关系是单向的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The root class from which all event state objects shall be derived.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T045553Z" creationid="pingfangx" creationdate="20191012T045553Z">
        <seg>所有事件状态对象都将从其派生的根类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The root interface in the &lt;i0&gt;collection hierarchy&lt;/i0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T034337Z" creationid="pingfangx" creationdate="20191012T034337Z">
        <seg>&lt;i0&gt;Collection 层次结构&lt;/i0&gt; 中的根接口。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The specification of the &lt;c0&gt;&lt;a1&gt;java.nio.charset.Charset&lt;/a1&gt;&lt;/c0&gt; class describes the naming conventions for character encodings as well as the set of standard encodings that must be supported by every implementation of the Java platform.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T064800Z" creationid="pingfangx" creationdate="20191012T064800Z">
        <seg>&lt;c0&gt;&lt;a1&gt;java.nio.charset.Charset&lt;/a1&gt;&lt;/c0&gt; 类的规范描述了字符编码的命名约定，以及每个 Java 平台实现必须支持的标准编码集。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The string tokenizer class allows an application to break a string into tokens.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T050208Z" creationid="pingfangx" creationdate="20191012T050208Z">
        <seg>string tokenizer 类允许应用程序将字符串分解为标记。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The type of the entity requesting authentication.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T083415Z" creationid="pingfangx" creationdate="20191011T083415Z">
        <seg>请求验证的实体的类型。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The wrapper classes &lt;c0&gt;Boolean&lt;/c0&gt;, &lt;c1&gt;Character&lt;/c1&gt;, &lt;c2&gt;Integer&lt;/c2&gt;, &lt;c3&gt;Long&lt;/c3&gt;, &lt;c4&gt;Float&lt;/c4&gt;, and &lt;c5&gt;Double&lt;/c5&gt; serve this purpose.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T061451Z" creationid="pingfangx" creationdate="20191012T061451Z">
        <seg>包装器类 &lt;c0&gt;Boolean&lt;/c0&gt;、&lt;c1&gt;Character&lt;/c1&gt;、&lt;c2&gt;Integer&lt;/c2&gt;、&lt;c3&gt;Long&lt;/c3&gt;、&lt;c4&gt;Float&lt;/c4&gt; 和 &lt;c5&gt;Double&lt;/c5&gt; 就是用于这个目的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There is a buffer class for each non-boolean primitive type.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T110929Z" creationid="pingfangx" creationdate="20191011T110929Z">
        <seg>每个非布尔基本类型都有一个缓冲区类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Therefore application developers may take advantage of any number of provider-based implementations without having to add or rewrite code.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T152003Z" creationid="pingfangx" creationdate="20191011T152003Z">
        <seg>因此，应用程序开发人员可以利用任何数量的基于提供商的实现而不必添加或重写代码。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Therefore soft and weak references need not be registered with a queue in order to be useful, while phantom references do.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T090535Z" creationid="pingfangx" creationdate="20191012T090535Z">
        <seg>所以，软引用和弱引用不需要向队列注册即可使用，而虚引用则需要这样做。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>These classes also provide a number of methods for converting among primitive values, as well as supporting such standard methods as equals and hashCode.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T061518Z" creationid="pingfangx" creationdate="20191012T061518Z">
        <seg>这些类还提供了大量用于转换基值的方法，并支持一些标准方法，比如 equals 和 hashCode。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>These classes are capable of formatting dates, numbers, and messages, parsing; searching and sorting strings; and iterating over characters, words, sentences, and line breaks.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T033110Z" creationid="pingfangx" creationdate="20191012T033110Z">
        <seg>这些类能够格式化日期、数字和消息、解析、搜索和排序字符串，以及迭代字符、单词、语句和换行符。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>They also support several features not found in the other buffer classes:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T111736Z" creationid="pingfangx" creationdate="20191011T111736Z">
        <seg>它们还支持其他缓冲区类所没有的几个特性：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>They are operationally defined as follows:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T090541Z" creationid="pingfangx" creationdate="20191012T090541Z">
        <seg>在操作上，可将它们定义如下：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This API includes a framework whereby different drivers can be installed dynamically to access different data sources.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T032844Z" creationid="pingfangx" creationdate="20191012T032844Z">
        <seg>此 API 包括一个框架，凭借此框架可以动态地安装不同驱动程序来访问不同数据源。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This Certificate interface is entirely deprecated and is here to allow for a smooth transition to the new package.&lt;/e0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T152150Z" creationid="pingfangx" creationdate="20191011T152150Z">
        <seg>此 Certificate 接口已完全废弃，其仍存在是为了能平稳地过渡到新包。&lt;/e0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This MessageDigest class provides applications the functionality of a message digest algorithm, such as SHA-1 or SHA-256.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T032444Z" creationid="pingfangx" creationdate="20191012T032444Z">
        <seg>此 MessageDigest 类为应用程序提供信息摘要算法的功能，如 SHA-1 或 SHA-256 算法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This abstract class is the superclass of all classes representing an input stream of bytes.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191010T100747Z" creationid="pingfangx" creationdate="20191010T100747Z">
        <seg>此抽象类是表示字节输入流的所有类的超类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This abstract class is the superclass of all classes representing an output stream of bytes.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191010T102651Z" creationid="pingfangx" creationdate="20191010T102651Z">
        <seg>此抽象类是表示输出字节流的所有类的超类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This abstract class will delegate most of the work to the underlying protocol handlers like http or ftp.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T082047Z" creationid="pingfangx" creationdate="20191011T082047Z">
        <seg>此抽象类将大多数工作委托给底层协议处理程序，如 http 或 ftp。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This allows the flexibility of adding localizations for new localizations at any time.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T033105Z" creationid="pingfangx" creationdate="20191012T033105Z">
        <seg>这实现了随时为新本地化添加本地化的灵活性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This class centralizes all security properties and common security methods.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T032502Z" creationid="pingfangx" creationdate="20191012T032502Z">
        <seg>此类集中了所有的安全属性和常见的安全方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This class consists exclusively of static methods that operate on or return collections.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T045448Z" creationid="pingfangx" creationdate="20191012T045448Z">
        <seg>此类完全由在 collection 上进行操作或返回 collection 的静态方法组成。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This class consists of &lt;c0&gt;static&lt;/c0&gt; utility methods for operating on objects.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T045903Z" creationid="pingfangx" creationdate="20191012T045903Z">
        <seg>这个类包含 &lt;c0&gt;static&lt;/c0&gt; 实用方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This class contains various methods for manipulating arrays (such as sorting and searching).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T045142Z" creationid="pingfangx" creationdate="20191012T045142Z">
        <seg>此类包含用来操作数组（比如排序和搜索）的各种方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This class defines the &lt;i0&gt;Service Provider Interface&lt;/i0&gt; (&lt;b1&gt;SPI&lt;/b1&gt;) for the &lt;c2&gt;AlgorithmParameterGenerator&lt;/c2&gt; class, which is used to generate a set of parameters to be used with a certain algorithm.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T031014Z" creationid="pingfangx" creationdate="20191012T023916Z">
        <seg>此类为 &lt;c2&gt;AlgorithmParameterGenerator&lt;/c2&gt; 类定义 &lt;i0&gt;服务提供者接口&lt;/i0&gt; (&lt;b1&gt;SPI&lt;/b1&gt;)，AlgorithmParameterGenerator 类用于生成在某个特定算法中使用的参数集合。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This class defines the &lt;i0&gt;Service Provider Interface&lt;/i0&gt; (&lt;b1&gt;SPI&lt;/b1&gt;) for the &lt;c2&gt;AlgorithmParameters&lt;/c2&gt; class, which is used to manage algorithm parameters.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T031234Z" creationid="pingfangx" creationdate="20191012T023826Z">
        <seg>此类为 &lt;c2&gt;AlgorithmParameters&lt;/c2&gt; 类定义 &lt;i0&gt;服务提供者接口&lt;/i0&gt; (&lt;b1&gt;SPI&lt;/b1&gt;)，AlgorithmParameters 类用于管理算法参数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This class defines the &lt;i0&gt;Service Provider Interface&lt;/i0&gt; (&lt;b1&gt;SPI&lt;/b1&gt;) for the &lt;c2&gt;KeyFactory&lt;/c2&gt; class.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T032254Z" creationid="pingfangx" creationdate="20191012T032254Z">
        <seg>此类为 &lt;c2&gt;KeyFactory&lt;/c2&gt; 类定义 &lt;i0&gt;服务提供者接口&lt;/i0&gt; (&lt;b1&gt;SPI&lt;/b1&gt;)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This class defines the &lt;i0&gt;Service Provider Interface&lt;/i0&gt; (&lt;b1&gt;SPI&lt;/b1&gt;) for the &lt;c2&gt;KeyPairGenerator&lt;/c2&gt; class, which is used to generate pairs of public and private keys.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T032258Z" creationid="pingfangx" creationdate="20191012T032258Z">
        <seg>此类为用来生成公钥和私钥的 &lt;c2&gt;KeyPairGenerator&lt;/c2&gt; 类定义了 &lt;i0&gt;服务提供者接口&lt;/i0&gt; (&lt;b1&gt;SPI&lt;/b1&gt;)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This class defines the &lt;i0&gt;Service Provider Interface&lt;/i0&gt; (&lt;b1&gt;SPI&lt;/b1&gt;) for the &lt;c2&gt;KeyStore&lt;/c2&gt; class.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T032410Z" creationid="pingfangx" creationdate="20191012T032410Z">
        <seg>此类为 &lt;c2&gt;KeyStore&lt;/c2&gt; 类定义 &lt;i0&gt;服务提供者接口&lt;/i0&gt; (&lt;b1&gt;SPI&lt;/b1&gt;)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This class defines the &lt;i0&gt;Service Provider Interface&lt;/i0&gt; (&lt;b1&gt;SPI&lt;/b1&gt;) for the &lt;c2&gt;MessageDigest&lt;/c2&gt; class, which provides the functionality of a message digest algorithm, such as MD5 or SHA.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T032447Z" creationid="pingfangx" creationdate="20191012T032447Z">
        <seg>此类为 &lt;c2&gt;MessageDigest&lt;/c2&gt; 类定义 &lt;i0&gt;服务提供者接口&lt;/i0&gt; (&lt;b1&gt;SPI&lt;/b1&gt;)，MessageDigest 类提供信息摘要算法的功能，如 MD5 或 SHA。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This class defines the &lt;i0&gt;Service Provider Interface&lt;/i0&gt; (&lt;b1&gt;SPI&lt;/b1&gt;) for the &lt;c2&gt;Policy&lt;/c2&gt; class.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T032450Z" creationid="pingfangx" creationdate="20191012T032450Z">
        <seg>此类为 &lt;c2&gt;Policy&lt;/c2&gt; 类定义 &lt;i0&gt;服务提供者接口&lt;/i0&gt; (&lt;b1&gt;SPI&lt;/b1&gt;)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This class defines the &lt;i0&gt;Service Provider Interface&lt;/i0&gt; (&lt;b1&gt;SPI&lt;/b1&gt;) for the &lt;c2&gt;SecureRandom&lt;/c2&gt; class.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T032500Z" creationid="pingfangx" creationdate="20191012T032500Z">
        <seg>此类为 &lt;c2&gt;SecureRandom&lt;/c2&gt; 类定义了 &lt;i0&gt;服务提供者接口&lt;/i0&gt; (&lt;b1&gt;SPI&lt;/b1&gt;)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This class defines the &lt;i0&gt;Service Provider Interface&lt;/i0&gt; (&lt;b1&gt;SPI&lt;/b1&gt;) for the &lt;c2&gt;Signature&lt;/c2&gt; class, which is used to provide the functionality of a digital signature algorithm.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T032525Z" creationid="pingfangx" creationdate="20191012T032525Z">
        <seg>此类为 &lt;c2&gt;Signature&lt;/c2&gt; 类定义了 &lt;i0&gt;服务提供者接口&lt;/i0&gt; (&lt;b1&gt;SPI&lt;/b1&gt;)，可用来提供数字签名算法功能。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This class does not properly convert characters into bytes.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191010T102817Z" creationid="pingfangx" creationdate="20191010T102817Z">
        <seg>此类未能正确地将字符转换为字节。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This class encapsulates information about a code signer.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T023831Z" creationid="pingfangx" creationdate="20191012T023831Z">
        <seg>此类扩展 codebase 的概念，不仅可以封装位置 (URL) 而且可以封装用于验证起源于该位置的签名代码的证书链。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This class encapsulates information about a signed timestamp.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T032547Z" creationid="pingfangx" creationdate="20191012T032547Z">
        <seg>此类封装有关签署时间戳的信息。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This class extends &lt;t0&gt;ThreadLocal&lt;/t0&gt; to provide inheritance of values from parent thread to child thread: when a child thread is created, the child receives initial values for all inheritable thread-local variables for which the parent has values.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T071408Z" creationid="pingfangx" creationdate="20191012T071408Z">
        <seg>该类扩展了 &lt;t0&gt;ThreadLocal&lt;/t0&gt;，为子线程提供从父线程那里继承的值：在创建子线程时，子线程会接收所有可继承的线程局部变量的初始值，以获得父线程所具有的值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This class extends ClassLoader with additional support for defining classes with an associated code source and permissions which are retrieved by the system policy by default.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T032455Z" creationid="pingfangx" creationdate="20191012T032455Z">
        <seg>此类扩展了 ClassLoader，使它另外还支持使用相关的代码源和权限定义类，这些代码源和权限默认情况下可根据系统策略获取到。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This class implements a character buffer that can be used as a character-input stream.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191010T094658Z" creationid="pingfangx" creationdate="20191010T094658Z">
        <seg>此类实现一个可用作字符输入流的字符缓冲区。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This class implements a character buffer that can be used as an Writer.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191010T094704Z" creationid="pingfangx" creationdate="20191010T094704Z">
        <seg>此类实现一个可用作 Writer 的字符缓冲区。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This class implements a hash table, which maps keys to values.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T045650Z" creationid="pingfangx" creationdate="20191012T045650Z">
        <seg>此类实现一个哈希表，该哈希表将键映射到相应的值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This class implements a vector of bits that grows as needed.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T045202Z" creationid="pingfangx" creationdate="20191012T045202Z">
        <seg>此类实现了一个按需增长的位向量。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This class implements an IP Socket Address (IP address + port number) It can also be a pair (hostname + port number), in which case an attempt will be made to resolve the hostname.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T083318Z" creationid="pingfangx" creationdate="20191011T083318Z">
        <seg>此类实现 IP 套接字地址（IP 地址 + 端口号），它也可以是一对(主机名+端口号)，在这种情况下，将尝试解析主机名。。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This class implements an output stream in which the data is written into a byte array.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191010T094651Z" creationid="pingfangx" creationdate="20191010T094651Z">
        <seg>此类实现了一个输出流，其中的数据被写入一个 byte 数组。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This class implements client sockets (also called just "sockets").</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T083347Z" creationid="pingfangx" creationdate="20191011T083347Z">
        <seg>此类实现客户端套接字（也可以就叫“套接字”）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This class implements server sockets.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T083339Z" creationid="pingfangx" creationdate="20191011T083339Z">
        <seg>此类实现服务器套接字。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This class implements the &lt;t0&gt;Map&lt;/t0&gt; interface with a hash table, using reference-equality in place of object-equality when comparing keys (and values).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T045703Z" creationid="pingfangx" creationdate="20191012T045703Z">
        <seg>此类利用哈希表实现 &lt;t0&gt;Map&lt;/t0&gt; 接口，比较键（和值）时使用引用相等性代替对象相等性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This class implements the &lt;t0&gt;Set&lt;/t0&gt; interface, backed by a hash table (actually a &lt;t1&gt;HashMap&lt;/t1&gt; instance).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T045640Z" creationid="pingfangx" creationdate="20191012T045640Z">
        <seg>此类实现 &lt;t0&gt;Set&lt;/t0&gt; 接口，由哈希表（实际上是一个 &lt;t1&gt;HashMap&lt;/t1&gt; 实例）支持。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This class implements the Unicode Bidirectional Algorithm.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T033203Z" creationid="pingfangx" creationdate="20191012T033203Z">
        <seg>此类实现了 Unicode 双向算法 (Unicode Bidirectional Algorithm)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This class incorrectly assumes that bytes adequately represent characters.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191010T101745Z" creationid="pingfangx" creationdate="20191010T101745Z">
        <seg>此类错误假定字节能充分表示字符。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This class is a simple holder for a key pair (a public key and a private key).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T032255Z" creationid="pingfangx" creationdate="20191012T032255Z">
        <seg>此类是简单的密钥对（公钥和私钥）持有者。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This class is no longer used.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T031503Z" creationid="pingfangx" creationdate="20191012T031503Z">
        <seg>将不再使用此类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This class is the superclass of all classes that filter output streams.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191010T100741Z" creationid="pingfangx" creationdate="20191010T100741Z">
        <seg>此类是过滤输出流的所有类的超类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This class is used as an opaque representation of cryptographic parameters.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T153239Z" creationid="pingfangx" creationdate="20191011T153239Z">
        <seg>此类用作密码参数的不透明表示形式。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This class is used to create operating system processes.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T071547Z" creationid="pingfangx" creationdate="20191012T071547Z">
        <seg>此类用于创建操作系统进程。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This class loader is used to load classes and resources from a search path of URLs referring to both JAR files and directories.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T083408Z" creationid="pingfangx" creationdate="20191011T083408Z">
        <seg>该类加载器用于从指向 JAR 文件和目录的 URL 的搜索路径加载类和资源。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This class provides a cryptographically strong random number generator (RNG).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T032459Z" creationid="pingfangx" creationdate="20191012T032459Z">
        <seg>此类提供强加密随机数生成器 (RNG)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This class provides a skeletal implementation of the &lt;c0&gt;&lt;a1&gt;List&lt;/a1&gt;&lt;/c0&gt; interface to minimize the effort required to implement this interface backed by a "random access" data store (such as an array).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T045054Z" creationid="pingfangx" creationdate="20191012T045054Z">
        <seg>此类提供 &lt;c0&gt;&lt;a1&gt;List&lt;/a1&gt;&lt;/c0&gt; 接口的骨干实现，以最大限度地减少实现“随机访问”数据存储（如数组）支持的该接口所需的工作。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This class provides a skeletal implementation of the &lt;t0&gt;Collection&lt;/t0&gt; interface, to minimize the effort required to implement this interface.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T045045Z" creationid="pingfangx" creationdate="20191012T045045Z">
        <seg>此类提供 &lt;t0&gt;Collection&lt;/t0&gt; 接口的骨干实现，以最大限度地减少了实现此接口所需的工作。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This class provides a skeletal implementation of the &lt;t0&gt;List&lt;/t0&gt; interface to minimize the effort required to implement this interface backed by a "sequential access" data store (such as a linked list).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T045121Z" creationid="pingfangx" creationdate="20191012T045121Z">
        <seg>此类提供了 &lt;t0&gt;List&lt;/t0&gt; 接口的骨干实现，从而最大限度地减少了实现受“连续访问”数据存储（如链接列表）支持的此接口所需的工作。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This class provides a skeletal implementation of the &lt;t0&gt;Map&lt;/t0&gt; interface, to minimize the effort required to implement this interface.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T045057Z" creationid="pingfangx" creationdate="20191012T045057Z">
        <seg>此类提供 &lt;t0&gt;Map&lt;/t0&gt; 接口的骨干实现，以最大限度地减少实现此接口所需的工作。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This class provides a skeletal implementation of the &lt;t0&gt;Set&lt;/t0&gt; interface to minimize the effort required to implement this interface.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T045124Z" creationid="pingfangx" creationdate="20191012T045124Z">
        <seg>此类提供 &lt;t0&gt;Set&lt;/t0&gt; 接口的骨干实现，从而最大限度地减少了实现此接口所需的工作。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This class provides skeletal implementations of some &lt;c0&gt;&lt;a1&gt;Queue&lt;/a1&gt;&lt;/c0&gt; operations.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T045112Z" creationid="pingfangx" creationdate="20191012T045112Z">
        <seg>此类提供某些 &lt;c0&gt;&lt;a1&gt;Queue&lt;/a1&gt;&lt;/c0&gt; 操作的骨干实现。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This class provides the method &lt;c0&gt;normalize&lt;/c0&gt; which transforms Unicode text into an equivalent composed or decomposed form, allowing for easier sorting and searching of text.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T033440Z" creationid="pingfangx" creationdate="20191012T033440Z">
        <seg>此类提供 &lt;c0&gt;normalize&lt;/c0&gt; 方法，它把 Unicode 文本转换为等效的组合或分解形式，允许对文本进行更方便地分类和搜索。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This class provides thread-local variables.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T071731Z" creationid="pingfangx" creationdate="20191012T071731Z">
        <seg>该类提供了线程局部 (thread-local) 变量。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This class represents a "provider" for the Java Security API, where a provider implements some or all parts of Java Security.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T032453Z" creationid="pingfangx" creationdate="20191012T032453Z">
        <seg>此类表示 Java 安全 API "provider"，这里 provider 实现了 Java 安全性的一部分或者全部。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This class represents a Network Interface address.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T083319Z" creationid="pingfangx" creationdate="20191011T083319Z">
        <seg>此类表示网络接口地址。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This class represents a Network Interface made up of a name, and a list of IP addresses assigned to this interface.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T083329Z" creationid="pingfangx" creationdate="20191011T083329Z">
        <seg>此类表示一个由名称和分配给此接口的 IP 地址列表组成的网络接口。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This class represents a Socket Address with no protocol attachment.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T083349Z" creationid="pingfangx" creationdate="20191011T083349Z">
        <seg>此类表示不带任何协议附件的 Socket Address。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This class represents a datagram packet.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T083154Z" creationid="pingfangx" creationdate="20191011T083154Z">
        <seg>此类表示数据报包。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This class represents a proxy setting, typically a type (http, socks) and a socket address.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T083334Z" creationid="pingfangx" creationdate="20191011T083334Z">
        <seg>此类表示代理设置，通常为类型（http、socks）和套接字地址。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This class represents a socket for sending and receiving datagram packets.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T083155Z" creationid="pingfangx" creationdate="20191011T083155Z">
        <seg>此类表示用来发送和接收数据报包的套接字。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This class represents a storage facility for cryptographic keys and certificates.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T032300Z" creationid="pingfangx" creationdate="20191012T032300Z">
        <seg>此类表示密钥和证书的存储设施。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This class represents an Internet Protocol (IP) address.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T083205Z" creationid="pingfangx" creationdate="20191011T083205Z">
        <seg>此类表示互联网协议 (IP) 地址。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This class represents an Internet Protocol version 4 (IPv4) address.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T083202Z" creationid="pingfangx" creationdate="20191011T083202Z">
        <seg>此类表示 Internet Protocol version 4 (IPv4) 地址。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This class represents an Internet Protocol version 6 (IPv6) address.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T083204Z" creationid="pingfangx" creationdate="20191011T083204Z">
        <seg>此类表示互联网协议第 6 版 (IPv6) 地址。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This class represents an observable object, or "data" in the model-view paradigm.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T045906Z" creationid="pingfangx" creationdate="20191012T045906Z">
        <seg>此类表示模型视图范例中的 observable 对象，或者说“数据”。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This class represents the set of symbols (such as the decimal separator, the grouping separator, and so on) needed by &lt;c0&gt;DecimalFormat&lt;/c0&gt; to format numbers.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T033426Z" creationid="pingfangx" creationdate="20191012T033426Z">
        <seg>此类表示了 &lt;c0&gt;DecimalFormat&lt;/c0&gt; 格式化数字所需的符号集（如小数点、组分隔符等等）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This enum provides constants of the four Unicode normalization forms that are described in &lt;a0&gt; Unicode Standard Annex #15 — Unicode Normalization Forms&lt;/a0&gt; and two methods to access them.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T033653Z" creationid="pingfangx" creationdate="20191012T033653Z">
        <seg>此枚举提供在 &lt;a0&gt; Unicode Standard Annex #15 — Unicode Normalization Forms&lt;/a0&gt; 中描述的四个 Unicode 标准化形式的常量，以及访问这些常量的两个方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This exception is thrown by the AccessController to indicate that a requested access (to a critical system resource such as the file system or the network) is denied.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T032601Z" creationid="pingfangx" creationdate="20191012T032601Z">
        <seg>此异常由 AccessController 抛出，提示请求的访问（对关键系统资源（如文件系统或网络）的访问）被拒绝。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This exception is thrown if a key in the keystore cannot be recovered.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T032652Z" creationid="pingfangx" creationdate="20191012T032652Z">
        <seg>如果 keystore 中的密钥无法恢复，则抛出此异常。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This exception is thrown if an entry in the keystore cannot be recovered.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T032650Z" creationid="pingfangx" creationdate="20191012T032650Z">
        <seg>如果 keystore 中的某项无法恢复，则抛出此异常。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This exception is thrown when a particular cryptographic algorithm is requested but is not available in the environment.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T032633Z" creationid="pingfangx" creationdate="20191012T032633Z">
        <seg>当请求特定的加密算法而它在该环境中不可用时抛出此异常。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This exception is thrown when a particular security provider is requested but is not available in the environment.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T032638Z" creationid="pingfangx" creationdate="20191012T032638Z">
        <seg>当请求特定安全性 provider 但它在该环境中不可用时抛出此异常。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This exception may be thrown by methods that have detected concurrent modification of an object when such modification is not permissible.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T033742Z" creationid="pingfangx" creationdate="20191012T033742Z">
        <seg>当方法检测到对象的并发修改，但不允许这种修改时，抛出此异常。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This exception, designed for use by the JCA/JCE engine classes, is thrown when an invalid parameter is passed to a method.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T032628Z" creationid="pingfangx" creationdate="20191012T032628Z">
        <seg>当将无效参数传递给某个方法时抛出此异常，设计该异常供 JCA/JCE 引擎类使用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This includes classes that implement an easily configurable, fine-grained access control security architecture.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T151900Z" creationid="pingfangx" creationdate="20191011T151900Z">
        <seg>包括那些实现了可方便配置的、细粒度的访问控制安全架构的类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This interface defines a factory for &lt;c0&gt;URL&lt;/c0&gt; stream protocol handlers.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T083129Z" creationid="pingfangx" creationdate="20191011T083129Z">
        <seg>该接口为 &lt;c0&gt;URL&lt;/c0&gt; 流协议处理程序定义一个工厂。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This interface defines a factory for content handlers.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T083027Z" creationid="pingfangx" creationdate="20191011T083027Z">
        <seg>此接口定义内容处理程序的工厂。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This interface defines a factory for datagram socket implementations.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T083041Z" creationid="pingfangx" creationdate="20191011T083041Z">
        <seg>此接口定义用于数据报套接字实现的工厂。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This interface defines a factory for socket implementations.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T083103Z" creationid="pingfangx" creationdate="20191011T083103Z">
        <seg>此接口定义用于套接字实现的工厂。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This interface defines a protocol for bidirectional iteration over text.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T033150Z" creationid="pingfangx" creationdate="20191012T033150Z">
        <seg>此接口定义了对文本进行双向迭代的协议。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This interface imposes a total ordering on the objects of each class that implements it.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T065733Z" creationid="pingfangx" creationdate="20191012T065733Z">
        <seg>此接口强行对实现它的每个类的对象进行整体排序。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This interface represents a guard, which is an object that is used to protect access to another object.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T152257Z" creationid="pingfangx" creationdate="20191011T152257Z">
        <seg>此接口表示一个 guard，guard 是用来保护对另一个对象的访问的对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This interface represents the abstract notion of a principal, which can be used to represent any entity, such as an individual, a corporation, and a login id.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T152419Z" creationid="pingfangx" creationdate="20191011T152419Z">
        <seg>此接口表示主体的抽象概念，它可以用来表示任何实体，例如，个人、公司或登录 id。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This interface specifies constraints for cryptographic algorithms, keys (key sizes), and other algorithm parameters.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T152108Z" creationid="pingfangx" creationdate="20191011T152108Z">
        <seg>此接口指定用于加密的算法，密钥(密钥大小)，和其他算法参数约束。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is how the &lt;c0&gt;&lt;c1&gt;&lt;a2&gt;WeakHashMap&lt;/a2&gt;&lt;/c1&gt;&lt;/c0&gt; class works.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T090438Z" creationid="pingfangx" creationdate="20191012T090438Z">
        <seg>这就是 &lt;c0&gt;&lt;c1&gt;&lt;a2&gt;WeakHashMap&lt;/a2&gt;&lt;/c1&gt;&lt;/c0&gt; 类的工作方式。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is the basic key exception.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T032629Z" creationid="pingfangx" creationdate="20191012T032629Z">
        <seg>此异常是基本的密钥异常。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is the common base class of all Java language enumeration types.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T071307Z" creationid="pingfangx" creationdate="20191012T071307Z">
        <seg>这是所有 Java 语言枚举类型的公共基本类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is the exception for invalid Keys (invalid encoding, wrong length, uninitialized, etc).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T032626Z" creationid="pingfangx" creationdate="20191012T032626Z">
        <seg>用于无效 Key（无效的编码、错误的长度、未初始化等）的异常。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is the exception for invalid or inappropriate algorithm parameters.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T032606Z" creationid="pingfangx" creationdate="20191012T032606Z">
        <seg>用于无效或不合适的算法参数的异常。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is the general key management exception for all operations dealing with key management.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T032630Z" creationid="pingfangx" creationdate="20191012T032630Z">
        <seg>此异常是用于所有处理密钥管理的操作的通用密钥管理异常。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is the generic KeyStore exception.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T032632Z" creationid="pingfangx" creationdate="20191012T032632Z">
        <seg>这是一般的 KeyStore 异常。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is the generic Message Digest exception.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T032603Z" creationid="pingfangx" creationdate="20191012T032603Z">
        <seg>此为一般 Message Digest 异常。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is the generic Signature exception.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T032648Z" creationid="pingfangx" creationdate="20191012T032648Z">
        <seg>这是一般的签名异常。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is the major difference with URIs which only identify resources, and therefore don't need to have access to the protocol handler.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T082851Z" creationid="pingfangx" creationdate="20191011T082851Z">
        <seg>此为与 URI 的主要不同点，URI 仅标识资源，所以不必访问协议处理程序。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This means your main application or applet can be written to be language-independent, and it can rely upon separate, dynamically-linked localized resources.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T033103Z" creationid="pingfangx" creationdate="20191012T033103Z">
        <seg>这意味着所编写的主程序或 applet 是与语言无关的，并且它可以依靠独立的、动态链接的本地化资源。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This package also supports the generation and storage of cryptographic public key pairs, as well as a number of exportable cryptographic operations including those for message digest and signature generation.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T151922Z" creationid="pingfangx" creationdate="20191011T151922Z">
        <seg>此包也支持密码公钥对的生成和存储，以及包括信息摘要和签名生成在内的可输出密码操作。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This package contains three main groups of classes and interfaces:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T033111Z" creationid="pingfangx" creationdate="20191012T033111Z">
        <seg>此包包含类和接口的三大主要组：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Three types of reference objects are provided, each weaker than the last: &lt;e1&gt;soft&lt;/e1&gt;, &lt;e2&gt;weak&lt;/e2&gt;, and &lt;e3&gt;phantom&lt;/e3&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T085534Z" creationid="pingfangx" creationdate="20191012T085534Z">
        <seg>有三种类型的引用对象，按从弱到强依次为： &lt;e1&gt;软&lt;/e1&gt; 引用、 &lt;e2&gt;弱&lt;/e2&gt; 引用和 &lt;e3&gt;虚&lt;/e3&gt; 引用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Thrown by &lt;c0&gt;String&lt;/c0&gt; methods to indicate that an index is either negative or greater than the size of the string.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T073129Z" creationid="pingfangx" creationdate="20191012T073129Z">
        <seg>此异常由 &lt;c0&gt;String&lt;/c0&gt; 方法抛出，指示索引或者为负，或者超出字符串的大小。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Thrown by a &lt;c0&gt;Scanner&lt;/c0&gt; to indicate that the token retrieved does not match the pattern for the expected type, or that the token is out of range for the expected type.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T050429Z" creationid="pingfangx" creationdate="20191012T050429Z">
        <seg>由 &lt;c0&gt;Scanner&lt;/c0&gt; 抛出，表明获取的标记与期望类型的模式不匹配，或者该标记超出期望类型的范围。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Thrown by a method invocation on a proxy instance if its invocation handler's &lt;c0&gt;&lt;a1&gt;invoke&lt;/a1&gt;&lt;/c0&gt; method throws a checked exception (a &lt;c2&gt;Throwable&lt;/c2&gt; that is not assignable to &lt;c3&gt;RuntimeException&lt;/c3&gt; or &lt;c4&gt;Error&lt;/c4&gt;) that is not assignable to any of the exception types declared in the &lt;c5&gt;throws&lt;/c5&gt; clause of the method that was invoked on the proxy instance and dispatched to the invocation handler.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T092231Z" creationid="pingfangx" creationdate="20191012T092231Z">
        <seg>如果代理实例的调用处理程序的 &lt;c0&gt;&lt;a1&gt;invoke&lt;/a1&gt;&lt;/c0&gt; 方法抛出一个经过检查的异常（不可分配给 &lt;c2&gt;RuntimeException&lt;/c2&gt; 或 &lt;c3&gt;Error&lt;/c3&gt; 的 &lt;c4&gt;Throwable&lt;/c4&gt; ），且该异常不可分配给该方法（在代理实例上调用该方法，并将其指派到调用处理程序）的 &lt;c5&gt;throws&lt;/c5&gt; 子句中声明的任何异常类，则由代理实例上的方法调用抛出此异常。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Thrown by methods in &lt;c0&gt;&lt;a1&gt;Locale&lt;/a1&gt;&lt;/c0&gt; and &lt;c2&gt;&lt;a3&gt;Locale.Builder&lt;/a3&gt;&lt;/c2&gt; to indicate that an argument is not a well-formed BCP 47 tag.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T050550Z" creationid="pingfangx" creationdate="20191012T050550Z">
        <seg>由方法 &lt;c0&gt;&lt;a1&gt;Locale&lt;/a1&gt;&lt;/c0&gt; 和 &lt;c2&gt;&lt;a3&gt;Locale.Builder&lt;/a3&gt;&lt;/c2&gt; 抛出以指示参数不是一个正确格式的 BCP 47 标签。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Thrown by methods in the &lt;c0&gt;Stack&lt;/c0&gt; class to indicate that the stack is empty.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T050345Z" creationid="pingfangx" creationdate="20191012T050345Z">
        <seg>该异常由 &lt;c0&gt;Stack&lt;/c0&gt; 类中的方法抛出，以表明堆栈为空。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Thrown by the &lt;c0&gt;nextElement&lt;/c0&gt; method of an &lt;c1&gt;Enumeration&lt;/c1&gt; to indicate that there are no more elements in the enumeration.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T050434Z" creationid="pingfangx" creationdate="20191012T050434Z">
        <seg>由 &lt;c0&gt;Enumeration&lt;/c0&gt; 的 &lt;c1&gt;nextElement&lt;/c1&gt; 方法抛出，表明枚举中没有更多的元素。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Thrown by the security manager to indicate a security violation.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T073127Z" creationid="pingfangx" creationdate="20191012T073127Z">
        <seg>由安全管理器抛出的异常，指示存在安全侵犯。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Thrown if an application attempts to access or modify a field, or to call a method that it does not have access to.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T073532Z" creationid="pingfangx" creationdate="20191012T073219Z">
        <seg>当应用程序试图访问或修改它不能访问的字段，或调用它不能访问的方法时，抛出该错误。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Thrown if an application tries to access or modify a specified field of an object, and that object no longer has that field.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T073546Z" creationid="pingfangx" creationdate="20191012T073231Z">
        <seg>如果应用程序试图访问或修改一个指定的对象字段，而该对象不再包含该字段时，抛出该错误。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Thrown if an application tries to call a specified method of a class (either static or instance), and that class no longer has a definition of that method.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T073548Z" creationid="pingfangx" creationdate="20191012T073233Z">
        <seg>当应用程序试图调用类（静态或实例）的指定方法，而该类已不再具有该方法的定义时，抛出该错误。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Thrown if an application tries to create an array with negative size.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T073034Z" creationid="pingfangx" creationdate="20191012T073034Z">
        <seg>如果应用程序试图创建大小为负的数组，则抛出该异常。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Thrown if the Java Virtual Machine cannot find an appropriate native-language definition of a method declared &lt;c0&gt;native&lt;/c0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T073432Z" creationid="pingfangx" creationdate="20191012T073432Z">
        <seg>当 Java 虚拟机无法找到声明为 &lt;c0&gt;native&lt;/c0&gt; 的方法的适当本地语言定义时，抛出该错误。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Thrown if the Java Virtual Machine or a &lt;c0&gt;ClassLoader&lt;/c0&gt; instance tries to load in the definition of a class (as part of a normal method call or as part of creating a new instance using the &lt;c1&gt;new&lt;/c1&gt; expression) and no definition of the class could be found.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T073707Z" creationid="pingfangx" creationdate="20191012T073228Z">
        <seg>当 Java 虚拟机或 &lt;c0&gt;ClassLoader&lt;/c0&gt; 实例试图在类的定义中加载（作为通常方法调用的一部分或者作为使用 &lt;c1&gt;new&lt;/c1&gt; 表达式创建的新实例的一部分），但无法找到该类的定义时，抛出此错误。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Thrown to indicate some unexpected internal error has occurred in the Java Virtual Machine.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T073659Z" creationid="pingfangx" creationdate="20191012T073223Z">
        <seg>该错误指示 Java 虚拟机中出现一些意外的内部错误。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Thrown to indicate that a HTTP request needs to be retried but cannot be retried automatically, due to streaming mode being enabled.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T083434Z" creationid="pingfangx" creationdate="20191011T083434Z">
        <seg>抛出此异常指示 HTTP 请求需要重试，但由于启用了流模式而无法自动重试。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Thrown to indicate that a malformed URL has occurred.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T083435Z" creationid="pingfangx" creationdate="20191011T083435Z">
        <seg>抛出这一异常指示出现了错误的 URL。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Thrown to indicate that a method has been passed an illegal or inappropriate argument.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T073013Z" creationid="pingfangx" creationdate="20191012T073013Z">
        <seg>抛出的异常表明向方法传递了一个不合法或不正确的参数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Thrown to indicate that a program has attempted to access an element of an annotation type that was added to the annotation type definition after the annotation was compiled (or serialized).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T082805Z" creationid="pingfangx" creationdate="20191012T082805Z">
        <seg>若某个注释在编译（或序列化）后将某个注释类型添加到其类型定义中，而程序试图该注释类型的元素时，抛出此异常。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Thrown to indicate that a program has attempted to access an element of an annotation whose type has changed after the annotation was compiled (or serialized).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T082804Z" creationid="pingfangx" creationdate="20191012T082804Z">
        <seg>若某个注释的类型在对该注释进行编译（或序列化）后发生了更改，而程序试图访问该注释的元素时，抛出此异常。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Thrown to indicate that a thread has attempted to wait on an object's monitor or to notify other threads waiting on an object's monitor without owning the specified monitor.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T073019Z" creationid="pingfangx" creationdate="20191012T073019Z">
        <seg>抛出的异常表明某一线程已经试图等待对象的监视器，或者试图通知其他正在等待对象的监视器而本身没有指定监视器的线程。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Thrown to indicate that a thread is not in an appropriate state for the requested operation.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T073023Z" creationid="pingfangx" creationdate="20191012T073023Z">
        <seg>指示线程没有处于请求操作所要求的适当状态时抛出的异常。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Thrown to indicate that an array has been accessed with an illegal index.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T072925Z" creationid="pingfangx" creationdate="20191012T072925Z">
        <seg>用非法索引访问数组时抛出的异常。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Thrown to indicate that an assertion has failed.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T073631Z" creationid="pingfangx" creationdate="20191012T073138Z">
        <seg>抛出该错误指示某个断言失败。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Thrown to indicate that an attempt has been made to store the wrong type of object into an array of objects.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T072928Z" creationid="pingfangx" creationdate="20191012T072928Z">
        <seg>试图将错误类型的对象存储到一个对象数组时抛出的异常。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Thrown to indicate that an index of some sort (such as to an array, to a string, or to a vector) is out of range.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T073025Z" creationid="pingfangx" creationdate="20191012T073025Z">
        <seg>指示某排序索引（例如对数组、字符串或向量的排序）超出范围时抛出。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Thrown to indicate that an operation could not complete because the input did not conform to the appropriate XML document type for a collection of properties, as per the &lt;c0&gt;&lt;a1&gt;Properties&lt;/a1&gt;&lt;/c0&gt; specification.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T050431Z" creationid="pingfangx" creationdate="20191012T050431Z">
        <seg>当按照 &lt;c0&gt;&lt;a1&gt;Properties&lt;/a1&gt;&lt;/c0&gt; 规范，输入内容不符合属性集的正确 XML 文档类型，从而无法完成操作时，抛出此异常。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Thrown to indicate that an unknown service exception has occurred.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T083539Z" creationid="pingfangx" creationdate="20191011T083539Z">
        <seg>抛出这一异常指示出现了未知服务异常。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Thrown to indicate that the &lt;c0&gt;clone&lt;/c0&gt; method in class &lt;c1&gt;Object&lt;/c1&gt; has been called to clone an object, but that the object's class does not implement the &lt;c2&gt;Cloneable&lt;/c2&gt; interface.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T072942Z" creationid="pingfangx" creationdate="20191012T072942Z">
        <seg>当调用 &lt;c0&gt;Object&lt;/c0&gt; 类中的 &lt;c1&gt;clone&lt;/c1&gt; 方法复制对象，但该对象的类无法实现 &lt;c2&gt;Cloneable&lt;/c2&gt; 接口时，抛出该异常。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Thrown to indicate that the IP address of a host could not be determined.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T083538Z" creationid="pingfangx" creationdate="20191011T083538Z">
        <seg>指示主机 IP 地址无法确定而抛出的异常。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Thrown to indicate that the Java Virtual Machine is broken or has run out of resources necessary for it to continue operating.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T073452Z" creationid="pingfangx" creationdate="20191012T073452Z">
        <seg>当 Java 虚拟机崩溃或用尽了它继续操作所需的资源时，抛出该错误。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Thrown to indicate that the application has attempted to convert a string to one of the numeric types, but that the string does not have the appropriate format.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T073046Z" creationid="pingfangx" creationdate="20191012T073046Z">
        <seg>当应用程序试图将字符串转换成一种数值类型，但该字符串不能转换为适当格式时，抛出该异常。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Thrown to indicate that the code has attempted to cast an object to a subclass of which it is not an instance.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T072932Z" creationid="pingfangx" creationdate="20191012T072932Z">
        <seg>当试图将对象强制转换为不是实例的子类时，抛出该异常。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Thrown to indicate that the requested operation is not supported.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T073132Z" creationid="pingfangx" creationdate="20191012T073132Z">
        <seg>当不支持请求的操作时，抛出该异常。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Thrown to indicate that there is an error creating or accessing a Socket.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T083536Z" creationid="pingfangx" creationdate="20191011T083517Z">
        <seg>抛出此异常指示在创建或访问一个 Socket 时存在错误。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Thrown to indicate that there is an error in the underlying protocol, such as a TCP error.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T083439Z" creationid="pingfangx" creationdate="20191011T083439Z">
        <seg>抛出此异常指示在底层协议中存在错误，如 TCP 错误。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Thrown when a particular method cannot be found.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T073038Z" creationid="pingfangx" creationdate="20191012T073038Z">
        <seg>无法找到某一特定方法时，抛出该异常。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Thrown when a semantically malformed parameterized type is encountered by a reflective method that needs to instantiate it.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T092212Z" creationid="pingfangx" creationdate="20191012T092212Z">
        <seg>当反射方法遇到语义错误的参数化类型，而反射方法需要实例化该类型时，抛出该异常。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Thrown when a serious I/O error has occurred.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T065640Z" creationid="pingfangx" creationdate="20191011T065640Z">
        <seg>当发生严重的 I/O 错误时，抛出此错误。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Thrown when a stack overflow occurs because an application recurses too deeply.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T073239Z" creationid="pingfangx" creationdate="20191012T073239Z">
        <seg>当应用程序递归太深而发生堆栈溢出时，抛出该错误。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Thrown when a syntactically malformed signature attribute is encountered by a reflective method that needs to interpret the generic signature information for a type, method or constructor.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T092234Z" creationid="pingfangx" creationdate="20191012T092234Z">
        <seg>当需要解释类型、方法或构造方法的一般签名信息的反射方法遇到语法错误的签名属性时，抛出该错误。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Thrown when a thread is waiting, sleeping, or otherwise occupied, and the thread is interrupted, either before or during the activity.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T073032Z" creationid="pingfangx" creationdate="20191012T073032Z">
        <seg>当线程在活动之前或活动期间处于正在等待、休眠或占用状态且该线程被中断时，抛出该异常。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Thrown when an application attempts to use &lt;c0&gt;null&lt;/c0&gt; in a case where an object is required.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T073043Z" creationid="pingfangx" creationdate="20191012T073043Z">
        <seg>当应用程序试图在需要对象的地方使用 &lt;c0&gt;null&lt;/c0&gt; 时，抛出该异常。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Thrown when an application tries to access a type using a string representing the type's name, but no definition for the type with the specified name can be found.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T073130Z" creationid="pingfangx" creationdate="20191012T073130Z">
        <seg>当应用程序试图使用表示类型名称的字符串对类型进行访问，但无法找到带有指定名称的类型定义时，抛出该异常。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Thrown when an application tries to access an enum constant by name and the enum type contains no constant with the specified name.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T072945Z" creationid="pingfangx" creationdate="20191012T072945Z">
        <seg>当应用程序试图通过名称和枚举类型访问那些不包含具有指定名称的常量的枚举常量时，抛出该异常。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Thrown when an application tries to call an abstract method.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T073136Z" creationid="pingfangx" creationdate="20191012T073136Z">
        <seg>当应用程序试图调用一个抽象方法时，抛出此错误。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Thrown when an application tries to create an instance of a class using the &lt;c0&gt;newInstance&lt;/c0&gt; method in class &lt;c1&gt;Class&lt;/c1&gt;, but the specified class object cannot be instantiated.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T073029Z" creationid="pingfangx" creationdate="20191012T073029Z">
        <seg>当应用程序试图使用 &lt;c0&gt;Class&lt;/c0&gt; 类中的 &lt;c1&gt;newInstance&lt;/c1&gt; 方法创建一个类的实例，而指定的类对象无法被实例化时，抛出该异常。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Thrown when an application tries to load in a class through its string name using:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T072935Z" creationid="pingfangx" creationdate="20191012T072935Z">
        <seg>当应用程序试图使用以下方法通过字符串名加载类时，抛出该异常：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Thrown when an application tries to use the Java &lt;c0&gt;new&lt;/c0&gt; construct to instantiate an abstract class or an interface.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T073540Z" creationid="pingfangx" creationdate="20191012T073222Z">
        <seg>当应用程序试图使用 Java 的 &lt;c0&gt;new&lt;/c0&gt; 结构来实例化一个抽象类或一个接口时，抛出该错误。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Thrown when an exceptional arithmetic condition has occurred.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T072002Z" creationid="pingfangx" creationdate="20191012T072002Z">
        <seg>当出现异常的运算条件时，抛出此异常。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Thrown when an incompatible class change has occurred to some class definition.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T073536Z" creationid="pingfangx" creationdate="20191012T073220Z">
        <seg>在某些类定义中出现不兼容的类更改时抛出该错误。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Thrown when an instance is required to have a Serializable interface.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T065519Z" creationid="pingfangx" creationdate="20191011T065519Z">
        <seg>当实例需要具有序列化接口时，抛出此异常。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Thrown when an unknown but serious exception has occurred in the Java Virtual Machine.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T073425Z" creationid="pingfangx" creationdate="20191012T073425Z">
        <seg>当 Java 虚拟机中出现一个未知但严重的异常时，抛出该错误。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Thrown when control information that was read from an object stream violates internal consistency checks.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T065525Z" creationid="pingfangx" creationdate="20191011T065525Z">
        <seg>当从对象流中读取的控制信息与内部一致性检查相冲突时，抛出此异常。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Thrown when serialization or deserialization is not active.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T065516Z" creationid="pingfangx" creationdate="20191011T065516Z">
        <seg>当序列化和反序列化不活动时，抛出此异常。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Thrown when the "verifier" detects that a class file, though well formed, contains some sort of internal inconsistency or security problem.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T073449Z" creationid="pingfangx" creationdate="20191012T073449Z">
        <seg>当“校验器”检测到一个类文件虽然格式正确，但包含着一些内部不一致性或安全性问题时，抛出该错误。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Thrown when the Java Virtual Machine attempts to read a class file and determines that the file is malformed or otherwise cannot be interpreted as a class file.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T073210Z" creationid="pingfangx" creationdate="20191012T073210Z">
        <seg>当 Java 虚拟机试图读取类文件并确定该文件存在格式错误或无法解释为类文件时，抛出该错误。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Thrown when the Java Virtual Machine attempts to read a class file and determines that the major and minor version numbers in the file are not supported.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T073438Z" creationid="pingfangx" creationdate="20191012T073438Z">
        <seg>当 Java 虚拟机试图读取一个类文件，并确定文件的主辅版本号不受支持时，抛出该错误。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Thrown when the Java Virtual Machine cannot allocate an object because it is out of memory, and no more memory could be made available by the garbage collector.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T073551Z" creationid="pingfangx" creationdate="20191012T073237Z">
        <seg>因为内存溢出或没有可用的内存提供给垃圾回收器时，Java 虚拟机无法分配一个对象，这时抛出该错误。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Thrown when the Java Virtual Machine detects a circularity in the superclass hierarchy of a class being loaded.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T073207Z" creationid="pingfangx" creationdate="20191012T073207Z">
        <seg>当 Java 虚拟机检测类的超类层次的循环加载抛出。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Thrown when the Serialization runtime detects one of the following problems with a Class.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T065503Z" creationid="pingfangx" creationdate="20191011T065503Z">
        <seg>当 Serialization 运行时检测到某个类具有以下问题之一时，抛出此异常。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Thrown when the annotation parser attempts to read an annotation from a class file and determines that the annotation is malformed.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T082807Z" creationid="pingfangx" creationdate="20191012T082807Z">
        <seg>当注释解析器试图从类文件读取注释并确定注释出现异常时，抛出该错误。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Type is the common superinterface for all types in the Java programming language.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T091529Z" creationid="pingfangx" creationdate="20191012T091529Z">
        <seg>Type 是 Java 编程语言中所有类型的公共高级接口。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>TypeVariable is the common superinterface for type variables of kinds.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T091534Z" creationid="pingfangx" creationdate="20191012T091534Z">
        <seg>TypeVariable 是各种类型变量的公共高级接口。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Typesafe enumeration for byte orders</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T084052Z" creationid="pingfangx" creationdate="20191011T084052Z">
        <seg>字节顺序的类型安全的枚举</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Unchecked exception thrown when a character with an invalid Unicode code point as defined by &lt;c0&gt;&lt;a1&gt;isValidCodePoint(int)&lt;/a1&gt;&lt;/c0&gt; is passed to the &lt;c2&gt;&lt;a3&gt;Formatter&lt;/a3&gt;&lt;/c2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T050503Z" creationid="pingfangx" creationdate="20191012T050503Z">
        <seg>将具有 &lt;c0&gt;&lt;a1&gt;isValidCodePoint(int)&lt;/a1&gt;&lt;/c0&gt; 所定义的无效 Unicode 代码点的字符传递给 &lt;c2&gt;&lt;a3&gt;Formatter&lt;/a3&gt;&lt;/c2&gt; 时，抛出未经检查的异常。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Unchecked exception thrown when a content-mutation method such as &lt;t0&gt;put&lt;/t0&gt; or &lt;t1&gt;compact&lt;/t1&gt; is invoked upon a read-only buffer.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T114407Z" creationid="pingfangx" creationdate="20191011T114407Z">
        <seg>当在只读缓冲区上调用内容可变（content-mutation）的方法（例如 &lt;t0&gt;put&lt;/t0&gt; 或 &lt;t1&gt;compact&lt;/t1&gt; 方法）时，抛出此未经检查的异常。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Unchecked exception thrown when a conversion and flag are incompatible.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T050348Z" creationid="pingfangx" creationdate="20191012T050348Z">
        <seg>转换与标志不兼容时抛出未经检查的异常。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Unchecked exception thrown when a format string contains an illegal syntax or a format specifier that is incompatible with the given arguments.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T050412Z" creationid="pingfangx" creationdate="20191012T050412Z">
        <seg>当格式字符串包含非法语法，或者包含与给定参数不兼容的格式说明符时，将抛出未经检查的异常。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Unchecked exception thrown when a relative &lt;i0&gt;get&lt;/i0&gt; operation reaches the source buffer's limit.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T114355Z" creationid="pingfangx" creationdate="20191011T114355Z">
        <seg>当相关 &lt;i0&gt;get&lt;/i0&gt; 操作达到源缓冲区限制时，抛出此未经检查的异常。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Unchecked exception thrown when a relative &lt;i0&gt;put&lt;/i0&gt; operation reaches the target buffer's limit.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T114354Z" creationid="pingfangx" creationdate="20191011T114354Z">
        <seg>当相关 &lt;i0&gt;put&lt;/i0&gt; 操作达到目标缓冲区限制时，抛出此未经检查的异常。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Unchecked exception thrown when an attempt is made to reset a buffer when its mark is not defined.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T114357Z" creationid="pingfangx" creationdate="20191011T114357Z">
        <seg>当试图重置一个尚未定义其标记的缓冲区时，抛出此未检查的异常。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Unchecked exception thrown when an illegal combination flags is given.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T050417Z" creationid="pingfangx" creationdate="20191012T050417Z">
        <seg>当给出非法组合标志时，抛出未经检查的异常。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Unchecked exception thrown when an unknown conversion is given.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T050558Z" creationid="pingfangx" creationdate="20191012T050558Z">
        <seg>给定未知的转换时所抛出的未经检查的异常。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Unchecked exception thrown when an unknown flag is given.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T050559Z" creationid="pingfangx" creationdate="20191012T050559Z">
        <seg>给定未知标志时所抛出的未经检查的异常。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Unchecked exception thrown when duplicate flags are provided in the format specifier.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T050343Z" creationid="pingfangx" creationdate="20191012T050343Z">
        <seg>格式说明符中提供重复标志时抛出的未经检查的异常。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Unchecked exception thrown when the argument corresponding to the format specifier is of an incompatible type.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T050408Z" creationid="pingfangx" creationdate="20191012T050408Z">
        <seg>当对应于格式说明符的参数为不兼容的类型时，抛出未经检查的异常。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Unchecked exception thrown when the format width is a negative value other than &lt;t0&gt;-1&lt;/t0&gt; or is otherwise unsupported.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T050425Z" creationid="pingfangx" creationdate="20191012T050425Z">
        <seg>当格式宽度为除 &lt;t0&gt;-1&lt;/t0&gt; 以外的负值或其他不受支持的值时，将抛出未经检查的异常。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Unchecked exception thrown when the format width is required.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T050433Z" creationid="pingfangx" creationdate="20191012T050433Z">
        <seg>请求格式宽度时抛出未经检查的异常。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Unchecked exception thrown when the formatter has been closed.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T050350Z" creationid="pingfangx" creationdate="20191012T050350Z">
        <seg>格式器已关闭时抛出的未经检查的异常。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Unchecked exception thrown when the precision is a negative value other than &lt;t0&gt;-1&lt;/t0&gt;, the conversion does not support a precision, or the value is otherwise unsupported.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T050424Z" creationid="pingfangx" creationdate="20191012T050424Z">
        <seg>当精度为除 &lt;t0&gt;-1&lt;/t0&gt; 以外的负值、转换类型不支持某个精度或者值在其他方面不受支持时，将抛出未经检查的异常。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Unchecked exception thrown when there is a format specifier which does not have a corresponding argument or if an argument index refers to an argument that does not exist.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T050432Z" creationid="pingfangx" creationdate="20191012T050432Z">
        <seg>如果格式说明符没有相应的参数，或者参数索引引用了不存在的参数时，则抛出未经检查的异常。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Unless otherwise noted, passing a &lt;t0&gt;null&lt;/t0&gt; argument to a constructor or method in any class or interface in this package will cause a &lt;c1&gt;&lt;a2&gt;NullPointerException&lt;/a2&gt;&lt;/c1&gt; to be thrown.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T112215Z" creationid="pingfangx" creationdate="20191011T112215Z">
        <seg>除非另有说明，向此包的任何类或接口中的构造方法或方法传递 &lt;t0&gt;null&lt;/t0&gt; 变量，将会抛出 &lt;c1&gt;&lt;a2&gt;NullPointerException&lt;/a2&gt;&lt;/c1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Unless otherwise noted, passing a null argument to a constructor or method in any class or interface in this package will cause a &lt;t0&gt;NullPointerException&lt;/t0&gt; to be thrown.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191010T085301Z" creationid="pingfangx" creationdate="20191010T085301Z">
        <seg>除非另有说明，否则向此包的任何类或接口中的构造方法或方法传递 null 参数时，都将抛出 &lt;t0&gt;NullPointerException&lt;/t0&gt; 。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Utility class for HTML form decoding.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T083410Z" creationid="pingfangx" creationdate="20191011T083410Z">
        <seg>HTML 格式解码的实用工具类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Utility class for HTML form encoding.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T083412Z" creationid="pingfangx" creationdate="20191011T083412Z">
        <seg>HTML 格式编码的实用工具类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Weak reference objects, which do not prevent their referents from being made finalizable, finalized, and then reclaimed.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T090716Z" creationid="pingfangx" creationdate="20191012T090716Z">
        <seg>弱引用对象，它们并不禁止其指示对象变得可终结，并被终结，然后被回收。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When the weak references to a weakly-reachable object are cleared, the object becomes eligible for finalization.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T090659Z" creationid="pingfangx" creationdate="20191012T090659Z">
        <seg>当清除对某一弱可到达对象的弱引用时，便可以终止此对象了。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>While methods like &lt;c0&gt;&lt;a1&gt;getByName(String)&lt;/a1&gt;&lt;/c0&gt; are guaranteed not to return an Inet6Address when looking up host names, it is possible, by passing literals, to create such an object.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T080452Z" creationid="pingfangx" creationdate="20191011T080452Z">
        <seg>虽然可以保证在查找主机名时 &lt;c0&gt;&lt;a1&gt;getByName(String)&lt;/a1&gt;&lt;/c0&gt; 之类的方法不返回 Inet6Address，但仍然可能通过传递字面值来创建此类对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>While some programs will choose to dedicate a thread to removing reference objects from one or more queues and processing them, this is by no means necessary.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T090243Z" creationid="pingfangx" creationdate="20191012T090243Z">
        <seg>虽然某些程序会选择专门使用一个线程从一个或多个队列中移除引用对象并处理它们，但这是绝对没有必要的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>WildcardType represents a wildcard type expression, such as &lt;c0&gt;?&lt;/c0&gt;, &lt;c1&gt;? extends Number&lt;/c1&gt;, or &lt;c2&gt;? super Integer&lt;/c2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191012T092047Z" creationid="pingfangx" creationdate="20191012T092047Z">
        <seg>WildcardType 表示一个通配符类型表达式，如 &lt;c0&gt;?&lt;/c0&gt; 、 &lt;c1&gt;? extends Number&lt;/c1&gt; 或 &lt;c2&gt;? super Integer&lt;/c2&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Wraps an &lt;c0&gt;&lt;a1&gt;IOException&lt;/a1&gt;&lt;/c0&gt; with an unchecked exception.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T065554Z" creationid="pingfangx" creationdate="20191011T065554Z">
        <seg>用非检查型异常包装 &lt;c0&gt;&lt;a1&gt;IOException&lt;/a1&gt;&lt;/c0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Writes text to a character-output stream, buffering characters so as to provide for the efficient writing of single characters, arrays, and strings.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191010T094635Z" creationid="pingfangx" creationdate="20191010T094635Z">
        <seg>将文本写入字符输出流，缓冲各个字符，从而提供单个字符、数组和字符串的高效写入。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>clear, flip, rewind, and mark/reset</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T102729Z" creationid="pingfangx" creationdate="20191011T102729Z">
        <seg>清除，反转，重绕和标记/重置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tiếng Việt</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T114417Z" creationid="pingfangx" creationdate="20191011T114417Z">
        <seg>tiếng Việt</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>to entities capable of performing I/O operations; and</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T101842Z" creationid="pingfangx" creationdate="20191011T101609Z">
        <seg>它们表示到能够执行 IO 操作；</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>which translate between bytes and Unicode characters;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T083733Z" creationid="pingfangx" creationdate="20191011T083733Z">
        <seg>它们在字节和 Unicode 字符之间进行转换；</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Русский</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T114417Z" creationid="pingfangx" creationdate="20191011T114417Z">
        <seg>Русский</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>中文（简体)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T114418Z" creationid="pingfangx" creationdate="20191011T114418Z">
        <seg>中文（简体)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>中文（繁體)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T114419Z" creationid="pingfangx" creationdate="20191011T114419Z">
        <seg>中文（繁體)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>日本語</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T114415Z" creationid="pingfangx" creationdate="20191011T114415Z">
        <seg>日本語</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>한국어</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191011T114416Z" creationid="pingfangx" creationdate="20191011T114416Z">
        <seg>한국어</seg>
      </tuv>
    </tu>
<!-- Alternative translations -->
  </body>
</tmx>
