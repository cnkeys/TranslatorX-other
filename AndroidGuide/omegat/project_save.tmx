<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE tmx SYSTEM "tmx11.dtd">
<tmx version="1.1">
  <header creationtool="OmegaT" o-tmf="OmegaT TMX" adminlang="EN-US" datatype="plaintext" creationtoolversion="5.0.0_0_dev" segtype="sentence" srclang="EN-US"/>
  <body>
<!-- Default translations -->
    <tu>
      <tuv lang="EN-US">
        <seg>"true" if you want to perform the animation once; "false" to loop the animation.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T072857Z" creationid="pingfangx" creationdate="20191117T072857Z">
        <seg>如果要执行一次动画，“true”；如果要循环动画，“false”。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>"true" if you want to share the same interpolator among all child elements.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T070952Z" creationid="pingfangx" creationdate="20191117T070952Z">
        <seg>如果要在所有子元素之间共享同一个插值器，请选择“true”。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>(The ID &lt;c3&gt;android:id&lt;/c3&gt; specified for the &lt;c4&gt;&lt;a5&gt;ViewStub&lt;/a5&gt;&lt;/c4&gt; is valid only until the &lt;c6&gt;&lt;a7&gt;ViewStub&lt;/a7&gt;&lt;/c6&gt; layout is visible/inflated.)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T100148Z" creationid="pingfangx" creationdate="20191103T100148Z">
        <seg>(为 &lt;c4&gt;&lt;a5&gt;ViewStub&lt;/a5&gt;&lt;/c4&gt; 指定的 ID&lt;c3&gt;android:id&lt;/c3&gt; 仅在 &lt;c6&gt;&lt;a7&gt;ViewStub&lt;/a7&gt;&lt;/c6&gt; 布局可见/加载之前有效。)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>(To learn more about defining an animation in your application code, instead of XML, refer to the &lt;c0&gt;&lt;a1&gt;AnimationSet&lt;/a1&gt;&lt;/c0&gt; class and other &lt;c2&gt;&lt;a3&gt;Animation&lt;/a3&gt;&lt;/c2&gt; subclasses.)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T075032Z" creationid="pingfangx" creationdate="20191117T075032Z">
        <seg>(要了解有关在应用程序代码中而不是 XML 中定义动画的更多信息，请参阅 &lt;c0&gt;&lt;a1&gt;AnimationSet&lt;/a1&gt;&lt;/c0&gt; 类和其他 &lt;c2&gt;&lt;a3&gt;animation&lt;/a3&gt;&lt;/c2&gt; 子类。)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>300 milliseconds is the default.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T063423Z" creationid="pingfangx" creationdate="20191117T063423Z">
        <seg>默认为 300 毫秒。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>300ms is the default.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T063839Z" creationid="pingfangx" creationdate="20191117T063839Z">
        <seg>默认为 300 毫秒。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;/s0&gt;A horizontal constraint to the parent</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T072535Z" creationid="pingfangx" creationdate="20191103T072535Z">
        <seg>&lt;/s0&gt;相对于父布局的水平约束</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;/s0&gt;The left side of a view is constrained to the left side of the parent</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T071824Z" creationid="pingfangx" creationdate="20191103T071824Z">
        <seg>&lt;/s0&gt;一个 view 的左边限制为 parent 的左边。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;a0&gt;&lt;c1&gt;ConstraintLayout&lt;/c1&gt;&lt;/a0&gt; allows you to create large and complex layouts with a flat view hierarchy (no nested view groups).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T071113Z" creationid="pingfangx" creationdate="20191103T071113Z">
        <seg>翻译于：20170505
平方X
参考：
[1]_SOLID.[译文]使用 ConstraintLayout 构建一个响应式的 UI.http://www.jianshu.com/p/f61227a2775f
[2].weiyf.【双语】使用 ConstraintLayout 构建响应式 UI(Build a Responsive UI with ConstraintLayout).https://weiyf.cn/2017/03/10/Build%20a%20Responsive%20UI%20with%20ConstraintLayout/
&lt;a0&gt;&lt;c1&gt;ConstraintLayout&lt;/c1&gt;&lt;/a0&gt; 允许你使用平面 view 层次结构创建大而复杂的布局(没有嵌套 view groups)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;a0&gt;&lt;c1&gt;MotionLayout&lt;/c1&gt;&lt;/a0&gt; is a layout type that helps you manage motion and widget animation in your app.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T080210Z" creationid="pingfangx" creationdate="20191103T080210Z">
        <seg>&lt;a0&gt;&lt;c1&gt;MotionLayout&lt;/c1&gt;&lt;/a0&gt; 是一种布局类型，可以帮助你在你的应用程序管理运动和 widget 动画。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;a0&gt;Content Providers&lt;/a0&gt; that enable apps to access data from other apps, such as the Contacts app, or to share their own data</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T045815Z" creationid="pingfangx" creationdate="20191030T045815Z">
        <seg>&lt;a0&gt;Content Providers&lt;/a0&gt; 允许应用程序从其他应用程序(如联系人应用程序)访问数据，或共享自己的数据</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;a0&gt;Frame animation&lt;/a0&gt;:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T061441Z" creationid="pingfangx" creationdate="20191117T061441Z">
        <seg>&lt;a0&gt;帧动画&lt;/a0&gt;:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;a0&gt;Hierarchy Viewer&lt;/a0&gt; shows a list of available devices and their running components.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T092235Z" creationid="pingfangx" creationdate="20191103T092235Z">
        <seg>&lt;a0&gt;Hierarchy Viewer&lt;/a0&gt; 显示可用设备及其运行组件的列表。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;a0&gt;Tween animation&lt;/a0&gt;:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T061356Z" creationid="pingfangx" creationdate="20191117T061356Z">
        <seg>&lt;a0&gt;补间动画&lt;/a0&gt;:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Figure 3.&lt;/b0&gt; The menu to convert a layout to &lt;c1&gt;ConstraintLayout&lt;/c1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T071717Z" creationid="pingfangx" creationdate="20191103T071717Z">
        <seg>&lt;b0&gt;Figure 3.&lt;/b0&gt; 将一个布局转换为 &lt;c1&gt;ConstraintLayout&lt;/c1&gt; 的菜单</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;&lt;ConstraintSet&gt;&lt;/c0&gt; is where you define the various constraints that describe your motion.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T080959Z" creationid="pingfangx" creationdate="20191103T080959Z">
        <seg>&lt;c0&gt;&lt;ConstraintSet&gt;&lt;/c0&gt; 是定义描述运动的各种约束的地方。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;&lt;OnSwipe&gt;&lt;/c0&gt; lets you control the motion via touch.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T080930Z" creationid="pingfangx" creationdate="20191103T080930Z">
        <seg>&lt;c0&gt;&lt;OnSwipe&gt;&lt;/c0&gt; 允许你通过触摸控制运动。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;&lt;Transition&gt;&lt;/c0&gt; contains the base definition of the motion.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T080906Z" creationid="pingfangx" creationdate="20191103T080906Z">
        <seg>&lt;c0&gt;&lt;Transition&gt;&lt;/c0&gt; 包含运动的基本定义。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;&lt;a1&gt;ValueAnimator&lt;/a1&gt;&lt;/c0&gt; does not carry out the second piece, so you must listen for updates to values calculated by the &lt;c2&gt;&lt;a3&gt;ValueAnimator&lt;/a3&gt;&lt;/c2&gt; and modify the objects that you want to animate with your own logic.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T093133Z" creationid="pingfangx" creationdate="20191117T093133Z">
        <seg>&lt;c0&gt;&lt;a1&gt;ValueAnimator&lt;/a1&gt;&lt;/c0&gt; 不执行第二个部分，因此必须侦听由 &lt;c2&gt;&lt;a3&gt;ValueAnimator&lt;/a3&gt;&lt;/c2&gt; 计算的值的更新，并使用自己的逻辑修改要设置动画的对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;&lt;a1&gt;ViewStub&lt;/a1&gt;&lt;/c0&gt; is a lightweight view with no dimension that doesn’t draw anything or participate in the layout.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T095609Z" creationid="pingfangx" creationdate="20191103T095609Z">
        <seg>&lt;c0&gt;&lt;a1&gt;ViewStub&lt;/a1&gt;&lt;/c0&gt; 是一个轻量级视图，它没有尺寸，不会绘制任何内容或参与布局。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;&lt;a1&gt;onMeasure()&lt;/a1&gt;&lt;/c0&gt; has no return value.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T065630Z" creationid="pingfangx" creationdate="20191103T065630Z">
        <seg>&lt;c0&gt;&lt;a1&gt;onMeasure()&lt;/a1&gt;&lt;/c0&gt; 没有返回值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;&lt;a1&gt;onSizeChanged()&lt;/a1&gt;&lt;/c0&gt; is called when your view is first assigned a size, and again if the size of your view changes for any reason.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T065551Z" creationid="pingfangx" creationdate="20191103T065551Z">
        <seg>首次为 view 指定大小时，将调用 &lt;c0&gt;&lt;a1&gt;onSizeChanged()&lt;/a1&gt;&lt;/c0&gt;，如果 view 大小因任何原因发生更改，则会再次调用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;ConstraintLayout&lt;/c0&gt; is used in the &lt;a1&gt;Sunflower&lt;/a1&gt; demo app.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T075720Z" creationid="pingfangx" creationdate="20191103T075720Z">
        <seg>&lt;c0&gt;ConstraintLayout&lt;/c0&gt; 在 &lt;a1&gt;Sunflower&lt;/a1&gt; 演示应用程序被使用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;LinedEditText&lt;/c0&gt; is defined as an inner class within the &lt;c1&gt;NoteEditor&lt;/c1&gt; activity, but it is public so that it could be accessed as &lt;c2&gt;NoteEditor.LinedEditText&lt;/c2&gt; from outside of the &lt;c3&gt;NoteEditor&lt;/c3&gt; class if desired.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064459Z" creationid="pingfangx" creationdate="20191103T064459Z">
        <seg>&lt;c0&gt;LinedEditText&lt;/c0&gt; 被定义为 &lt;c1&gt;NoteEditor&lt;/c1&gt; activity 中的内部类，但它是公共的，因此如果需要，可以使用 &lt;c3&gt;NoteEditor&lt;/c3&gt; 类从外部访问 &lt;c2&gt;NoteEditor.LinedEditText&lt;/c2&gt; 。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;MotionLayout&lt;/c0&gt; bridges the gap between layout transitions and complex motion handling, offering a mix of features between the &lt;a1&gt;property animation framework&lt;/a1&gt;, &lt;a2&gt;&lt;c3&gt;TransitionManager&lt;/c3&gt;&lt;/a2&gt;, and &lt;a4&gt;&lt;c5&gt;CoordinatorLayout&lt;/c5&gt;&lt;/a4&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T080318Z" creationid="pingfangx" creationdate="20191103T080318Z">
        <seg>&lt;c0&gt;MotionLayout&lt;/c0&gt; 弥合了布局转换和复杂运动处理之间的差距，提供了 &lt;a1&gt;property animation framework&lt;/a1&gt;、&lt;a2&gt;&lt;c3&gt;TransitionManager&lt;/c3&gt;&lt;/a2&gt; 和 &lt;a4&gt;&lt;c5&gt;CoordinatorLayout&lt;/c5&gt;&lt;/a4&gt; 之间的混合功能。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;MotionLayout&lt;/c0&gt; is fully declarative, meaning that you can describe any transitions in XML, no matter how complex.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T080447Z" creationid="pingfangx" creationdate="20191103T080447Z">
        <seg>&lt;c0&gt;MotionLayout&lt;/c0&gt; 是完全声明性的，这意味着你可以用 XML 描述任何转换，不管它有多复杂。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;MotionLayout&lt;/c0&gt; is intended to move, resize, and animate UI elements with which users interact, such as buttons and title bars.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T080535Z" creationid="pingfangx" creationdate="20191103T080535Z">
        <seg>&lt;c0&gt;MotionLayout&lt;/c0&gt; 用于移动、调整用户与之交互的 UI 元素(如按钮和标题栏)并设置其动画。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;app:applyMotionScene="boolean"&lt;/c0&gt; indicates whether to apply the MotionScene.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T081531Z" creationid="pingfangx" creationdate="20191103T081531Z">
        <seg>&lt;c0&gt;app:applyMotionScene="boolean"&lt;/c0&gt; 指示是否应用 MotionScene。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;app:currentState="reference"&lt;/c0&gt; lets you specify a specific &lt;c1&gt;ConstraintSet&lt;/c1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T081619Z" creationid="pingfangx" creationdate="20191103T081619Z">
        <seg>&lt;c0&gt;app:currentState="reference"&lt;/c0&gt; 允许你指定特定的 &lt;c1&gt;ConstraintSet&lt;/c1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;app:motionDebug&lt;/c0&gt; lets you display additional debug information about the motion.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T081626Z" creationid="pingfangx" creationdate="20191103T081626Z">
        <seg>&lt;c0&gt;app:motionDebug&lt;/c0&gt; 允许显示有关运动的其他调试信息。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;app:progress="float"&lt;/c0&gt; lets you explicitly specify transition progress.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T081550Z" creationid="pingfangx" creationdate="20191103T081550Z">
        <seg>&lt;c0&gt;app:progress="float"&lt;/c0&gt; 允许你显式指定转换进度。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;app:showPaths="boolean"&lt;/c0&gt; indicates whether to show the motion paths as the motion is running.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T081543Z" creationid="pingfangx" creationdate="20191103T081543Z">
        <seg>&lt;c0&gt;app:showPaths="boolean"&lt;/c0&gt; 指示是否在运动运行时显示运动路径。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;motion:attributeName&lt;/c0&gt; is required and must match an object with getter and setter methods.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T081202Z" creationid="pingfangx" creationdate="20191103T081202Z">
        <seg>&lt;c0&gt;motion:attributeName&lt;/c0&gt; 是必需的，并且必须以获取和设置方法的对象相匹配。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;motion:constraintSetStart&lt;/c0&gt; and &lt;c1&gt;motionconstraintSetEnd&lt;/c1&gt; are references to the endpoints of the motion.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T080912Z" creationid="pingfangx" creationdate="20191103T080912Z">
        <seg>&lt;c0&gt;motion:constraintSetStart&lt;/c0&gt; 和 &lt;c1&gt;motionconstraintSetEnd&lt;/c1&gt; 是对运动端点的引用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;motion:dragDirection&lt;/c0&gt; refers to the &lt;i1&gt;progress&lt;/i1&gt; direction of the drag.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T080947Z" creationid="pingfangx" creationdate="20191103T080947Z">
        <seg>&lt;c0&gt;motion:dragDirection&lt;/c0&gt; 指拖动的 &lt;i1&gt;progress (进度)&lt;/i1&gt; 方向。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;motion:duration&lt;/c0&gt; specifies the number of milliseconds that it takes for the motion to complete.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T080924Z" creationid="pingfangx" creationdate="20191103T080924Z">
        <seg>&lt;c0&gt;motion:duration&lt;/c0&gt; 指定运动完成所需的毫秒数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;motion:touchAnchorId&lt;/c0&gt; refers to the view that you can swipe and drag.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T080935Z" creationid="pingfangx" creationdate="20191103T080935Z">
        <seg>&lt;c0&gt;motion:touchAnchorId&lt;/c0&gt; 指的是可以滑动和拖动的视图。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;motion:touchAnchorSide&lt;/c0&gt; means that we are dragging the view from the right side.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T080941Z" creationid="pingfangx" creationdate="20191103T080941Z">
        <seg>&lt;c0&gt;motion:touchAnchorSide&lt;/c0&gt; 表示我们正在从右侧拖动视图。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;onMeasure()&lt;/c0&gt; is a little more involved.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064032Z" creationid="pingfangx" creationdate="20191103T064032Z">
        <seg>&lt;c0&gt;onMeasure()&lt;/c0&gt; 相关的东西更多一些。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c1&gt;android:repeatCount&lt;/c1&gt; must be set to a positive integer or &lt;c2&gt;"-1"&lt;/c2&gt; for this attribute to have an effect.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T063535Z" creationid="pingfangx" creationdate="20191117T063535Z">
        <seg>&lt;c1&gt;android:repeatCount&lt;/c1&gt; 必须设置为正整数或 &lt;c2&gt;"-1"&lt;/c2&gt;，此属性才能生效。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c1&gt;onMeasure()&lt;/c1&gt; is a critical piece of the rendering contract between your component and its container.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064034Z" creationid="pingfangx" creationdate="20191103T064034Z">
        <seg>&lt;c1&gt;onMeasure()&lt;/c1&gt; 是组件和它的容器之间相关联的渲染的一个关键部分。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c2&gt;&lt;a3&gt;ValueAnimator&lt;/a3&gt;&lt;/c2&gt; changes the rotation over a period of several hundred milliseconds, rather than immediately setting the new rotation value.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T070422Z" creationid="pingfangx" creationdate="20191103T070422Z">
        <seg>&lt;c2&gt;&lt;a3&gt;ValueAnimator&lt;/a3&gt;&lt;/c2&gt; 会在几百毫秒的时间内更改旋转，而不是立即设置新的旋转值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c2&gt;MotionLayout&lt;/c2&gt; also supports keyframes, enabling fully customized transitions to suit your needs.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T080439Z" creationid="pingfangx" creationdate="20191103T080439Z">
        <seg>&lt;c2&gt;MotionLayout&lt;/c2&gt; 还支持关键帧，支持完全自定义的过渡以满足你的需要。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c2&gt;MotionLayout&lt;/c2&gt; is a subclass of &lt;a3&gt;&lt;c4&gt;ConstraintLayout&lt;/c4&gt;&lt;/a3&gt; and builds upon its rich layout capabilities.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T080221Z" creationid="pingfangx" creationdate="20191103T080221Z">
        <seg>&lt;c2&gt;MotionLayout&lt;/c2&gt; 是 &lt;a3&gt;&lt;c4&gt;ConstraintLayout&lt;/c4&gt;&lt;/a3&gt; 子类，并建立在其丰富的布局功能。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c2&gt;MotionLayout&lt;/c2&gt; is a subclass of &lt;c3&gt;ConstraintLayout&lt;/c3&gt;, so you can transform any existing &lt;c4&gt;ConstraintLayout&lt;/c4&gt; into a &lt;c5&gt;MotionLayout&lt;/c5&gt; by replacing the class name in your layout resource file, as shown in the following examples:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T080642Z" creationid="pingfangx" creationdate="20191103T080642Z">
        <seg>&lt;c2&gt;MotionLayout&lt;/c2&gt; 是 &lt;c3&gt;ConstraintLayout&lt;/c3&gt; 一个子类，这样就可以改变任何现有的 &lt;c4&gt;ConstraintLayout&lt;/c4&gt; 成 &lt;c5&gt;MotionLayout&lt;/c5&gt; 通过更换类名在布局资源文件，如下面的例子：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c2&gt;onMeasure()&lt;/c2&gt; should be overridden to efficiently and accurately report the measurements of its contained parts.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064036Z" creationid="pingfangx" creationdate="20191103T064036Z">
        <seg>&lt;c2&gt;onMeasure()&lt;/c2&gt; 应该重写来有效而准确地报告它容纳的部分的测量结果。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c4&gt;&lt;a5&gt;Canvas&lt;/a5&gt;&lt;/c4&gt; has a method to draw a rectangle, while &lt;c6&gt;&lt;a7&gt;Paint&lt;/a7&gt;&lt;/c6&gt; defines whether to fill that rectangle with a color or leave it empty.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T065520Z" creationid="pingfangx" creationdate="20191103T065520Z">
        <seg>&lt;c4&gt;&lt;a5&gt;Canvas&lt;/a5&gt;&lt;/c4&gt; 有一种绘制矩形的方法，而 &lt;c6&gt;&lt;a7&gt;Paint&lt;/a7&gt;&lt;/c6&gt; 定义是否用颜色填充该矩形或将它留空。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c6&gt;&lt;a7&gt;computeScrollOffset()&lt;/a7&gt;&lt;/c6&gt; updates the &lt;c8&gt;&lt;a9&gt;Scroller&lt;/a9&gt;&lt;/c8&gt; object's internal state by reading the current time and using the physics model to calculate the x and y position at that time.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T070222Z" creationid="pingfangx" creationdate="20191103T070222Z">
        <seg>&lt;c6&gt;&lt;a7&gt;computeScrollOffset()&lt;/a7&gt;&lt;/c6&gt; 通过读取当前时间并使用物理模型来计算 &lt;c8&gt;&lt;a9&gt;Scroller&lt;/a9&gt;&lt;/c8&gt; 对象的内部状态那时的 x 和 y 位置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;i0&gt;How&lt;/i0&gt; to draw, handled by &lt;c1&gt;&lt;a2&gt;Paint&lt;/a2&gt;&lt;/c1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T065516Z" creationid="pingfangx" creationdate="20191103T065516Z">
        <seg>&lt;i0&gt;如何&lt;/i0&gt; 绘制，由 &lt;c1&gt;&lt;a2&gt;Paint&lt;/a2&gt;&lt;/c1&gt; 处理。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;i0&gt;What&lt;/i0&gt; to draw, handled by &lt;c1&gt;&lt;a2&gt;Canvas&lt;/a2&gt;&lt;/c1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T065512Z" creationid="pingfangx" creationdate="20191103T065512Z">
        <seg>绘制&lt;i0&gt;什么&lt;/i0&gt;，由 &lt;c1&gt;&lt;a2&gt;Canvas&lt;/a2&gt;&lt;/c1&gt; 处理</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Figure 1.&lt;/s0&gt; The editor shows view C below A, but it has no vertical constraint</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T071234Z" creationid="pingfangx" creationdate="20191103T071234Z">
        <seg>&lt;s0&gt;Figure 1.&lt;/s0&gt; 编辑器显示 A 下面的 view C，但没有垂直约束</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Figure 2.&lt;/s0&gt; View C is now vertically constrained below view A</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T071236Z" creationid="pingfangx" creationdate="20191103T071236Z">
        <seg>&lt;s0&gt;Figure 2.&lt;/s0&gt; view C 现在垂直限制在 view A 下方</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Figure 4.&lt;/s0&gt; The &lt;b1&gt;Layout&lt;/b1&gt; section of the &lt;b2&gt;Attributes&lt;/b2&gt; window lets you create connections.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T072315Z" creationid="pingfangx" creationdate="20191103T072303Z">
        <seg>&lt;s0&gt;Figure 4.&lt;/s0&gt; &lt;b2&gt;Attributes&lt;/b2&gt; 窗口的 &lt;b1&gt;Layout&lt;/b1&gt; 部分允许你创建连接。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Figure 5.&lt;/s0&gt; A red constraint indicates that you can click to delete it.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T072442Z" creationid="pingfangx" creationdate="20191103T072442Z">
        <seg>&lt;s0&gt;Figure 5.&lt;/s0&gt; 红色约束指示可以点击将其删除。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Figure 6.&lt;/s0&gt; Click on a constraint anchor to delete it.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T072454Z" creationid="pingfangx" creationdate="20191103T072454Z">
        <seg>&lt;s0&gt;Figure 6.&lt;/s0&gt; 点击一个约束锚将其删除。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Figure 8.&lt;/s0&gt; A horizontal and vertical constraint</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T072548Z" creationid="pingfangx" creationdate="20191103T072548Z">
        <seg>&lt;s0&gt;Figure 8.&lt;/s0&gt; 水平和垂直约束</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Figure 9.&lt;/s0&gt; A horizontal alignment constraint</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T072608Z" creationid="pingfangx" creationdate="20191103T072608Z">
        <seg>&lt;s0&gt;Figure 9.&lt;/s0&gt; 水平对齐的约束</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Note:&lt;/s0&gt; Although the velocity calculated by &lt;c1&gt;&lt;a2&gt;GestureDetector&lt;/a2&gt;&lt;/c1&gt; is physically accurate, many developers feel that using this value makes the fling animation too fast.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T070209Z" creationid="pingfangx" creationdate="20191103T070209Z">
        <seg>&lt;s0&gt;Note:&lt;/s0&gt; 虽然 &lt;c1&gt;&lt;a2&gt;GestureDetector&lt;/a2&gt;&lt;/c1&gt; 计算的速度在物理上是准确的，但许多开发人员认为使用此值会使投掷动画过快。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Note:&lt;/s0&gt; This does not apply to 3D graphics.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064021Z" creationid="pingfangx" creationdate="20191103T064021Z">
        <seg>&lt;s0&gt;Note:&lt;/s0&gt; 这不适用于 3D 图形。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Note:&lt;/s0&gt; You can use &lt;c1&gt;&lt;a2&gt;ValueAnimator&lt;/a2&gt;&lt;/c1&gt; in applications that target lower API levels.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T070303Z" creationid="pingfangx" creationdate="20191103T070303Z">
        <seg>&lt;s0&gt;Note:&lt;/s0&gt; 你可以在目标较低 API 级别的应用程序中使用 &lt;c1&gt;&lt;a2&gt;ValueAnimator&lt;/a2&gt;&lt;/c1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Note:&lt;/s0&gt;&lt;s1&gt; Although intents are used for both sending broadcasts and starting activities with &lt;c2&gt;&lt;a3&gt;startActivity(Intent)&lt;/a3&gt;&lt;/c2&gt;, these actions are completely unrelated.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T061741Z" creationid="pingfangx" creationdate="20191030T061741Z">
        <seg>&lt;s0&gt;Note:&lt;/s0&gt;&lt;s1&gt; 虽然 intent 可用于发送广播和使用 &lt;c2&gt;&lt;a3&gt;startActivity(Intent)&lt;/a3&gt;&lt;/c2&gt; 启动 activity ，但这些操作完全无关。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Note:&lt;/s0&gt;&lt;s1&gt; Custom permissions are registered when the app is installed.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T062206Z" creationid="pingfangx" creationdate="20191030T062206Z">
        <seg>&lt;s0&gt;Note:&lt;/s0&gt;&lt;s1&gt; 安装应用程序时会注册自定义权限。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Note:&lt;/s0&gt;&lt;s1&gt; If your app targets API level 26 or higher, you cannot use the manifest to declare a receiver for &lt;e2&gt;implicit&lt;/e2&gt; broadcasts (broadcasts that do not target your app specifically), except for a few implicit broadcasts that are &lt;a3&gt;exempted from that restriction&lt;/a3&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T052745Z" creationid="pingfangx" creationdate="20191030T052745Z">
        <seg>&lt;s0&gt;Note:&lt;/s0&gt;&lt;s1&gt; 如果你的应用程序以 API 级别 26 或更高级别为目标，则不能使用清单为 &lt;e2&gt;implicit (隐式)&lt;/e2&gt; 广播(不针对你的应用程序的广播)声明接收器，但有少数被 &lt;a3&gt;免除该限制的&lt;/a3&gt;隐式广播除外。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Note:&lt;/s0&gt;&lt;s1&gt; To register for local broadcasts, call &lt;c2&gt;&lt;a3&gt;LocalBroadcastManager.registerReceiver(BroadcastReceiver, IntentFilter)&lt;/a3&gt;&lt;/c2&gt; instead.&lt;/s1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T053719Z" creationid="pingfangx" creationdate="20191030T053719Z">
        <seg>&lt;s0&gt;Note:&lt;/s0&gt;&lt;s1&gt; 要注册本地广播，请调用 &lt;c2&gt;&lt;a3&gt;LocalBroadcastManager.registerReceiver(BroadcastReceiver, IntentFilter)&lt;/a3&gt;&lt;/c2&gt;&lt;/s1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Tip:&lt;/s0&gt; Extension classes can be defined as inner classes inside the activities that use them.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T063927Z" creationid="pingfangx" creationdate="20191103T063927Z">
        <seg>&lt;s0&gt;Tip:&lt;/s0&gt; 继承类可以在使用它们的 Activity 中定义为内部类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Video 2.&lt;/s0&gt; Adding a constraint that opposes an existing one</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T072508Z" creationid="pingfangx" creationdate="20191103T072508Z">
        <seg>&lt;s0&gt;Video 2.&lt;/s0&gt; 添加一个约束现有的约束</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s1&gt; &lt;c2&gt;MotionLayout&lt;/c2&gt; works only with its direct children.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T080509Z" creationid="pingfangx" creationdate="20191103T080509Z">
        <seg>&lt;s1&gt;&lt;c2&gt;MotionLayout&lt;/c2&gt; 仅适用于其直接子级。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s1&gt; &lt;c2&gt;TransitionManager&lt;/c2&gt; is available in the Support Library for Android 4.0 (API level 14) or higher.&lt;/s1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T075357Z" creationid="pingfangx" creationdate="20191103T075357Z">
        <seg>&lt;s1&gt; &lt;c2&gt;TransitionManager&lt;/c2&gt; 在支持库中 Android 4.0(API级14) 或可用更高。&lt;/s1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s1&gt; ConstraintSet animations animate only the size and position of child elements.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T075547Z" creationid="pingfangx" creationdate="20191103T075547Z">
        <seg>&lt;s1&gt; ConstraintSet 动画仅设置子元素的大小和位置的动画。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s6&gt;Not using these components correctly can result in the system killing the application's process while it is doing important work.&lt;/s6&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191029T074109Z" creationid="pingfangx" creationdate="20191029T074109Z">
        <seg>&lt;s6&gt;不正确使用这些组件可能导致系统在应用程序执行重要工作时终止其进程。&lt;/s6&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A &lt;a0&gt;Notification Manager&lt;/a0&gt; that enables all apps to display custom alerts in the status bar</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T044340Z" creationid="pingfangx" creationdate="20191030T044340Z">
        <seg>&lt;a0&gt;Notification Manager&lt;/a0&gt; 允许所有应用程序在状态栏中显示自定义警报</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A &lt;a0&gt;Resource Manager&lt;/a0&gt;, providing access to non-code resources such as localized strings, graphics, and layout files</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T045757Z" creationid="pingfangx" creationdate="20191030T044245Z">
        <seg>&lt;a0&gt;Resource Manage&lt;/a0&gt;，提供访问非代码资源，如本地化字符串，图形，和布局文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A &lt;a0&gt;vector drawable&lt;/a0&gt; is a type of drawable that is scalable without getting pixelated or blurry.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T113244Z" creationid="pingfangx" creationdate="20191117T113244Z">
        <seg>&lt;a0&gt;vector drawable&lt;/a0&gt; 是一种可缩放的 drawable，无需像素化或模糊化。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A &lt;c0&gt;&lt;CustomAttribute&gt;&lt;/c0&gt; contains two attributes of its own:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T081156Z" creationid="pingfangx" creationdate="20191103T081156Z">
        <seg>&lt;c0&gt;&lt;CustomAttribute&gt;&lt;/c0&gt; 包含自己的两个属性：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A &lt;c0&gt;ConstraintSet&lt;/c0&gt; is a lightweight object that represents the constraints, margins, and padding of all child elements within a &lt;c1&gt;ConstraintLayout&lt;/c1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T075444Z" creationid="pingfangx" creationdate="20191103T075444Z">
        <seg>&lt;c0&gt;ConstraintSet&lt;/c0&gt; 是一个轻量级对象，表示 &lt;c1&gt;ConstraintLayout&lt;/c1&gt; 中所有子元素的约束、外边距和内边距。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A &lt;c2&gt;&lt;a3&gt;RelativeLayout&lt;/a3&gt;&lt;/c2&gt; as the root node allows for such layouts.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T092456Z" creationid="pingfangx" creationdate="20191103T092456Z">
        <seg>&lt;c2&gt;&lt;a3&gt;RelativeLayout&lt;/a3&gt;&lt;/c2&gt; 作为根节点允许这样的布局。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A &lt;s0&gt;background process&lt;/s0&gt; is one holding an &lt;c1&gt;&lt;a2&gt;Activity&lt;/a2&gt;&lt;/c1&gt; that is not currently visible to the user (its &lt;c3&gt;&lt;a4&gt;onStop()&lt;/a4&gt;&lt;/c3&gt; method has been called).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191029T075243Z" creationid="pingfangx" creationdate="20191029T075243Z">
        <seg>&lt;s0&gt;后台进程&lt;/s0&gt; 保持一个 &lt;c1&gt;&lt;a2&gt;Activity&lt;/a2&gt;&lt;/c1&gt; 当前未对用户可见(其 &lt;c3&gt;&lt;a4&gt;onStop()&lt;/a4&gt;&lt;/c3&gt; 方法被调用)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A &lt;s0&gt;cached process&lt;/s0&gt; is one that is not currently needed, so the system is free to kill it as desired when memory is needed elsewhere.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191029T081358Z" creationid="pingfangx" creationdate="20191029T081358Z">
        <seg>&lt;s0&gt;缓存进程&lt;/s0&gt; 是当前不需要的进程，因此当其他地方需要内存时，系统可以根据需要终止它。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A &lt;s0&gt;foreground process&lt;/s0&gt; is one that is required for what the user is currently doing.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191029T074500Z" creationid="pingfangx" creationdate="20191029T074500Z">
        <seg>&lt;s0&gt;前台进程&lt;/s0&gt; 是用户当前所做工作所必需的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A &lt;s0&gt;service process&lt;/s0&gt; is one holding a &lt;c1&gt;&lt;a2&gt;Service&lt;/a2&gt;&lt;/c1&gt; that has been started with the &lt;c3&gt;&lt;a4&gt;startService()&lt;/a4&gt;&lt;/c3&gt; method.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191029T075122Z" creationid="pingfangx" creationdate="20191029T075122Z">
        <seg>&lt;s0&gt;服务进程&lt;/s0&gt; 保持一个 &lt;c1&gt;&lt;a2&gt;Service&lt;/a2&gt;&lt;/c1&gt; 期已经由 &lt;c3&gt;&lt;a4&gt;startService()&lt;/a4&gt;&lt;/c3&gt; 方法启动。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A &lt;s0&gt;visible process&lt;/s0&gt; is doing work that the user is currently aware of, so killing it would have a noticeable negative impact on the user experience.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191029T080913Z" creationid="pingfangx" creationdate="20191029T080913Z">
        <seg>&lt;s0&gt;可见进程&lt;/s0&gt; 正在做用户当前意识到的工作，因此终止它将对用户体验产生明显的负面影响。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A &lt;s0&gt;visible process&lt;/s0&gt; is one holding an &lt;c1&gt;&lt;a2&gt;Activity&lt;/a2&gt;&lt;/c1&gt; that is visible to the user on-screen but not in the foreground (its &lt;c3&gt;&lt;a4&gt;onPause()&lt;/a4&gt;&lt;/c3&gt; method has been called).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191029T074927Z" creationid="pingfangx" creationdate="20191029T074927Z">
        <seg>&lt;s0&gt;可见进程&lt;/s0&gt; 是一个保持一个 &lt;c1&gt;&lt;a2&gt;Activity&lt;/a2&gt;&lt;/c1&gt; 是用户在屏幕上但不是在前台(可见其 &lt;c3&gt;&lt;a4&gt;onPause()&lt;/a4&gt;&lt;/c3&gt; 方法被调用)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A MotionScene is an XML resource file that contains all of the motion descriptions for the corresponding layout.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T080803Z" creationid="pingfangx" creationdate="20191103T080803Z">
        <seg>MotionScene 是一个 XML 资源文件，包含对应布局的所有运动描述。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A baseline alignment constraint</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T073212Z" creationid="pingfangx" creationdate="20191103T073212Z">
        <seg>基线约束限制</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A chain is a group of views that are linked to each other with bi-directional position constraints.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T074744Z" creationid="pingfangx" creationdate="20191103T074744Z">
        <seg>链是用双向位置约束彼此链接的一组 view。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A chain works properly only if each end of the chain is constrained to another object on the same axis, as shown in figure 14.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T075052Z" creationid="pingfangx" creationdate="20191103T075052Z">
        <seg>只有链的每一端都被约束到同一轴上的另一个对象，链才能正常工作，如图 14 所示。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A common example of a process life-cycle bug is a &lt;c0&gt;&lt;a1&gt;BroadcastReceiver&lt;/a1&gt;&lt;/c0&gt; that starts a thread when it receives an Intent in its &lt;c2&gt;&lt;a3&gt;BroadcastReceiver.onReceive()&lt;/a3&gt;&lt;/c2&gt; method, and then returns from the function.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191029T074218Z" creationid="pingfangx" creationdate="20191029T074218Z">
        <seg>进程生命周期错误的一个常见示例是 &lt;c0&gt;&lt;a1&gt;BroadcastReceiver&lt;/a1&gt;&lt;/c0&gt; 当它在其 &lt;c2&gt;&lt;a3&gt;BroadcastReceiver.onReceive()&lt;/a3&gt;&lt;/c2&gt; 方法方法中接收到 Intent 时启动线程，然后从函数返回。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A container that holds other animation elements (&lt;c0&gt;&lt;alpha&gt;&lt;/c0&gt;, &lt;c1&gt;&lt;scale&gt;&lt;/c1&gt;, &lt;c2&gt;&lt;translate&gt;&lt;/c2&gt;, &lt;c3&gt;&lt;rotate&gt;&lt;/c3&gt;) or other &lt;c4&gt;&lt;set&gt;&lt;/c4&gt; elements.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T070015Z" creationid="pingfangx" creationdate="20191117T070015Z">
        <seg>保存其它动画元素(&lt;c0&gt;&lt;alpha&gt;&lt;/c0&gt;，&lt;c1&gt;&lt;scale&gt;&lt;/c1&gt;，&lt;c2&gt;&lt;translate&gt;&lt;/c2&gt;，&lt;c3&gt;&lt;rotate&gt;&lt;/c3&gt;)或其它 &lt;c4&gt;&lt;set&gt;&lt;/c4&gt; 元素的容器。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A container that holds other animation elements (&lt;c0&gt;&lt;objectAnimator&gt;&lt;/c0&gt;, &lt;c1&gt;&lt;valueAnimator&gt;&lt;/c1&gt;, or other &lt;c2&gt;&lt;set&gt;&lt;/c2&gt; elements).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T062850Z" creationid="pingfangx" creationdate="20191117T062850Z">
        <seg>保存其他动画元素的容器(&lt;c0&gt;&lt;objectAnimator&gt;&lt;/c0&gt;、&lt;c1&gt;&lt;valueAnimator&gt;&lt;/c1&gt; 或其他 &lt;c2&gt;&lt;set&gt;&lt;/c2&gt; 元素)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A fade-in or fade-out animation.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T070956Z" creationid="pingfangx" creationdate="20191117T070956Z">
        <seg>淡入或淡出动画。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A full reference to the kind of restrictions these specifications can require can be found in the reference documentation under &lt;c3&gt;&lt;a4&gt;View.onMeasure(int, int)&lt;/a4&gt;&lt;/c3&gt; (this reference documentation does a pretty good job of explaining the whole measurement operation as well).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064049Z" creationid="pingfangx" creationdate="20191103T064049Z">
        <seg>有关这种规格需要的限制的完整参考，可以在 &lt;c3&gt;&lt;a4&gt;View.onMeasure(int, int)&lt;/a4&gt;&lt;/c3&gt; 的参考文档中找到（这个参考也很好的解释了整个测量的操作）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A good example of this is the &lt;e0&gt;fling&lt;/e0&gt; gesture, where the user quickly moves a finger across the screen and then lifts it.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T070116Z" creationid="pingfangx" creationdate="20191103T070116Z">
        <seg>一个很好的例子是 &lt;e0&gt;fling&lt;/e0&gt; 手势，用户可以快速地在屏幕上移动手指，然后将其抬起。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A good rule to follow is to always expose any property that affects the visible appearance or behavior of your custom view.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T065122Z" creationid="pingfangx" creationdate="20191103T065122Z">
        <seg>要遵循的一个好规则是始终公开任何影响自定义 view 的可见外观或行为的属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A horizontal alignment constraint</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T073041Z" creationid="pingfangx" creationdate="20191103T073041Z">
        <seg>水平对齐的约束</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A horizontal and vertical constraint</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T073038Z" creationid="pingfangx" creationdate="20191103T073038Z">
        <seg>水平和垂直约束</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A horizontal chain with two views</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T074743Z" creationid="pingfangx" creationdate="20191103T074743Z">
        <seg>有两个视图的水平链</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A horizontal constraint to the parent</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T073030Z" creationid="pingfangx" creationdate="20191103T073030Z">
        <seg>相对于父布局的水平约束</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A lot of physics and math are required to get a flywheel model working correctly.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T070121Z" creationid="pingfangx" creationdate="20191103T070121Z">
        <seg>需要大量的物理和数学才能使飞轮模型正常工作。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A more sophisticated component may override even more &lt;c0&gt;on...&lt;/c0&gt; methods and introduce some of its own helper methods, substantially customizing its properties and behavior.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064609Z" creationid="pingfangx" creationdate="20191103T064609Z">
        <seg>一个更复杂的组件可以重写更多的 &lt;c0&gt;on...&lt;/c0&gt; 方法，并引入一些自己的助手方法，充分地自定义自己的属性和行为。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A partial list of available widgets includes &lt;c0&gt;&lt;a1&gt;Button&lt;/a1&gt;&lt;/c0&gt;, &lt;c2&gt;&lt;a3&gt;TextView&lt;/a3&gt;&lt;/c2&gt;, &lt;c4&gt;&lt;a5&gt;EditText&lt;/a5&gt;&lt;/c4&gt;, &lt;c6&gt;&lt;a7&gt;ListView&lt;/a7&gt;&lt;/c6&gt;, &lt;c8&gt;&lt;a9&gt;CheckBox&lt;/a9&gt;&lt;/c8&gt;, &lt;c10&gt;&lt;a11&gt;RadioButton&lt;/a11&gt;&lt;/c10&gt;, &lt;c12&gt;&lt;a13&gt;Gallery&lt;/a13&gt;&lt;/c12&gt;, &lt;c14&gt;&lt;a15&gt;Spinner&lt;/a15&gt;&lt;/c14&gt;, and the more special-purpose &lt;c16&gt;&lt;a17&gt;AutoCompleteTextView&lt;/a17&gt;&lt;/c16&gt;, &lt;c18&gt;&lt;a19&gt;ImageSwitcher&lt;/a19&gt;&lt;/c18&gt;, and &lt;c20&gt;&lt;a21&gt;TextSwitcher&lt;/a21&gt;&lt;/c20&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T063743Z" creationid="pingfangx" creationdate="20191103T063743Z">
        <seg>部分可用的控件列表包括 &lt;c0&gt;&lt;a1&gt;Button&lt;/a1&gt;&lt;/c0&gt;, &lt;c2&gt;&lt;a3&gt;TextView&lt;/a3&gt;&lt;/c2&gt;, &lt;c4&gt;&lt;a5&gt;EditText&lt;/a5&gt;&lt;/c4&gt;, &lt;c6&gt;&lt;a7&gt;ListView&lt;/a7&gt;&lt;/c6&gt;, &lt;c8&gt;&lt;a9&gt;CheckBox&lt;/a9&gt;&lt;/c8&gt;, &lt;c10&gt;&lt;a11&gt;RadioButton&lt;/a11&gt;&lt;/c10&gt;, &lt;c12&gt;&lt;a13&gt;Gallery&lt;/a13&gt;&lt;/c12&gt;, &lt;c14&gt;&lt;a15&gt;Spinner&lt;/a15&gt;&lt;/c14&gt;，以及更多特殊目的的控件如 &lt;c16&gt;&lt;a17&gt;AutoCompleteTextView&lt;/a17&gt;&lt;/c16&gt;, &lt;c18&gt;&lt;a19&gt;ImageSwitcher&lt;/a19&gt;&lt;/c18&gt;,&lt;c20&gt;&lt;a21&gt;TextSwitcher&lt;/a21&gt;&lt;/c20&gt; 等。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A process is considered to be in the foreground if any of the following conditions hold:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191029T074632Z" creationid="pingfangx" creationdate="20191029T074632Z">
        <seg>如果满足以下任一条件，则认为进程处于前台：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A process is considered visible in the following conditions:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191029T080947Z" creationid="pingfangx" creationdate="20191029T080947Z">
        <seg>在下列条件下，进程被视为可见进程：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A process's priority may also be increased based on other dependencies a process has to it.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191029T080352Z" creationid="pingfangx" creationdate="20191029T080352Z">
        <seg>进程的优先级也可以根据进程对它的其他依赖关系而增加。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A property animation changes a property's (a field in an object) value over a specified length of time.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T080012Z" creationid="pingfangx" creationdate="20191117T080012Z">
        <seg>属性动画在指定的时间长度内更改属性(对象中的字段)值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A red constraint indicates that you can click to delete it.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T073012Z" creationid="pingfangx" creationdate="20191103T073012Z">
        <seg>红色约束指示可以点击将其删除。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A resizing animation.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T071629Z" creationid="pingfangx" creationdate="20191117T071204Z">
        <seg>缩放动画。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A rich and extensible &lt;a0&gt;View System&lt;/a0&gt; you can use to build an app’s UI, including lists, grids, text boxes, buttons, and even an embeddable web browser</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T044212Z" creationid="pingfangx" creationdate="20191030T044212Z">
        <seg>一个丰富且可扩展的&lt;a0&gt;View 系统&lt;/a0&gt;，可以用来构建应用程序的 UI，包括列表、网格、文本框、按钮，甚至是一个可嵌入的 web 浏览器。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A rotation animation.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T071624Z" creationid="pingfangx" creationdate="20191117T071624Z">
        <seg>旋转动画。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A sequence of animation instructions defines the tween animation, defined by either XML or Android code.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T074956Z" creationid="pingfangx" creationdate="20191117T074956Z">
        <seg>动画指令序列定义了由 XML 或 Android 代码定义的补间动画。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A single frame of animation.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T072901Z" creationid="pingfangx" creationdate="20191117T072901Z">
        <seg>动画的单个帧。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A subclass of &lt;c0&gt;&lt;a1&gt;ValueAnimator&lt;/a1&gt;&lt;/c0&gt; that allows you to set a target object and object property to animate.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T093217Z" creationid="pingfangx" creationdate="20191117T093217Z">
        <seg>&lt;c0&gt;&lt;a1&gt;ValueAnimator&lt;/a1&gt;&lt;/c0&gt; 的一个子类，允许你设置要设置动画的目标对象和对象属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A subtle animation when a dialog appears and disappears makes the UI change less jarring</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T053607Z" creationid="pingfangx" creationdate="20191117T053607Z">
        <seg>当一个对话框出现或消失时，一个微妙的动画可以使用户界面的变化不那么突兀</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A time interpolator defines how specific values in an animation are calculated as a function of time.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T093849Z" creationid="pingfangx" creationdate="20191117T093849Z">
        <seg>时间插值器定义如何将动画中的特定值计算为时间的函数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A tween animation can perform a series of simple transformations (position, size, rotation, and transparency) on the contents of a View object.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T074852Z" creationid="pingfangx" creationdate="20191117T074852Z">
        <seg>补间动画可以对视图对象的内容执行一系列简单的变换(位置、大小、旋转和透明度)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A vector drawable with the &lt;c0&gt;&lt;vector&gt;&lt;/c0&gt; element in &lt;c1&gt;res/drawable/&lt;/c1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T113443Z" creationid="pingfangx" creationdate="20191117T113443Z">
        <seg>&lt;c1&gt;res/drawable/&lt;/c1&gt; 中使用 &lt;c0&gt;&lt;vector&gt;&lt;/c0&gt; 元素声明的 vector drawable</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A vertical and/or horizontal motion.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T071355Z" creationid="pingfangx" creationdate="20191117T071355Z">
        <seg>垂直和/或水平运动。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A view can be a part of both a horizontal and a vertical chain, making it easy to build flexible grid layouts.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T075022Z" creationid="pingfangx" creationdate="20191103T075022Z">
        <seg>view 可以是水平和垂直链的一部分，使得构建灵活的网格布局变得容易。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A view constrained to a guideline</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T073251Z" creationid="pingfangx" creationdate="20191103T073251Z">
        <seg>view 的参考线约束</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A well-designed custom view is much like any other well-designed class.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064838Z" creationid="pingfangx" creationdate="20191103T064838Z">
        <seg>精心设计的自定义 view 与任何其他精心设计的类非常相似。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>API overview</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T092650Z" creationid="pingfangx" creationdate="20191117T092650Z">
        <seg>API 概览</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ART is written to run multiple virtual machines on low-memory devices by executing DEX files, a bytecode format designed specially for Android that's optimized for minimal memory footprint.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T033906Z" creationid="pingfangx" creationdate="20191030T033906Z">
        <seg>ART 是通过执行 DEX 文件来运行低内存设备上的多个虚拟机的，DEX 文件是专为 Android 设计的字节码格式，它优化了最小的内存占用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>About system broadcasts</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T050627Z" creationid="pingfangx" creationdate="20191030T050627Z">
        <seg>关于系统广播</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Add ConstraintLayout to your project</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T071306Z" creationid="pingfangx" creationdate="20191103T071306Z">
        <seg>添加 ConstraintLayout 到我们的项目中</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Add Properties and Events</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T065054Z" creationid="pingfangx" creationdate="20191103T065054Z">
        <seg>添加属性和事件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Add a &lt;c0&gt;&lt;CustomAttribute&gt;&lt;/c0&gt; element to each &lt;c1&gt;ConstraintSet&lt;/c1&gt; elements, as shown below:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T081453Z" creationid="pingfangx" creationdate="20191103T081453Z">
        <seg>将 &lt;c0&gt;&lt;CustomAttribute&gt;&lt;/c0&gt; 元素添加到每个 &lt;c1&gt;ConstraintSet&lt;/c1&gt; 元素，如下所示：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Add or remove a constraint</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T071805Z" creationid="pingfangx" creationdate="20191103T071805Z">
        <seg>添加或移除约束</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Add the library as a dependency in the same &lt;c0&gt;build.gradle&lt;/c0&gt; file, as shown in the following example.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T071700Z" creationid="pingfangx" creationdate="20191103T071700Z">
        <seg>在相同的 &lt;c0&gt;build.gradle&lt;/c0&gt; 文件中将库添加为依赖，如下面的例子所示。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Adding a constraint that opposes an existing one</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T073024Z" creationid="pingfangx" creationdate="20191103T073024Z">
        <seg>添加一个约束现有的约束</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Additional MotionLayout attributes</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T081458Z" creationid="pingfangx" creationdate="20191103T081458Z">
        <seg>其他 MotionLayout 属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Additional resources</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T081635Z" creationid="pingfangx" creationdate="20191103T081635Z">
        <seg>其他资源</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Adjust the constraint bias</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T073817Z" creationid="pingfangx" creationdate="20191103T073817Z">
        <seg>调整约束偏差</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Adjust the view margins</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T074611Z" creationid="pingfangx" creationdate="20191103T074611Z">
        <seg>调整 view 边距</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Adjust the view size</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T073856Z" creationid="pingfangx" creationdate="20191103T073856Z">
        <seg>调整 view 的大小</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Adjusting the constraint bias</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T073855Z" creationid="pingfangx" creationdate="20191103T073855Z">
        <seg>调整约束偏移</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Admittedly this is a simple case, but that's the point — creating custom components is only as complicated as you need it to be.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064606Z" creationid="pingfangx" creationdate="20191103T064606Z">
        <seg>诚然，这只是一个简单的例子，但关键是——创建自定义 view 你需要有多复杂，就创建成多复杂。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>After &lt;c0&gt;onReceive()&lt;/c0&gt;, the system can kill the process at any time to reclaim memory, and in doing so, it terminates the spawned thread running in the process.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T054939Z" creationid="pingfangx" creationdate="20191030T054939Z">
        <seg>在 &lt;c0&gt;onReceive()&lt;/c0&gt; 之后，系统可以随时终止进程以回收内存，并在这样做时终止进程中运行的派生线程。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Afterwards, you need to update the &lt;c2&gt;&lt;a3&gt;Scroller&lt;/a3&gt;&lt;/c2&gt; by calling &lt;c4&gt;&lt;a5&gt;Scroller.computeScrollOffset()&lt;/a5&gt;&lt;/c4&gt; at regular intervals.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T070219Z" creationid="pingfangx" creationdate="20191103T070219Z">
        <seg>之后，你需要定期调用 &lt;c4&gt;&lt;a5&gt;Scroller.computeScrollOffset()&lt;/a5&gt;&lt;/c4&gt; 来更新 &lt;c2&gt;&lt;a3&gt;Scroller&lt;/a3&gt;&lt;/c2&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Ahead-of-time (AOT) and just-in-time (JIT) compilation</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T034057Z" creationid="pingfangx" creationdate="20191030T034057Z">
        <seg>提前编译(Ahead-of-time (AOT)) 和即时编译(just-in-time (JIT))</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Align the edge of a view to the same edge of another view.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T072552Z" creationid="pingfangx" creationdate="20191103T072552Z">
        <seg>将 view 的边缘与另一个 view 的相同边缘对齐。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Align the text baseline of a view to the text baseline of another view.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T073049Z" creationid="pingfangx" creationdate="20191103T073049Z">
        <seg>将 view 的文本基线与另一个 view 的文本基线对齐。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Alignment</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T072549Z" creationid="pingfangx" creationdate="20191103T072549Z">
        <seg>对齐</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>All interpolators available in Android are subclasses of the &lt;c0&gt;&lt;a1&gt;Interpolator&lt;/a1&gt;&lt;/c0&gt; class.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T072025Z" creationid="pingfangx" creationdate="20191117T072025Z">
        <seg>Android 中可用的所有插值器是 &lt;c0&gt;&lt;a1&gt;Interpolator&lt;/a1&gt;&lt;/c0&gt; 类的子类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>All margins offered by the tool are factors of 8dp to help your views align to Material Design's &lt;a0&gt;8dp square grid recommendations&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T074726Z" creationid="pingfangx" creationdate="20191103T074726Z">
        <seg>该工具提供的所有边距默认是 8dp，以帮助你的 view 符合 Material Design 的 &lt;a0&gt;8dp square grid recommendations&lt;/a0&gt; 建议。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>All of the view classes defined in the Android framework extend &lt;c0&gt;&lt;a1&gt;View&lt;/a1&gt;&lt;/c0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064904Z" creationid="pingfangx" creationdate="20191103T064904Z">
        <seg>Android 框架中定义的所有 view 类都继承了 &lt;c0&gt;&lt;a1&gt;View&lt;/a1&gt;&lt;/c0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>All the power of &lt;c0&gt;ConstraintLayout&lt;/c0&gt; is available directly from the Layout Editor's visual tools, because the layout API and the Layout Editor were specially built for each other.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T071141Z" creationid="pingfangx" creationdate="20191103T071141Z">
        <seg>&lt;c0&gt;ConstraintLayout&lt;/c0&gt; 的所有功能都可以从布局编辑器的可视化工具中直接获得，因为布局 API 和布局编辑器是专为彼此构建的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>All you need to do is specify the starting and ending layout, and what type of animation you want to use.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T055313Z" creationid="pingfangx" creationdate="20191117T055313Z">
        <seg>你只需指定开始和结束布局，以及要使用的动画类型。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Allocate objects during initialization, or between animations.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T070559Z" creationid="pingfangx" creationdate="20191103T070559Z">
        <seg>在初始化期间或动画之间分配对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Also, apps targeting Android 7.0 and higher must register the &lt;c0&gt;&lt;a1&gt;CONNECTIVITY_ACTION&lt;/a1&gt;&lt;/c0&gt; broadcast using &lt;c2&gt;&lt;a3&gt;registerReceiver(BroadcastReceiver, IntentFilter)&lt;/a3&gt;&lt;/c2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T052218Z" creationid="pingfangx" creationdate="20191030T052218Z">
        <seg>此外，针对 Android 7.0 及更高版本的应用程序必须使用 &lt;c2&gt;&lt;a3&gt;registerReceiver(BroadcastReceiver, IntentFilter)&lt;/a3&gt;&lt;/c2&gt; 注册 &lt;c0&gt;&lt;a1&gt;CONNECTIVITY_ACTION&lt;/a1&gt;&lt;/c0&gt; 广播。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Although &lt;c0&gt;&lt;a1&gt;View&lt;/a1&gt;&lt;/c0&gt; has many methods for handling measurement, most of them do not need to be overridden.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T065546Z" creationid="pingfangx" creationdate="20191103T065546Z">
        <seg>虽然 &lt;c0&gt;&lt;a1&gt;View&lt;/a1&gt;&lt;/c0&gt; 有许多处理测量的方法，但大多数方法都不需要重写。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Although Android offers a variety of widgets to provide small and re-usable interactive elements, you might also need to re-use larger components that require a special layout.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T094345Z" creationid="pingfangx" creationdate="20191103T094345Z">
        <seg>尽管 Android 提供了各种小部件来提供小的、可重用的交互元素，但你可能还需要重用需要特殊布局的较大组件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Although a missing constraint won't cause a compilation error, the Layout Editor indicates missing constraints as an error in the toolbar.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T071239Z" creationid="pingfangx" creationdate="20191103T071239Z">
        <seg>尽管缺少了约束也不会造成编译错误，布局编辑器将会在工具栏上显示有一个缺少约束的错误。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Although it's not strictly necessary to follow this convention, many popular code editors depend on this naming convention to provide statement completion.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064958Z" creationid="pingfangx" creationdate="20191103T064958Z">
        <seg>尽管遵循此约定并非绝对必要，但许多流行的代码编辑器依赖于此命名约定来提供语句补全。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Although it's possible to read values from the &lt;c2&gt;&lt;a3&gt;AttributeSet&lt;/a3&gt;&lt;/c2&gt; directly, doing so has some disadvantages:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T065029Z" creationid="pingfangx" creationdate="20191103T065029Z">
        <seg>虽然可以直接从 &lt;c2&gt;&lt;a3&gt;AttributeSet&lt;/a3&gt;&lt;/c2&gt; 中读取值，但这样做有一些缺点：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Although the orientation of a chain is either vertical or horizontal, using one does not align the views in that direction.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T075054Z" creationid="pingfangx" creationdate="20191103T075054Z">
        <seg>虽然链的取向是垂直或水平的，无论使用哪一个一个方向都不会使该方向上的视图对齐。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Among the layouts available are &lt;c0&gt;&lt;a1&gt;LinearLayout&lt;/a1&gt;&lt;/c0&gt;, &lt;c2&gt;&lt;a3&gt;FrameLayout&lt;/a3&gt;&lt;/c2&gt;, &lt;c4&gt;&lt;a5&gt;RelativeLayout&lt;/a5&gt;&lt;/c4&gt;, and others.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T063750Z" creationid="pingfangx" creationdate="20191103T063750Z">
        <seg>可用的布局包括 &lt;c0&gt;&lt;a1&gt;LinearLayout&lt;/a1&gt;&lt;/c0&gt;, &lt;c2&gt;&lt;a3&gt;FrameLayout&lt;/a3&gt;&lt;/c2&gt;, &lt;c4&gt;&lt;a5&gt;RelativeLayout&lt;/a5&gt;&lt;/c4&gt; 及其他。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Among them is extending an EditText View to make a lined notepad.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064438Z" creationid="pingfangx" creationdate="20191103T064438Z">
        <seg>其中包括继承 EditText 视图以制作一个 lined notepad。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An &lt;a0&gt;Activity Manager&lt;/a0&gt; that manages the lifecycle of apps and provides a common &lt;a1&gt;navigation back stack&lt;/a1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T045737Z" creationid="pingfangx" creationdate="20191030T045737Z">
        <seg>&lt;a0&gt;Activity Manager&lt;/a0&gt; 它管理应用程序的生命周期，并提供一个通用的 &lt;a1&gt;导航返回栈&lt;/a1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An &lt;c1&gt;&lt;a2&gt;Interpolator&lt;/a2&gt;&lt;/c1&gt; to apply on the animation.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T070744Z" creationid="pingfangx" creationdate="20191117T070744Z">
        <seg>要应用于动画的 &lt;c1&gt;&lt;a2&gt;Interpolator&lt;/a2&gt;&lt;/c1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An &lt;s0&gt;empty process&lt;/s0&gt; is one that doesn't hold any active application components.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191029T082347Z" creationid="pingfangx" creationdate="20191029T080212Z">
        <seg>&lt;s0&gt;空进程&lt;/s0&gt; 是一个不持有任何活动应用组件的进程。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An animated vector drawable with the &lt;c0&gt;&lt;animated-vector&gt;&lt;/c0&gt; element in &lt;c1&gt;res/drawable/&lt;/c1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T113547Z" creationid="pingfangx" creationdate="20191117T113547Z">
        <seg>&lt;c1&gt;res/drawable/&lt;/c1&gt; 中使用 &lt;c0&gt;&lt;animated-vector&gt;&lt;/c0&gt; 元素声明的 animated vector drawable</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An animation defined in XML that modifies properties of the target object, such as background color or alpha value, over a set amount of time.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T062422Z" creationid="pingfangx" creationdate="20191117T062422Z">
        <seg>用 XML 定义的一种动画，在一定时间内修改目标对象的属性，如背景色或 alpha 值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An animation defined in XML that performs transitions such as rotating, fading, moving, and stretching on a graphic.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T065811Z" creationid="pingfangx" creationdate="20191117T065811Z">
        <seg>XML 中定义的一种动画，在图形上执行诸如旋转、淡入、移动和拉伸等过渡。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An animation defined in XML that shows a sequence of images in order (like a film).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T072723Z" creationid="pingfangx" creationdate="20191117T072723Z">
        <seg>在 XML 中定义的动画，按顺序显示一系列图像(如电影)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An animation resource can define one of two types of animations:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T060936Z" creationid="pingfangx" creationdate="20191117T060936Z">
        <seg>动画资源可以定义两种类型的动画之一：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An animation to show more details can be achieved by either changing the layout or starting a new activity</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T054925Z" creationid="pingfangx" creationdate="20191117T054925Z">
        <seg>可以通过更改布局或启动新 activity 来实现显示更多细节的动画</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An interface that allows you to create your own evaluator.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T093701Z" creationid="pingfangx" creationdate="20191117T093701Z">
        <seg>允许你创建自己的求值器的接口。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An interface that allows you to implement your own interpolator.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T094108Z" creationid="pingfangx" creationdate="20191117T094108Z">
        <seg>一个接口，可以让你实现自己的插值器。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An interpolated fraction maps the elapsed fraction to a new fraction that takes into account the time interpolation that is set.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T091452Z" creationid="pingfangx" creationdate="20191117T091452Z">
        <seg>插值分数将经过的分数映射到一个新分数，该分数考虑了设置的时间插值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An interpolator is an animation modifier defined in XML that affects the rate of change in an animation.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T071921Z" creationid="pingfangx" creationdate="20191117T071921Z">
        <seg>插值器是用 XML 定义的动画修改器，它影响动画中的更改速率。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An interpolator is applied to an animation element with the &lt;c0&gt;android:interpolator&lt;/c0&gt; attribute, the value of which is a reference to an interpolator resource.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T072010Z" creationid="pingfangx" creationdate="20191117T072010Z">
        <seg>插值器通过 &lt;c0&gt;android:interpolator&lt;/c0&gt; 属性应用于动画元素，其值是对插值器资源的引用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An interpolator whose animation repeats for a specified number of cycles.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T094041Z" creationid="pingfangx" creationdate="20191117T094041Z">
        <seg>一种插值器，其动画在指定的周期内重复。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An interpolator whose change bounces at the end.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T094037Z" creationid="pingfangx" creationdate="20191117T094037Z">
        <seg>一种插值器，其变化在末端反弹。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An interpolator whose change flings forward and overshoots the last value then comes back.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T094102Z" creationid="pingfangx" creationdate="20191117T094102Z">
        <seg>一种插值器，其变化向前跳并超过最后一个值，然后返回。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An interpolator whose change starts backward then flings forward.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T094019Z" creationid="pingfangx" creationdate="20191117T094019Z">
        <seg>一种插值器，其变化开始向后，然后向前。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An interpolator whose change starts backward, flings forward and overshoots the target value, then finally goes back to the final value.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T094025Z" creationid="pingfangx" creationdate="20191117T094025Z">
        <seg>一种插值器，其变化从后开始，向前跳并超出目标值，然后最终返回到最终值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An interpolator whose rate of change is constant.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T094059Z" creationid="pingfangx" creationdate="20191117T094059Z">
        <seg>一种插值器，其变化率恒定。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An interpolator whose rate of change starts and ends slowly but accelerates through the middle.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T094009Z" creationid="pingfangx" creationdate="20191117T094009Z">
        <seg>一种插值器，其变化率开始和结束缓慢，但通过中间加速。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An interpolator whose rate of change starts out quickly and then decelerates.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T094044Z" creationid="pingfangx" creationdate="20191117T094044Z">
        <seg>一种插值器，其变化率开始很快，然后减速。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An interpolator whose rate of change starts out slowly and then accelerates.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T094014Z" creationid="pingfangx" creationdate="20191117T094014Z">
        <seg>一种插值器，其变化率开始缓慢，然后加速。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An offset horizontal alignment constraint</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T073048Z" creationid="pingfangx" creationdate="20191103T073048Z">
        <seg>带偏移的水平对齐约束。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An unusual and fundamental feature of Android is that an application process's lifetime is &lt;e0&gt;not&lt;/e0&gt; directly controlled by the application itself.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191029T073714Z" creationid="pingfangx" creationdate="20191029T073714Z">
        <seg>Android 一个不寻常的和基本特征是，一个应用程序过程的生命周期 &lt;e0&gt;不&lt;/e0&gt; 直接由应用程序本身来控制。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>And for sample code, check out &lt;a1&gt;ActivitySceneTransitionBasic&lt;/a1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T060317Z" creationid="pingfangx" creationdate="20191117T060304Z">
        <seg>对于示例代码，请检出 &lt;a1&gt;ActivitySceneTransitionBasic&lt;/a1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>And for sample code, check out &lt;a1&gt;BasicTransition&lt;/a1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T055758Z" creationid="pingfangx" creationdate="20191117T055758Z">
        <seg>对于示例代码，请检出 &lt;a1&gt;BasicTransition&lt;/a1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>And that's all there is to it.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064601Z" creationid="pingfangx" creationdate="20191103T064601Z">
        <seg>这就是所有的内容了。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Android 7.0 (API level 24) and higher don't send the following system broadcasts:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T052149Z" creationid="pingfangx" creationdate="20191030T052149Z">
        <seg>Android 7.0(API 级别 24)及更高版本不发送以下系统广播：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Android Runtime</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T030156Z" creationid="pingfangx" creationdate="20191030T030156Z">
        <seg>Android 运行时</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Android also includes a set of core runtime libraries that provide most of the functionality of the Java programming language, including some &lt;a0&gt;Java 8 language features&lt;/a0&gt;, that the Java API framework uses.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T041207Z" creationid="pingfangx" creationdate="20191030T041207Z">
        <seg>Android 还包括一组核心运行库，它们提供了 Java 编程语言的大部分功能，包括 Java API 框架使用的一些 &lt;a0&gt;Java 8 语言特性&lt;/a0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Android apps can send or receive broadcast messages from the Android system and other Android apps, similar to the &lt;a0&gt;publish-subscribe&lt;/a0&gt; design pattern.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T050436Z" creationid="pingfangx" creationdate="20191030T050436Z">
        <seg>Android 应用可以发送或接收来自 Android 系统和其他 Android 应用程序的广播消息，类似于 &lt;a0&gt;publish-subscribe&lt;/a0&gt; 设计模式。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Android comes with a set of core apps for email, SMS messaging, calendars, internet browsing, contacts, and more.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T045937Z" creationid="pingfangx" creationdate="20191030T045937Z">
        <seg>Android 自带了一套核心应用程序，用于电子邮件、短信、日历、互联网浏览、联系人等。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Android includes different animation APIs depending on what type of animation you want, so this page provides an overview of the different ways you can add motion to your UI.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T053150Z" creationid="pingfangx" creationdate="20191117T053150Z">
        <seg>Android 包含不同的动画 API，这取决于你想要什么类型的动画，所以这个页面提供了你可以向 UI 添加动画的不同方式的概述。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Android includes several Interpolator subclasses that specify various speed curves: for instance, &lt;c2&gt;&lt;a3&gt;AccelerateInterpolator&lt;/a3&gt;&lt;/c2&gt; tells a transformation to start slow and speed up.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T075523Z" creationid="pingfangx" creationdate="20191117T075523Z">
        <seg>Android 包括指定各种速度曲线几个插值器子类：例如，&lt;c2&gt;&lt;a3&gt;AccelerateInterpolator&lt;/a3&gt;&lt;/c2&gt; 讲述了一个变换开始缓慢然后加快。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Android includes the &lt;e0&gt;transitions framework&lt;/e0&gt;, which enables you to easily animate changes between two view hierarchies.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T051933Z" creationid="pingfangx" creationdate="20191117T051933Z">
        <seg>Android 包含 &lt;e0&gt;transitions framework (过渡框架)&lt;/e0&gt;，它使你能够轻松地设置两个视图层次之间的更改的动画。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Android is an open source, Linux-based software stack created for a wide array of devices and form factors.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T033042Z" creationid="pingfangx" creationdate="20191030T033042Z">
        <seg>Android 是一个开源的、基于 Linux 的软件栈，为各种各样的设备和形式因素（form factors）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Android offers a sophisticated and powerful componentized model for building your UI, based on the fundamental layout classes: &lt;c0&gt;&lt;a1&gt;View&lt;/a1&gt;&lt;/c0&gt; and &lt;c2&gt;&lt;a3&gt;ViewGroup&lt;/a3&gt;&lt;/c2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T063723Z" creationid="pingfangx" creationdate="20191103T063723Z">
        <seg>基于基本的布局类： &lt;c0&gt;&lt;a1&gt;View&lt;/a1&gt;&lt;/c0&gt; 和 &lt;c2&gt;&lt;a3&gt;ViewGroup&lt;/a3&gt;&lt;/c2&gt;，安卓提供了一套精致而强大的组件化模型来构建你的 UI。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Android provides a couple options for animating drawables.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T102127Z" creationid="pingfangx" creationdate="20191117T102127Z">
        <seg>Android 提供了两个选项来设置 drawable 的动画。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Android provides three ways for apps to send broadcast:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T060842Z" creationid="pingfangx" creationdate="20191030T060842Z">
        <seg>Android 为应用程序提供了三种发送广播的方式：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Animate UI visibility and motion</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T053529Z" creationid="pingfangx" creationdate="20191117T053529Z">
        <seg>设置 UI 可见性和运动的动画</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Animate between activities</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T055807Z" creationid="pingfangx" creationdate="20191117T055807Z">
        <seg>在 activity 之间设置动画</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Animate bitmaps</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T054815Z" creationid="pingfangx" creationdate="20191117T054815Z">
        <seg>设置位图的动画</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Animate drawable graphics</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T101920Z" creationid="pingfangx" creationdate="20191117T101920Z">
        <seg>为 drawable 图形添加动画</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Animate layout changes</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T054738Z" creationid="pingfangx" creationdate="20191117T054738Z">
        <seg>设置布局更改的动画</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Animated vector drawables can animate the attributes of the &lt;c0&gt;&lt;group&gt;&lt;/c0&gt; and &lt;c1&gt;&lt;path&gt;&lt;/c1&gt; elements.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T113637Z" creationid="pingfangx" creationdate="20191117T113637Z">
        <seg>Animated vector drawable 可以动画化 &lt;c0&gt;&lt;group&gt;&lt;/c0&gt; 和 &lt;c1&gt;&lt;path&gt;&lt;/c1&gt; 元素的属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Animates a specific property of an object over a specific amount of time.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T063013Z" creationid="pingfangx" creationdate="20191117T063013Z">
        <seg>在特定时间内设置对象的特定属性的动画。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Animation built with ObjectAnimator</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T054314Z" creationid="pingfangx" creationdate="20191117T054255Z">
        <seg>用 ObjectAnimator 构建的动画</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Animation built with physics-based APIs</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T054317Z" creationid="pingfangx" creationdate="20191117T054309Z">
        <seg>用基于物理的 API 构建的动画</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Animation resources</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T060930Z" creationid="pingfangx" creationdate="20191117T060930Z">
        <seg>动画资源</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Animations Overview</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T052131Z" creationid="pingfangx" creationdate="20191117T052131Z">
        <seg>动画概览</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Animations also add a polished look to your app, which gives it a higher quality look and feel.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T053116Z" creationid="pingfangx" creationdate="20191117T053116Z">
        <seg>动画还为你的应用程序添加了一个抛光的外观，这给了它一个更高质量的外观和感觉。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Animations and Transitions</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T051713Z" creationid="pingfangx" creationdate="20191117T051713Z">
        <seg>动画和过渡</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Animations can add visual cues that notify users about what's going on in your app.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T052953Z" creationid="pingfangx" creationdate="20191117T052953Z">
        <seg>动画可以添加视觉提示，通知用户你的应用程序中发生着什么。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Animations not based on physics—such as those built with &lt;c0&gt;&lt;a1&gt;ObjectAnimator&lt;/a1&gt;&lt;/c0&gt; APIs—are fairly static and have a fixed duration.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T054501Z" creationid="pingfangx" creationdate="20191117T054501Z">
        <seg>不基于物理的动画，例如那些用 &lt;c0&gt;&lt;a1&gt;ObjectAnimator&lt;/a1&gt;&lt;/c0&gt; API 构建的动画，是相当静态的，并且有固定的持续时间。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Animator sets: You can group animations into logical sets that play together or sequentially or after specified delays.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T080231Z" creationid="pingfangx" creationdate="20191117T080231Z">
        <seg>动画集：可以将动画分组为逻辑集，这些逻辑集可以一起播放，也可以按顺序播放，或者在指定的延迟之后播放。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Animators that update the UI cause extra rendering work for every frame in which the animation runs.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T094201Z" creationid="pingfangx" creationdate="20191117T094201Z">
        <seg>更新 UI 的动画器会为动画运行的每一帧带来额外的渲染工作。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Another benefit of Lint is that it is integrated into Android Studio.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T093341Z" creationid="pingfangx" creationdate="20191103T093341Z">
        <seg>Lint 的另一个好处是它集成到 Android Studio 中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Another disadvantage of the view animation system is that it only modified where the View was drawn, and not the actual View itself.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T091809Z" creationid="pingfangx" creationdate="20191117T091809Z">
        <seg>视图动画系统的另一个缺点是，它只修改了绘制视图的位置，而没有修改实际视图本身。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Another very expensive operation is traversing layouts.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T070608Z" creationid="pingfangx" creationdate="20191103T070608Z">
        <seg>另一个非常昂贵的操作是遍历布局。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Any change you make to the default margin applies only to the views you add from then on.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T074655Z" creationid="pingfangx" creationdate="20191103T074655Z">
        <seg>你对默认边距所做的任何更改仅适用于你之后添加的 view。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Any time a view calls &lt;c0&gt;&lt;a1&gt;requestLayout()&lt;/a1&gt;&lt;/c0&gt;, the Android UI system needs to traverse the entire view hierarchy to find out how big each view needs to be.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T070610Z" creationid="pingfangx" creationdate="20191103T070610Z">
        <seg>每当 view 调用 &lt;c0&gt;&lt;a1&gt;requestLayout()&lt;/a1&gt;&lt;/c0&gt; 时，Android UI 系统都需要遍历整个 view 层次结构，以找出每个 view 需要的大小。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Apply Custom Attributes</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T065025Z" creationid="pingfangx" creationdate="20191103T065025Z">
        <seg>应用自定义属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Apply the retrieved attribute values to your view</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064943Z" creationid="pingfangx" creationdate="20191103T064943Z">
        <seg>将获取到的属性值应用于 view</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Apps can also send custom broadcasts, for example, to notify other apps of something that they might be interested in (for example, some new data has been downloaded).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T050517Z" creationid="pingfangx" creationdate="20191030T050517Z">
        <seg>应用程序还可以发送自定义广播，例如，通知其他应用程序他们可能感兴趣的内容(例如，一些新数据已下载)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Apps can receive broadcasts in two ways: through manifest-declared receivers and context-registered receivers.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T052516Z" creationid="pingfangx" creationdate="20191030T052516Z">
        <seg>应用程序可以通过两种方式接收广播：通过清单声明的 (manifest-declared) 接收器和上下文注册的 (context-registered) 接收器。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Apps can register to receive specific broadcasts.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T050525Z" creationid="pingfangx" creationdate="20191030T050525Z">
        <seg>应用程序可以注册以接收特定广播。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Apps included with the platform have no special status among the apps the user chooses to install.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T045949Z" creationid="pingfangx" creationdate="20191030T045949Z">
        <seg>平台中包含的应用在用户选择安装的应用中没有特殊状态。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As Figure 2 shows, the distance traveled at the beginning and end of the animation is less than in the middle.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T082042Z" creationid="pingfangx" creationdate="20191117T082042Z">
        <seg>如图 2 所示，动画的开始和结束的距离小于中间的距离。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As always, the super is called first.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064508Z" creationid="pingfangx" creationdate="20191103T064508Z">
        <seg>和往常一样，先调用父类方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As an example, the &lt;a0&gt; NotePad application&lt;/a0&gt; demonstrates many aspects of using the Android platform.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064430Z" creationid="pingfangx" creationdate="20191103T064430Z">
        <seg>例如，&lt;a0&gt; NotePad application&lt;/a0&gt; 演示了使用 Android 平台的许多方面。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As an optimization, these values are stored as packed integers, and you use the static methods of &lt;c4&gt;&lt;a5&gt;View.MeasureSpec&lt;/a5&gt;&lt;/c4&gt; to unpack the information stored in each integer.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T065607Z" creationid="pingfangx" creationdate="20191103T065607Z">
        <seg>作为优化，这些值存储为压缩整数，并使用 &lt;c4&gt;&lt;a5&gt;View.MeasureSpec&lt;/a5&gt;&lt;/c4&gt; 的静态方法来解压缩存储在每个整数中的信息。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As each receiver executes in turn, it can propagate a result to the next receiver, or it can completely abort the broadcast so that it won't be passed to other receivers.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T060928Z" creationid="pingfangx" creationdate="20191030T060928Z">
        <seg>当每个接收器依次执行时，它可以将结果传播到下一个接收器，或者它可以完全中止广播，这样就不会传递给其他接收器。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As mentioned earlier, this is the view's responsibility.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T065624Z" creationid="pingfangx" creationdate="20191103T065624Z">
        <seg>如前所述，这是 view 的责任。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As part of the &lt;c5&gt;ConstraintLayout&lt;/c5&gt; library, &lt;c6&gt;MotionLayout&lt;/c6&gt; is available as a support library and is backwards-compatible to &lt;a7&gt;API level 14&lt;/a7&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T080232Z" creationid="pingfangx" creationdate="20191103T080232Z">
        <seg>作为 &lt;c5&gt;ConstraintLayout&lt;/c5&gt; 库的一部分，&lt;c6&gt;MotionLayout&lt;/c6&gt; 可用作支持库，并向后兼容 &lt;a7&gt;API level 14&lt;/a7&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As such, it's cheap to inflate and cheap to leave in a view hierarchy.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T095630Z" creationid="pingfangx" creationdate="20191103T095630Z">
        <seg>因此，它的加载成本低，离开视图层次结构的成本低。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As such, the system will often kill these processes in order to balance overall system resources between these empty cached processes and the underlying kernel caches.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191029T080232Z" creationid="pingfangx" creationdate="20191029T080232Z">
        <seg>因此，系统通常会终止这些进程，以便在这些空缓存进程和底层内核缓存之间平衡整个系统资源。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As the Android platform evolves, it periodically changes how system broadcasts behave.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T051917Z" creationid="pingfangx" creationdate="20191030T051917Z">
        <seg>随着 Android 平台的发展，它会周期性地改变系统广播的行为。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As usual, you call &lt;c0&gt;&lt;a1&gt;startActivity()&lt;/a1&gt;&lt;/c0&gt;, but pass it a bundle of options provided by &lt;a2&gt;&lt;c3&gt;ActivityOptions.makeSceneTransitionAnimation()&lt;/c3&gt;&lt;/a2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T060138Z" creationid="pingfangx" creationdate="20191117T060138Z">
        <seg>与往常一样，可以调用 &lt;c0&gt;&lt;a1&gt;startActivity()&lt;/a1&gt;&lt;/c0&gt;，但是传递一个由 &lt;a2&gt;&lt;c3&gt;ActivityOptions.makeSceneTransitionAnimation()&lt;/c3&gt;&lt;/a2&gt; 提供的选项的 bundle。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As with defining a layout, an XML file is recommended because it's more readable, reusable, and swappable than hard-coding the animation.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T075008Z" creationid="pingfangx" creationdate="20191117T075008Z">
        <seg>与定义布局一样，建议使用 XML 文件，因为它比硬编码动画更具可读性、可重用性和可交换性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>At a high level, implementing &lt;c0&gt;onMeasure()&lt;/c0&gt; looks something like this:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064043Z" creationid="pingfangx" creationdate="20191103T064043Z">
        <seg>高度概括来看，实现 &lt;c0&gt;onMeasure()&lt;/c0&gt; 方法看起来是这样的：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>At a high level, you assign animators to the properties that you want to animate, such as color, position, or size and can define aspects of the animation such as interpolation and synchronization of multiple animators.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T092007Z" creationid="pingfangx" creationdate="20191117T092007Z">
        <seg>在较高级别上，可以将动画指定给要设置动画的属性，例如颜色、位置或大小，还可以定义动画的各个方面，例如多个动画的插值和同步。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>At the end of 40ms, the animation stops, and the object ends at horizontal position 40.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T081706Z" creationid="pingfangx" creationdate="20191117T081706Z">
        <seg>在 40 毫秒结束时，动画停止，对象在水平位置 40 结束。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Attaching</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064205Z" creationid="pingfangx" creationdate="20191103T064205Z">
        <seg>附加</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Attributes are a powerful way of controlling the behavior and appearance of views, but they can only be read when the view is initialized.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T065054Z" creationid="pingfangx" creationdate="20191103T065054Z">
        <seg>属性是控制 view 行为和外观的强大方法，但只能在初始化 view 时读取它们。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Autoconnect does not create constraints to other views in the layout.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T075206Z" creationid="pingfangx" creationdate="20191103T075206Z">
        <seg>Autoconnect 不会对布局中的其他 views 创建约束。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Autoconnect is disabled by default.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T075208Z" creationid="pingfangx" creationdate="20191103T075208Z">
        <seg>默认情况下禁用 Autoconnect。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Automatically create constraints</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T075057Z" creationid="pingfangx" creationdate="20191103T075057Z">
        <seg>自动创建约束</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Baseline alignment</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T073043Z" creationid="pingfangx" creationdate="20191103T073043Z">
        <seg>基线对齐</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Basic touch-controlled motion.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T080242Z" creationid="pingfangx" creationdate="20191103T080242Z">
        <seg>基本触摸控制运动。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Be compatible with multiple Android platforms.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064855Z" creationid="pingfangx" creationdate="20191103T064855Z">
        <seg>与多个 Android 平台兼容。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Be mindful of where you register and unregister the receiver, for example, if you register a receiver in &lt;c0&gt;&lt;a1&gt;onCreate(Bundle)&lt;/a1&gt;&lt;/c0&gt; using the activity's context, you should unregister it in &lt;c2&gt;&lt;a3&gt;onDestroy()&lt;/a3&gt;&lt;/c2&gt; to prevent leaking the receiver out of the activity context.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T054426Z" creationid="pingfangx" creationdate="20191030T054426Z">
        <seg>注意注册和注销接收器的位置，例如，如果使用 Activity 的上下文在 &lt;c0&gt;&lt;a1&gt;onCreate(Bundle)&lt;/a1&gt;&lt;/c0&gt; 中注册接收器，则应在 &lt;c2&gt;&lt;a3&gt;onDestroy()&lt;/a3&gt;&lt;/c2&gt; 中注销接收器，以防止接收器泄漏出 Activity 上下文。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Be sure to unregister the receiver when you no longer need it or the context is no longer valid.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T054322Z" creationid="pingfangx" creationdate="20191030T054322Z">
        <seg>当不再需要接收器或上下文不再有效时，请确保注销接收器。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Be sure to use the proper format for what you want ("50" for 50% relative to the parent, or "50%" for 50% relative to itself).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T075430Z" creationid="pingfangx" creationdate="20191117T075430Z">
        <seg>一定要使用正确的格式来满足你的需要(“50%p”表示相对于父对象的 50%，或“50%”表示相对于自身的 50%)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Because a receiver's &lt;c0&gt;&lt;a1&gt;onReceive(Context, Intent)&lt;/a1&gt;&lt;/c0&gt; method runs on the main thread, it should execute and return quickly.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T064307Z" creationid="pingfangx" creationdate="20191030T064307Z">
        <seg>因为接收器的 &lt;c0&gt;&lt;a1&gt;onReceive(Context, Intent)&lt;/a1&gt;&lt;/c0&gt; 方法在主线程上运行，所以它应该快速执行并返回。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Because the layout performance above slows down due to a nested &lt;c0&gt;&lt;a1&gt;LinearLayout&lt;/a1&gt;&lt;/c0&gt;, the performance might improve by flattening the layout—make the layout shallow and wide, rather than narrow and deep.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T092449Z" creationid="pingfangx" creationdate="20191103T092449Z">
        <seg>由于上述布局性能由于嵌套的 &lt;c0&gt;&lt;a1&gt;LinearLayout&lt;/a1&gt;&lt;/c0&gt; 而降低，因此可以通过展平布局来提高性能，使布局浅而宽，而不是窄而深。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Because the view animation system already defines many interpolators in &lt;c2&gt;&lt;a3&gt;android.view.animation&lt;/a3&gt;&lt;/c2&gt;, you can use those interpolators in the property animation system as well.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T092732Z" creationid="pingfangx" creationdate="20191117T092732Z">
        <seg>由于视图动画系统已经在 &lt;c2&gt;&lt;a3&gt;android.view.animation&lt;/a3&gt;&lt;/c2&gt; 中定义了许多插值器，因此也可以在属性动画系统中使用这些插值器。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Before you can call any drawing methods, though, it's necessary to create a &lt;c0&gt;&lt;a1&gt;Paint&lt;/a1&gt;&lt;/c0&gt; object.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T065504Z" creationid="pingfangx" creationdate="20191103T065504Z">
        <seg>但是，在调用任何绘制方法之前，必须创建 &lt;c0&gt;&lt;a1&gt;Paint&lt;/a1&gt;&lt;/c0&gt; 对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Beginning with Android 8.0 (API level 26), the system imposes additional restrictions on manifest-declared receivers.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T052053Z" creationid="pingfangx" creationdate="20191030T052053Z">
        <seg>从 Android 8.0(API 级别 26)开始，系统对清单声明的接收者施加额外的限制。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Beginning with Android 9 (API level 28), The &lt;a0&gt;&lt;c1&gt;NETWORK_STATE_CHANGED_ACTION&lt;/c1&gt;&lt;/a0&gt; broadcast doesn't receive information about the user's location or personally identifiable data.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T052006Z" creationid="pingfangx" creationdate="20191030T052006Z">
        <seg>从 Android 9(API 级别 28)开始，&lt;a0&gt;&lt;c1&gt;NETWORK_STATE_CHANGED_ACTION&lt;/c1&gt;&lt;/a0&gt; 广播不会接收有关用户位置或个人识别数据的信息。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Better debugging support, including a dedicated sampling profiler, detailed diagnostic exceptions and crash reporting, and the ability to set watchpoints to monitor specific fields</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T034155Z" creationid="pingfangx" creationdate="20191030T034155Z">
        <seg>更好的调试支持，包括专用的采样分析器、详细的诊断异常和崩溃报告，以及设置观察点以监视特定字段的能力</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Beyond simply including one layout component within another layout, you might want to make the included layout visible only when it's needed, sometime after the activity is running.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T091707Z" creationid="pingfangx" creationdate="20191103T091707Z">
        <seg>除了简单地将一个布局组件包含在另一个布局中之外，你可能还希望使包含的布局仅在需要时(在 activity 运行后的某个时间)可见。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Beyond this lesson, you can find additional related information at &lt;a0&gt;Canvas and Drawables&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T065438Z" creationid="pingfangx" creationdate="20191103T065438Z">
        <seg>除本课程外，你还可以在 &lt;a0&gt;Canvas and Drawables&lt;/a0&gt; 中找到其他相关信息。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Beyond this lesson, you can find additional related information at &lt;a0&gt;Input Events&lt;/a0&gt; and &lt;a1&gt;Property Animation&lt;/a1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T065935Z" creationid="pingfangx" creationdate="20191103T065935Z">
        <seg>除本课程外，你还可以在 &lt;a0&gt;Input Events&lt;/a0&gt; 和 &lt;a1&gt;Property Animation&lt;/a1&gt; 中找到其他相关信息。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Beyond this lesson, you can find additional, related information in &lt;a0&gt;Custom Components&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064901Z" creationid="pingfangx" creationdate="20191103T064901Z">
        <seg>除本课程外，你还可以在 &lt;a0&gt;Custom Components&lt;/a0&gt; 中找到其他相关信息。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Both paths must be compatible for morphing: they must have the same number of commands and the same number of parameters for each command.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T182846Z" creationid="pingfangx" creationdate="20191117T114329Z">
        <seg>这两条路径对于变形必须是兼容的：它们必须具有相同数量的命令，且每个命令的参数数量相同。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Broadcast receivers can't see or capture intents used to start an activity; likewise, when you broadcast an intent, you can't find or start an activity.&lt;/s1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T061807Z" creationid="pingfangx" creationdate="20191030T061807Z">
        <seg>广播接收器无法看到或捕获用于启动 activity 的 intent；同样，当你广播 intent 时，也无法找到或启动 activity。&lt;/s1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Broadcasts overview</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T050411Z" creationid="pingfangx" creationdate="20191030T050411Z">
        <seg>广播概述</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Build toolchains, such as &lt;a1&gt;Jack&lt;/a1&gt;, compile Java sources into DEX bytecode, which can run on the Android platform.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T033951Z" creationid="pingfangx" creationdate="20191030T033951Z">
        <seg>构建工具链，比如 &lt;a1&gt;Jack&lt;/a1&gt;，将 Java 源代码编译成 DEX 字节码，可以在 Android 平台上运行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Building on our previous example, let's have the view change colors as part of its motion, as shown in figure 2.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T081439Z" creationid="pingfangx" creationdate="20191103T081439Z">
        <seg>在前面的例子的基础上，让我们让视图在其运动中改变颜色，如图 2 所示。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>By default, all animation instructions are applied simultaneously.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T075240Z" creationid="pingfangx" creationdate="20191117T075240Z">
        <seg>默认情况下，所有动画指令都同时应用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>By default, the space is evenly distributed between each view that's set to "match constraints," but you can assign a weight of importance to each view using the &lt;c4&gt;layout_constraintHorizontal_weight&lt;/c4&gt; and &lt;c5&gt;layout_constraintVertical_weight&lt;/c5&gt; attributes.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T074928Z" creationid="pingfangx" creationdate="20191103T074928Z">
        <seg>默认情况下，空间均匀分布在设置为 "match constraints" 的每个 view 之间，但是你可以使用 &lt;c4&gt;layout_constraintHorizontal_weight&lt;/c4&gt; 和 &lt;c5&gt;layout_constraintVertical_weight&lt;/c5&gt; 属性为每个 view 分配一个重要性权重。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>By setting the &lt;c0&gt;android:oneshot&lt;/c0&gt; attribute of the list to &lt;v1&gt;true&lt;/v1&gt;, it will cycle just once then stop and hold on the last frame.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T102857Z" creationid="pingfangx" creationdate="20191117T102857Z">
        <seg>通过将列表的 &lt;c0&gt;android:oneshot&lt;/c0&gt; 属性设置为 &lt;v1&gt;true&lt;/v1&gt;，它将只循环一次，然后停止并保持最后一帧。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Calculate positions, dimensions, and any other values related to your view's size in &lt;c2&gt;&lt;a3&gt;onSizeChanged()&lt;/a3&gt;&lt;/c2&gt;, instead of recalculating them every time you draw.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T065552Z" creationid="pingfangx" creationdate="20191103T065552Z">
        <seg>在 &lt;c2&gt;&lt;a3&gt;onSizeChanged()&lt;/a3&gt;&lt;/c2&gt; 中计算与 view 大小相关的位置，尺寸和任何其他值，而不是每次绘制时重新计算它们。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Call &lt;c0&gt;&lt;a1&gt;postInvalidate()&lt;/a1&gt;&lt;/c0&gt; after calling &lt;c2&gt;&lt;a3&gt;fling()&lt;/a3&gt;&lt;/c2&gt;, in order to force a redraw.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T070247Z" creationid="pingfangx" creationdate="20191103T070247Z">
        <seg>在调用 &lt;c2&gt;&lt;a3&gt;fling()&lt;/a3&gt;&lt;/c2&gt; 之后调用 &lt;c0&gt;&lt;a1&gt;postInvalidate()&lt;/a1&gt;&lt;/c0&gt;，以强制重绘。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Call &lt;c10&gt;&lt;a11&gt;getCurrX()&lt;/a11&gt;&lt;/c10&gt; and &lt;c12&gt;&lt;a13&gt;getCurrY()&lt;/a13&gt;&lt;/c12&gt; to retrieve these values.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T070223Z" creationid="pingfangx" creationdate="20191103T070223Z">
        <seg>调用 &lt;c10&gt;&lt;a11&gt;getCurrX()&lt;/a11&gt;&lt;/c10&gt; 和 &lt;c12&gt;&lt;a13&gt;getCurrY()&lt;/a13&gt;&lt;/c12&gt; 来获取这些值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Call &lt;c2&gt;&lt;a3&gt;setShader()&lt;/a3&gt;&lt;/c2&gt; to use your &lt;c4&gt;&lt;a5&gt;LinearGradient&lt;/a5&gt;&lt;/c4&gt; on filled shapes.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T065652Z" creationid="pingfangx" creationdate="20191103T065652Z">
        <seg>调用 &lt;c2&gt;&lt;a3&gt;setShader()&lt;/a3&gt;&lt;/c2&gt; 在填充的形状上使用 &lt;c4&gt;&lt;a5&gt;LinearGradient&lt;/a5&gt;&lt;/c4&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Called after a view and all of its children has been inflated from XML.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064128Z" creationid="pingfangx" creationdate="20191103T064128Z">
        <seg>在一个 View 及其所有子 view 从 XML 加载完成后被调用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Called to determine the size requirements for this view and all of its children.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064132Z" creationid="pingfangx" creationdate="20191103T064132Z">
        <seg>调用以确认 view 及其子 view 所需求的尺寸大小。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Called when a key up event occurs.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064145Z" creationid="pingfangx" creationdate="20191103T064145Z">
        <seg>当按键弹起时调用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Called when a new key event occurs.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064143Z" creationid="pingfangx" creationdate="20191103T064143Z">
        <seg>当一个新的按键事件发生时调用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Called when a touch screen motion event occurs.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064158Z" creationid="pingfangx" creationdate="20191103T064158Z">
        <seg>当发生触摸屏运动事件时调用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Called when a trackball motion event occurs.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064148Z" creationid="pingfangx" creationdate="20191103T064148Z">
        <seg>当轨迹球移动事件发生时调用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Called when the size of this view has changed.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064136Z" creationid="pingfangx" creationdate="20191103T064136Z">
        <seg>当 view 的尺寸发生变化时调用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Called when the view gains or loses focus.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064201Z" creationid="pingfangx" creationdate="20191103T064201Z">
        <seg>当 view 获得或失去焦点时调用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Called when the view is attached to a window.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064207Z" creationid="pingfangx" creationdate="20191103T064207Z">
        <seg>当 view 附加到窗体上时调用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Called when the view is detached from its window.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064209Z" creationid="pingfangx" creationdate="20191103T064209Z">
        <seg>当 view 从窗体上取消附加时调用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Called when the view should render its content.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064140Z" creationid="pingfangx" creationdate="20191103T064140Z">
        <seg>当 view 应渲染内容时调用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Called when the visibility of the window containing the view has changed.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064211Z" creationid="pingfangx" creationdate="20191103T064211Z">
        <seg>当容纳该 view 的窗体的可见性发生变化时调用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Called when the window containing the view gains or loses focus.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064204Z" creationid="pingfangx" creationdate="20191103T064204Z">
        <seg>当容纳该 view 的窗体获得或失去焦点时调用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Called when this view should assign a size and position to all of its children.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064134Z" creationid="pingfangx" creationdate="20191103T064134Z">
        <seg>当 view 为其所有子 view 指定大小和位置时调用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Calling &lt;c0&gt;&lt;a1&gt;goAsync()&lt;/a1&gt;&lt;/c0&gt; in your receiver's &lt;c2&gt;onReceive()&lt;/c2&gt; method and passing the &lt;c3&gt;&lt;a4&gt;BroadcastReceiver.PendingResult&lt;/a4&gt;&lt;/c3&gt; to a background thread.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T064537Z" creationid="pingfangx" creationdate="20191030T064537Z">
        <seg>在接收器的 &lt;c2&gt;onReceive()&lt;/c2&gt; 方法中调用 &lt;c0&gt;&lt;a1&gt;goAsync()&lt;/a1&gt;&lt;/c0&gt; 并将 &lt;c3&gt;&lt;a4&gt;BroadcastReceiver.PendingResult&lt;/a4&gt;&lt;/c3&gt; 传递到后台线程。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Calling &lt;c2&gt;&lt;a3&gt;setTarget()&lt;/a3&gt;&lt;/c2&gt; sets a single target object for all children of the &lt;c4&gt;&lt;a5&gt;AnimatorSet&lt;/a5&gt;&lt;/c4&gt; as a convenience.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T065550Z" creationid="pingfangx" creationdate="20191117T065550Z">
        <seg>为了方便，调用 &lt;c2&gt;&lt;a3&gt;setTarget()&lt;/a3&gt;&lt;/c2&gt; 为 &lt;c4&gt;&lt;a5&gt;AnimatorSet&lt;/a5&gt;&lt;/c4&gt; 的所有子对象设置单个目标对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Calling this method is mandatory.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T065632Z" creationid="pingfangx" creationdate="20191103T065632Z">
        <seg>调用此方法是必需的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Category</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064102Z" creationid="pingfangx" creationdate="20191103T064102Z">
        <seg>分类</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Chains can be styled in one of the following ways:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T074844Z" creationid="pingfangx" creationdate="20191103T074844Z">
        <seg>可以通过以下方式之一设置链的样式：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Change a view visibility with a circular reveal</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T054121Z" creationid="pingfangx" creationdate="20191117T054121Z">
        <seg>使用圆形揭露更改视图可见性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Change a view visibility with a crossfade</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T054005Z" creationid="pingfangx" creationdate="20191117T054005Z">
        <seg>使用淡入淡出度更改视图可见性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Change the view size with a zoom animation</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T054157Z" creationid="pingfangx" creationdate="20191117T054157Z">
        <seg>使用缩放动画更改视图大小</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Change whether the shapes are filled, outlined, or both by calling &lt;c6&gt;&lt;a7&gt;setStyle()&lt;/a7&gt;&lt;/c6&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T065642Z" creationid="pingfangx" creationdate="20191103T065642Z">
        <seg>通过调用 &lt;c6&gt;&lt;a7&gt;setStyle()&lt;/a7&gt;&lt;/c6&gt; 来更改形状是否填充，轮廓或两者都有。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Changes to system broadcasts</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T051901Z" creationid="pingfangx" creationdate="20191030T051901Z">
        <seg>对系统广播的更改</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Choose from the following supported types:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T081354Z" creationid="pingfangx" creationdate="20191103T081354Z">
        <seg>从以下支持的类型中选择：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Choose your component from the &lt;s1&gt;Windows&lt;/s1&gt; tab, and click &lt;s2&gt;Hierarchy View&lt;/s2&gt;to view the layout hierarchy of the selected component.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T092247Z" creationid="pingfangx" creationdate="20191103T092247Z">
        <seg>从 &lt;s1&gt;Windows&lt;/s1&gt; 选项卡中选择组件，然后单击 &lt;s2&gt;Hierarchy View&lt;/s2&gt; 查看选定组件的布局层次结构。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Class Initialization</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064506Z" creationid="pingfangx" creationdate="20191103T064506Z">
        <seg>类初始化</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Click &lt;s0&gt;Finish&lt;/s0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T071756Z" creationid="pingfangx" creationdate="20191103T071756Z">
        <seg>点击 &lt;s0&gt;Finish&lt;/s0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Click &lt;s0&gt;Guidelines&lt;/s0&gt; &lt;i1/&gt; in the toolbar, and then click &lt;s2&gt;Add Vertical Barrier&lt;/s2&gt; or &lt;s3&gt;Add Horizontal Barrier&lt;/s3&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T073549Z" creationid="pingfangx" creationdate="20191103T073549Z">
        <seg>在工具栏上点击 &lt;s0&gt;Guidelines&lt;/s0&gt; &lt;i1/&gt; ，然后单击 &lt;s2&gt;Add Vertical Barrier&lt;/s2&gt; 或 &lt;s3&gt;Add Horizontal Barrier&lt;/s3&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Click a constraint handle and drag it to an available anchor point.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T071905Z" creationid="pingfangx" creationdate="20191103T071905Z">
        <seg>点击约束手柄，将其拖动到可用的锚点。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Click on a constraint anchor to delete it.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T073016Z" creationid="pingfangx" creationdate="20191103T073016Z">
        <seg>点击一个约束锚将其删除。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Click on a constraint to select it, and then press &lt;c0&gt;Delete&lt;/c0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T072414Z" creationid="pingfangx" creationdate="20191103T072414Z">
        <seg>点击一个约束，将其选中，然后按 &lt;c0&gt;Delete&lt;/c0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Click one of the &lt;b0&gt;Create a connection&lt;/b0&gt; buttons &lt;i1/&gt; in the &lt;b2&gt;Layout&lt;/b2&gt; section of the &lt;b3&gt;Attributes&lt;/b3&gt; window, as shown in figure 4.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T072206Z" creationid="pingfangx" creationdate="20191103T072143Z">
        <seg>单击 &lt;b3&gt;Attributes&lt;/b3&gt; 窗口的 &lt;b2&gt;Layout&lt;/b2&gt; 部分中的 &lt;b0&gt;Create a connection&lt;/b0&gt; 按钮 &lt;i1/&gt; 之一，如图 4 所示。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Click the view to select it.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T071854Z" creationid="pingfangx" creationdate="20191103T071854Z">
        <seg>点击 view 选择它。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Colors are represented as six digit hexadecimal numbers (for example, #333333).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T063317Z" creationid="pingfangx" creationdate="20191117T063317Z">
        <seg>颜色被表示为六位十六进制数(例如，#333333)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Complex custom views often need to perform multiple layout calculations depending on the size and shape of their area on screen.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T065542Z" creationid="pingfangx" creationdate="20191103T065542Z">
        <seg>复杂的自定义 view 通常需要根据屏幕上区域的大小和形状执行多次布局计算。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Compound Controls</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064212Z" creationid="pingfangx" creationdate="20191103T064212Z">
        <seg>复合控制</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Conceptual layout for an item in a &lt;c1&gt;&lt;a2&gt;ListView&lt;/a2&gt;&lt;/c1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T092224Z" creationid="pingfangx" creationdate="20191103T092224Z">
        <seg>&lt;c1&gt;&lt;a2&gt;ListView&lt;/a2&gt;&lt;/c1&gt; 中项目的概念布局。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Conform to Android standards</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064842Z" creationid="pingfangx" creationdate="20191103T064842Z">
        <seg>符合 Android 标准</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Consider using flatter layouts such as &lt;c0&gt;&lt;a1&gt;RelativeLayout&lt;/a1&gt;&lt;/c0&gt; or &lt;c2&gt;&lt;a3&gt;GridLayout&lt;/a3&gt;&lt;/c2&gt; to improve performance.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T093331Z" creationid="pingfangx" creationdate="20191103T093331Z">
        <seg>考虑使用更平坦的布局，如 &lt;c0&gt;&lt;a1&gt;RelativeLayout&lt;/a1&gt;&lt;/c0&gt; 或 &lt;c2&gt;&lt;a3&gt;GridLayout&lt;/a3&gt;&lt;/c2&gt; 来提高性能。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Constrain the side of a view to the corresponding edge of the layout.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T072524Z" creationid="pingfangx" creationdate="20191103T072524Z">
        <seg>将 view 的边约束为布局的相应边。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Constrain to a barrier</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T073302Z" creationid="pingfangx" creationdate="20191103T073302Z">
        <seg>约束到一个屏障</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Constrain to a guideline</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T073216Z" creationid="pingfangx" creationdate="20191103T073216Z">
        <seg>参考线约束</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Constraints overview</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T071215Z" creationid="pingfangx" creationdate="20191103T071215Z">
        <seg>Constraints 概述</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Construct a &lt;c0&gt;&lt;a1&gt;GestureDetector&lt;/a1&gt;&lt;/c0&gt; by passing in an instance of a class that implements &lt;c2&gt;&lt;a3&gt;GestureDetector.OnGestureListener&lt;/a3&gt;&lt;/c2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T070024Z" creationid="pingfangx" creationdate="20191103T070024Z">
        <seg>通过传入实现 &lt;c2&gt;&lt;a3&gt;GestureDetector.OnGestureListener&lt;/a3&gt;&lt;/c2&gt; 的类的实例来构造 &lt;c0&gt;&lt;a1&gt;GestureDetector&lt;/a1&gt;&lt;/c0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Constructors</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064105Z" creationid="pingfangx" creationdate="20191103T064105Z">
        <seg>构造方法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Contains one or more &lt;c1&gt;&lt;item&gt;&lt;/c1&gt; elements.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T072851Z" creationid="pingfangx" creationdate="20191117T072851Z">
        <seg>包含一个或多个 &lt;c1&gt;&lt;item&gt;&lt;/c1&gt; 元素。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Content and code samples on this page are subject to the licenses described in the &lt;a0&gt;Content License&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T064729Z" creationid="pingfangx" creationdate="20191030T064729Z">
        <seg>此页上的内容和代码示例受 &lt;a0&gt;Content License&lt;/a0&gt; 中描述的许可证的约束。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Context-registered receivers</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T053513Z" creationid="pingfangx" creationdate="20191030T053513Z">
        <seg>上下文注册接收器</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Context-registered receivers receive broadcasts as long as their registering context is valid.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T053751Z" creationid="pingfangx" creationdate="20191030T053751Z">
        <seg>上下文注册的接收器，只在其注册上下文有效时接收广播。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Control linear groups with a chain</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T074734Z" creationid="pingfangx" creationdate="20191103T074734Z">
        <seg>用一个链控制线性组</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Convert a layout</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T071713Z" creationid="pingfangx" creationdate="20191103T071713Z">
        <seg>转换布局</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Create Drawing Objects</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T065506Z" creationid="pingfangx" creationdate="20191103T065506Z">
        <seg>创建绘制对象</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Create Physically Plausible Motion</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T070055Z" creationid="pingfangx" creationdate="20191103T070055Z">
        <seg>创建物理上合理的运动</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Create a new layout</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T071726Z" creationid="pingfangx" creationdate="20191103T071726Z">
        <seg>创建新的布局</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Create a re-usable layout</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T094508Z" creationid="pingfangx" creationdate="20191103T094508Z">
        <seg>创建可重用布局</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Create an &lt;c0&gt;&lt;a1&gt;IntentFilter&lt;/a1&gt;&lt;/c0&gt; and register the receiver by calling &lt;c2&gt;&lt;a3&gt;registerReceiver(BroadcastReceiver, IntentFilter)&lt;/a3&gt;&lt;/c2&gt;:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T053623Z" creationid="pingfangx" creationdate="20191030T053623Z">
        <seg>创建 &lt;c0&gt;&lt;a1&gt;IntentFilter&lt;/a1&gt;&lt;/c0&gt; 并通过调用 &lt;c2&gt;&lt;a3&gt;registerReceiver(BroadcastReceiver, IntentFilter)&lt;/a3&gt;&lt;/c2&gt; 注册接收器：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Create an instance of &lt;c0&gt;&lt;a1&gt;BroadcastReceiver&lt;/a1&gt;&lt;/c0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T053608Z" creationid="pingfangx" creationdate="20191030T053608Z">
        <seg>创建一个 &lt;c0&gt;&lt;a1&gt;BroadcastReceiver&lt;/a1&gt;&lt;/c0&gt; 实例。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Creates an animation by modifying an object's property values over a set period of time with an &lt;c0&gt;&lt;a1&gt;Animator&lt;/a1&gt;&lt;/c0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T061103Z" creationid="pingfangx" creationdate="20191117T061103Z">
        <seg>使用 &lt;c0&gt;&lt;a1&gt;Animator&lt;/a1&gt;&lt;/c0&gt; 在时间段内修改对象的属性值来创建动画。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Creates an animation by performing a series of transformations on a single image with an &lt;c1&gt;&lt;a2&gt;Animation&lt;/a2&gt;&lt;/c1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T061432Z" creationid="pingfangx" creationdate="20191117T061432Z">
        <seg>使用 &lt;c1&gt;&lt;a2&gt;animation&lt;/a2&gt;&lt;/c1&gt; 在单个图像上执行一系列变换产生的动画</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Creating a View Class</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064834Z" creationid="pingfangx" creationdate="20191103T064834Z">
        <seg>创建一个视图类</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Creating a horizontal chain</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T075014Z" creationid="pingfangx" creationdate="20191103T075014Z">
        <seg>创建水平链</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Creating drawing objects within your &lt;c0&gt;&lt;a1&gt;onDraw()&lt;/a1&gt;&lt;/c0&gt; method significantly reduces performance and can make your UI appear sluggish.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T065537Z" creationid="pingfangx" creationdate="20191103T065537Z">
        <seg>在 &lt;c0&gt;&lt;a1&gt;onDraw()&lt;/a1&gt;&lt;/c0&gt; 方法中创建绘图对象会显着降低性能并使 UI 显得缓慢。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Creating objects ahead of time is an important optimization.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T065534Z" creationid="pingfangx" creationdate="20191103T065534Z">
        <seg>提前创建对象是一项重要的优化。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Creating your own View subclasses gives you precise control over the appearance and function of a screen element.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T063805Z" creationid="pingfangx" creationdate="20191103T063805Z">
        <seg>创建你自己的 View 子类可提供对一个屏幕单元外观和功能的精细控制。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Creation</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064104Z" creationid="pingfangx" creationdate="20191103T064104Z">
        <seg>创建</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Custom Drawing</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T065432Z" creationid="pingfangx" creationdate="20191103T065432Z">
        <seg>自定义绘制</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Custom View Components</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T063714Z" creationid="pingfangx" creationdate="20191103T063714Z">
        <seg>自定义视图组件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Custom drawing can be easy or complex according to your application's needs.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T065435Z" creationid="pingfangx" creationdate="20191103T065435Z">
        <seg>根据你的应用需求，可以轻松或复杂地自定义绘制。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Custom interpolators</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T072156Z" creationid="pingfangx" creationdate="20191117T072156Z">
        <seg>自定义插值器</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Custom views should also support event listeners to communicate important events.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T065106Z" creationid="pingfangx" creationdate="20191103T065106Z">
        <seg>自定义 view 还应支持事件侦听器来传递重要事件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Declaring a receiver in the manifest doesn't work.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T052224Z" creationid="pingfangx" creationdate="20191030T052224Z">
        <seg>在清单中声明接收者不起作用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Deep layouts - Layouts with too much nesting are bad for performance.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T093308Z" creationid="pingfangx" creationdate="20191103T093308Z">
        <seg>深度布局 - 嵌套过多的布局不利于性能。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Deferring loading resources is an important technique to use when you have complex views that your app might need in the future.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T095501Z" creationid="pingfangx" creationdate="20191103T095501Z">
        <seg>延迟加载资源是一项重要的技术，当你有复杂的视图，你的应用程序可能需要在未来使用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Define Custom Attributes</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064911Z" creationid="pingfangx" creationdate="20191103T064911Z">
        <seg>定义自定义属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Define a ViewStub</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T095528Z" creationid="pingfangx" creationdate="20191103T095528Z">
        <seg>定义 ViewStub</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Define a shape by adding lines and curves to a &lt;c2&gt;&lt;a3&gt;Path&lt;/a3&gt;&lt;/c2&gt; object, then draw the shape using &lt;c4&gt;&lt;a5&gt;drawPath()&lt;/a5&gt;&lt;/c4&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T065645Z" creationid="pingfangx" creationdate="20191103T065645Z">
        <seg>通过将线和曲线添加到 &lt;c2&gt;&lt;a3&gt;Path&lt;/a3&gt;&lt;/c2&gt; 对象来定义形状，然后使用 &lt;c4&gt;&lt;a5&gt;drawPath()&lt;/a5&gt;&lt;/c4&gt; 绘制形状。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Define custom attributes for your view in a &lt;c0&gt;&lt;declare-styleable&gt; &lt;/c0&gt; resource element</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064934Z" creationid="pingfangx" creationdate="20191103T064934Z">
        <seg>在 &lt;c0&gt;&lt;declare-styleable&gt; &lt;/c0&gt; 资源元素中为 view 定义自定义属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Define gradient fills by creating &lt;c0&gt;&lt;a1&gt;LinearGradient&lt;/a1&gt;&lt;/c0&gt; objects.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T065648Z" creationid="pingfangx" creationdate="20191103T065648Z">
        <seg>通过创建 &lt;c0&gt;&lt;a1&gt;LinearGradient&lt;/a1&gt;&lt;/c0&gt; 对象来定义渐变填充。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Define the order of appearance for two views, either vertically or horizontally.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T072540Z" creationid="pingfangx" creationdate="20191103T072540Z">
        <seg>定义两个 view 的垂直或水平出现的顺序。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Delayed Loading of Views</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T095346Z" creationid="pingfangx" creationdate="20191103T095346Z">
        <seg>延迟加载视图</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Description</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064104Z" creationid="pingfangx" creationdate="20191103T064104Z">
        <seg>描述</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Design For Accessibility</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T065144Z" creationid="pingfangx" creationdate="20191103T065144Z">
        <seg>设计无障碍功能</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Design considerations</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T080525Z" creationid="pingfangx" creationdate="20191103T080525Z">
        <seg>设计注意事项</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Developers have full access to the same &lt;a0&gt;framework APIs&lt;/a0&gt; that Android system apps use.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T045853Z" creationid="pingfangx" creationdate="20191030T045853Z">
        <seg>开发者可以完全访问 Android 系统应用程序使用的&lt;a0&gt;框架 API&lt;/a0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Do Less, Less Frequently</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T070708Z" creationid="pingfangx" creationdate="20191103T070708Z">
        <seg>尽可能少地频繁调用</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Do not broadcast sensitive information using an implicit intent.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T063930Z" creationid="pingfangx" creationdate="20191030T063930Z">
        <seg>不要使用隐式 intent 广播敏感信息。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Do not specify this attribute if the value is a color.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T063558Z" creationid="pingfangx" creationdate="20191117T063558Z">
        <seg>如果值是颜色，则不要指定此属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Do not start activities from broadcast receivers because the user experience is jarring; especially if there is more than one receiver.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T064658Z" creationid="pingfangx" creationdate="20191030T064658Z">
        <seg>不要从广播接收器启动 activity，因为用户体验不稳定；特别是如果有多个接收器。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Do not unregister in &lt;c8&gt;&lt;a9&gt;onSaveInstanceState(Bundle)&lt;/a9&gt;&lt;/c8&gt;, because this isn't called if the user moves back in the history stack.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T054539Z" creationid="pingfangx" creationdate="20191030T054539Z">
        <seg>不要在 &lt;c8&gt;&lt;a9&gt;onSaveInstanceState(Bundle)&lt;/a9&gt;&lt;/c8&gt; 中注销，因为如果用户移回历史堆栈中，则不会调用此命令。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Do one of the following:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T071859Z" creationid="pingfangx" creationdate="20191103T071859Z">
        <seg>执行下列操作之一：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Documentation for each broadcast action is available in its associated constant field.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T051558Z" creationid="pingfangx" creationdate="20191030T051558Z">
        <seg>每个广播 action 的文档在其关联的常量字段中可用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Drag a view from the &lt;b0&gt;Palette&lt;/b0&gt; window into the editor.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T071836Z" creationid="pingfangx" creationdate="20191103T071836Z">
        <seg>将 view 从 &lt;b0&gt;Palette&lt;/b0&gt; 窗口拖到编辑器中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Drag the dotted line to reposition it and click the circle at the edge of the guideline to toggle the measurement mode.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T073247Z" creationid="pingfangx" creationdate="20191103T073247Z">
        <seg>拖动虚线来重新定位它，并单击参考线边缘处的圆圈来切换测量模式。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Draw bitmaps using &lt;c0&gt;&lt;a1&gt;drawBitmap()&lt;/a1&gt;&lt;/c0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T065653Z" creationid="pingfangx" creationdate="20191103T065653Z">
        <seg>使用 &lt;c0&gt;&lt;a1&gt;drawBitmap()&lt;/a1&gt;&lt;/c0&gt; 绘制位图。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Draw more complex shapes using the &lt;c0&gt;&lt;a1&gt;Path&lt;/a1&gt;&lt;/c0&gt; class.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T065644Z" creationid="pingfangx" creationdate="20191103T065644Z">
        <seg>使用 &lt;c0&gt;&lt;a1&gt;Path&lt;/a1&gt;&lt;/c0&gt; 类绘制更复杂的形状。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Draw primitive shapes using &lt;c0&gt;&lt;a1&gt;drawRect()&lt;/a1&gt;&lt;/c0&gt;, &lt;c2&gt;&lt;a3&gt;drawOval()&lt;/a3&gt;&lt;/c2&gt;, and &lt;c4&gt;&lt;a5&gt;drawArc()&lt;/a5&gt;&lt;/c4&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T065642Z" creationid="pingfangx" creationdate="20191103T065642Z">
        <seg>使用 &lt;c0&gt;&lt;a1&gt;drawRect()&lt;/a1&gt;&lt;/c0&gt;，&lt;c2&gt;&lt;a3&gt;drawOval()&lt;/a3&gt;&lt;/c2&gt; 和 &lt;c4&gt;&lt;a5&gt;drawArc()&lt;/a5&gt;&lt;/c4&gt; 绘制基本形状。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Draw text using &lt;c0&gt;&lt;a1&gt;drawText()&lt;/a1&gt;&lt;/c0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T065638Z" creationid="pingfangx" creationdate="20191103T065638Z">
        <seg>使用 &lt;c0&gt;&lt;a1&gt;drawText()&lt;/a1&gt;&lt;/c0&gt; 绘制文本。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Drawing</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064136Z" creationid="pingfangx" creationdate="20191103T064136Z">
        <seg>绘制</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Drawing a UI is only one part of creating a custom view.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T065919Z" creationid="pingfangx" creationdate="20191103T065919Z">
        <seg>绘制 UI 只是创建自定义 view 的一部分。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Duration: You can specify the duration of an animation.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T080057Z" creationid="pingfangx" creationdate="20191117T080057Z">
        <seg>持续时间：可以指定动画的持续时间。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>During the whole animation, the &lt;c4&gt;&lt;a5&gt;ValueAnimator&lt;/a5&gt;&lt;/c4&gt; calculates an &lt;e6&gt;elapsed fraction&lt;/e6&gt; between 0 and 1, based on the duration of the animation and how much time has elapsed.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T091400Z" creationid="pingfangx" creationdate="20191117T091213Z">
        <seg>在整个动画过程中，&lt;c4&gt;&lt;a5&gt;ValueAnimator&lt;/a5&gt;&lt;/c4&gt; 计算计算 0 到 1 之间的 &lt;e6&gt;elapsed fraction (经过分数)&lt;/e6&gt;，根据动画的持续时间和经过的时间。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Each &lt;c1&gt;&lt;set&gt;&lt;/c1&gt; can define its own &lt;c2&gt;ordering&lt;/c2&gt; attribute.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T062916Z" creationid="pingfangx" creationdate="20191117T062916Z">
        <seg>每个 &lt;c1&gt;&lt;set&gt;&lt;/c1&gt; 可以定义其自己的 &lt;c2&gt;ordering&lt;/c2&gt; 属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Each &lt;c2&gt;&lt;a3&gt;ViewStub&lt;/a3&gt;&lt;/c2&gt; simply needs to include the &lt;c4&gt;android:layout&lt;/c4&gt; attribute to specify the layout to inflate.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T095654Z" creationid="pingfangx" creationdate="20191103T095654Z">
        <seg>每个 &lt;c2&gt;&lt;a3&gt;ViewStub&lt;/a3&gt;&lt;/c2&gt; 都需要包含 &lt;c4&gt;android:layout&lt;/c4&gt; 属性来指定要加载的布局。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Each broadcast action has a constant field associated with it.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T051450Z" creationid="pingfangx" creationdate="20191030T051450Z">
        <seg>每个广播 action 都有一个与之关联的常量字段。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Each constraint defines the view's position along either the vertical or horizontal axis; so each view must have a minimum of one constraint for each axis, but often more are necessary.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T071221Z" creationid="pingfangx" creationdate="20191103T071221Z">
        <seg>每一个约束都定义了 View 在水平或垂直方向的位置：因此每一个 View 与轴线（垂直和水平方向）都至少应该有一个约束。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Each constraint handle can be used for just one constraint, but you can create multiple constraints (from different views) to the same anchor point.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T072356Z" creationid="pingfangx" creationdate="20191103T072356Z">
        <seg>每个约束句柄只能用于一个约束，但你可以创建多个约束(从不同的 view)到同一个定位点。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Each constraint represents a connection or alignment to another view, the parent layout, or an invisible guideline.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T071219Z" creationid="pingfangx" creationdate="20191103T071219Z">
        <seg>每一个约束表示到另一个 view，父布局，或者不可见的参考线的连接或者对齐。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Each one has an attribute value that can be applied in the XML.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T075528Z" creationid="pingfangx" creationdate="20191117T075528Z">
        <seg>每一个都有一个属性值，可以在 XML 中应用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Each transformation takes a set of parameters specific for that transformation (starting size and ending size for size change, starting angle and ending angle for rotation, and so on), and also a set of common parameters (for instance, start time and duration).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T075152Z" creationid="pingfangx" creationdate="20191117T075152Z">
        <seg>每个变换都有一组特定于该变换的参数(大小更改的起始大小和结束大小、旋转的起始角度和结束角度等)，以及一组常用参数(例如，开始时间和持续时间)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Effects on process state</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T054550Z" creationid="pingfangx" creationdate="20191030T054550Z">
        <seg>对进程状态的影响</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Either way, you want something that the built-in components just won't do, no matter how you combine them.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T063949Z" creationid="pingfangx" creationdate="20191103T063949Z">
        <seg>不管怎样，你的需求预制的组件是无法完成的，不管你怎么组合它们。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Enable it by clicking &lt;s0&gt;Enable Autoconnection to Parent&lt;/s0&gt; &lt;i1/&gt; in the Layout Editor toolbar.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T075225Z" creationid="pingfangx" creationdate="20191103T075225Z">
        <seg>通过单击布局编辑器工具栏中的 &lt;s0&gt;Enable Autoconnection to Parent&lt;/s0&gt; &lt;i1/&gt; 来启用它。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Ending X offset.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T071540Z" creationid="pingfangx" creationdate="20191117T071540Z">
        <seg>结束 X 轴偏移。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Ending X size offset, where 1.0 is no change.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T071317Z" creationid="pingfangx" creationdate="20191117T071250Z">
        <seg>结束 X 尺寸偏移，其中 1.0 不变。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Ending Y offset.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T071607Z" creationid="pingfangx" creationdate="20191117T071607Z">
        <seg>结束 Y 偏移。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Ending Y size offset, where 1.0 is no change.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T071324Z" creationid="pingfangx" creationdate="20191117T071324Z">
        <seg>结束 Y 尺寸偏移，其中 1.0 不变。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Ending angular position, in degrees.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T071704Z" creationid="pingfangx" creationdate="20191117T071704Z">
        <seg>结束角度位置，以度为单位。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Ending opacity offset, where 0.0 is transparent and 1.0 is opaque.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T071111Z" creationid="pingfangx" creationdate="20191117T071111Z">
        <seg>结束不透明度偏移，其中 0.0 是透明的，1.0 是不透明的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Ensure you have the &lt;c0&gt;maven.google.com&lt;/c0&gt; repository declared in your module-level &lt;c1&gt;build.gradle&lt;/c1&gt; file:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T071444Z" creationid="pingfangx" creationdate="20191103T071444Z">
        <seg>确保你在模块级 &lt;c1&gt;build.gradle&lt;/c1&gt; 文件中声明 &lt;c0&gt;maven.google.com&lt;/c0&gt; 仓库：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Enter a name for the layout file and enter "android.support.constraint.ConstraintLayout" for the &lt;b0&gt;Root Tag&lt;/b0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T071754Z" creationid="pingfangx" creationdate="20191103T071754Z">
        <seg>输入一个布局文件的名字，然后输入 "android.support.constraint.ConstraintLayout" 作为 &lt;b0&gt;Root Tag&lt;/b0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Evaluators tell the property animation system how to calculate values for a given property.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T093552Z" creationid="pingfangx" creationdate="20191117T093552Z">
        <seg>求值器告诉属性动画系统如何计算给定属性的值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Even if only one app uses your view, that app needs to handle different screen sizes, multiple screen densities, and various aspect ratios in both portrait and landscape mode.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T065544Z" creationid="pingfangx" creationdate="20191103T065544Z">
        <seg>即使只有一个应用程序使用你的 view，该应用程序也需要在纵向和横向模式下处理不同的屏幕尺寸，多个屏幕密度和各种宽高比。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Even so, the animation will still be drawn beyond the bounds of its View and will not be clipped.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T075638Z" creationid="pingfangx" creationdate="20191117T075638Z">
        <seg>即使如此，动画仍将绘制在其视图的边界之外，并且不会被剪裁。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Event processing</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064140Z" creationid="pingfangx" creationdate="20191103T064140Z">
        <seg>事件处理</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Every 10 ms, which is the default frame refresh rate, the object moves horizontally by 10 pixels.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T081700Z" creationid="pingfangx" creationdate="20191117T081700Z">
        <seg>每 10 毫秒(默认的帧刷新率)对象水平移动 10 像素。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Every view implements &lt;c2&gt;&lt;a3&gt;onDraw()&lt;/a3&gt;&lt;/c2&gt; differently, but there are some common operations that most views share:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T065637Z" creationid="pingfangx" creationdate="20191103T065637Z">
        <seg>每个 view 以不同方式实现 &lt;c2&gt;&lt;a3&gt;onDraw()&lt;/a3&gt;&lt;/c2&gt;，但大多数 view 共享一些常见操作：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Every view must have at least two constraints: one horizontal and one vertical.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T072345Z" creationid="pingfangx" creationdate="20191103T072345Z">
        <seg>每一个 view 必须至少有两个约束：一个水平和一个垂直约束。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example of a linear animation</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T081907Z" creationid="pingfangx" creationdate="20191117T081907Z">
        <seg>线性动画示例</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example of a non-linear animation</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T082044Z" creationid="pingfangx" creationdate="20191117T082044Z">
        <seg>非线性动画示例</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example: Change background color</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T081422Z" creationid="pingfangx" creationdate="20191103T081422Z">
        <seg>示例：更改背景色</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Examples of each chain style</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T074837Z" creationid="pingfangx" creationdate="20191103T074837Z">
        <seg>每种链样式的示例</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Except a barrier does not define its own position; instead, the barrier position moves based on the position of views contained within it.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T073344Z" creationid="pingfangx" creationdate="20191103T073344Z">
        <seg>但是，屏障并不定义其自身的位置；相反，屏障位置是基于其内包含的视图的位置移动的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Expands the view as much as possible to meet the constraints on each side.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T074249Z" creationid="pingfangx" creationdate="20191103T074249Z">
        <seg>尽可能扩展视图以满足每一侧的约束。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Expands the view only as much as needed to fit its contents, but still allows the view to be smaller than that if the constraints require it.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T074313Z" creationid="pingfangx" creationdate="20191103T074313Z">
        <seg>仅根据需要扩展视图以适合其内容，但如果约束要求，仍允许视图小于该视图。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Expressed either: in pixels relative to the normal position (such as &lt;c1&gt;"5"&lt;/c1&gt;), in percentage relative to the element height (such as &lt;c2&gt;"5%"&lt;/c2&gt;), or in percentage relative to the parent height (such as &lt;c3&gt;"5%p"&lt;/c3&gt;).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T071559Z" creationid="pingfangx" creationdate="20191117T071559Z">
        <seg>表示为：相对于正常位置的像素(例如 &lt;c1&gt;"5"&lt;/c1&gt;)、相对于元素高度的百分比(例如 &lt;c2&gt;"5%"&lt;/c2&gt;)或相对于父高度的百分比(例如 &lt;c3&gt;"5%p"&lt;/c3&gt;)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Expressed either: in pixels relative to the normal position (such as &lt;c1&gt;"5"&lt;/c1&gt;), in percentage relative to the element width (such as &lt;c2&gt;"5%"&lt;/c2&gt;), or in percentage relative to the parent width (such as &lt;c3&gt;"5%p"&lt;/c3&gt;).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T071532Z" creationid="pingfangx" creationdate="20191117T071532Z">
        <seg>表示为：相对于正常位置的像素(例如 &lt;c1&gt;"5"&lt;/c1&gt;)、相对于元素宽度的百分比(例如 &lt;c2&gt;"5%"&lt;/c2&gt;)或相对于父宽度的百分比(例如 &lt;c3&gt;"5%p"&lt;/c3&gt;)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Expressed either: in pixels relative to the object's left edge (such as &lt;c1&gt;"5"&lt;/c1&gt;), in percentage relative to the object's left edge (such as &lt;c2&gt;"5%"&lt;/c2&gt;), or in percentage relative to the parent container's left edge (such as &lt;c3&gt;"5%p"&lt;/c3&gt;).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T071734Z" creationid="pingfangx" creationdate="20191117T071734Z">
        <seg>表示为：相对于对象左边缘的像素(例如 &lt;c1&gt;"5"&lt;/c1&gt;)、相对于对象左边缘的百分比(例如 &lt;c2&gt;"5%"&lt;/c2&gt;)或相对于父容器左边缘的百分比(例如 &lt;c3&gt;"5%p"&lt;/c3&gt;)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Expressed either: in pixels relative to the object's top edge (such as &lt;c1&gt;"5"&lt;/c1&gt;), in percentage relative to the object's top edge (such as &lt;c2&gt;"5%"&lt;/c2&gt;), or in percentage relative to the parent container's top edge (such as &lt;c3&gt;"5%p"&lt;/c3&gt;).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T071748Z" creationid="pingfangx" creationdate="20191117T071748Z">
        <seg>表示为：相对于对象上边缘的像素(例如 &lt;c1&gt;"5"&lt;/c1&gt;)、相对于对象上边缘的百分比(例如 &lt;c2&gt;"5%"&lt;/c2&gt;)或相对于父容器上边缘的百分比(例如 &lt;c3&gt;"5%p"&lt;/c3&gt;)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Extend &lt;c0&gt;onDraw()&lt;/c0&gt; and &lt;c1&gt;onMeasure()&lt;/c1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064016Z" creationid="pingfangx" creationdate="20191103T064016Z">
        <seg>重写 &lt;c0&gt;onDraw()&lt;/c0&gt; 和 &lt;c1&gt;onMeasure()&lt;/c1&gt; 方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Extend an existing &lt;c0&gt;&lt;a1&gt;View&lt;/a1&gt;&lt;/c0&gt; class or subclass with your own class.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T063903Z" creationid="pingfangx" creationdate="20191103T063903Z">
        <seg>继承一个已存在的 &lt;c0&gt;&lt;a1&gt;View&lt;/a1&gt;&lt;/c0&gt; 类或你自己的类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Failure to do this will result in an exception being thrown.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064059Z" creationid="pingfangx" creationdate="20191103T064059Z">
        <seg>如果不这样做将导致抛出一个异常。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Figure 1 depicts a hypothetical object that is animated with its &lt;c0&gt;x&lt;/c0&gt; property, which represents its horizontal location on a screen.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T081643Z" creationid="pingfangx" creationdate="20191117T081643Z">
        <seg>图 1 描述了一个假设对象，该对象的 &lt;c0&gt;x&lt;/c0&gt; 属性表示其在屏幕上的水平位置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Figure 2 illustrates a hypothetical object that accelerates at the beginning of the animation, and decelerates at the end of the animation.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T082012Z" creationid="pingfangx" creationdate="20191117T082012Z">
        <seg>图 2 演示了一个假设对象，它在动画开始时加速，在动画结束时减速。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Figure 3 depicts how the main classes work with one another.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T082102Z" creationid="pingfangx" creationdate="20191117T082102Z">
        <seg>图 3 描述了主类如何相互协作。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>First, let's go over how an animation works with a simple example.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T080322Z" creationid="pingfangx" creationdate="20191117T080322Z">
        <seg>首先，我们用一个简单的例子来说明动画是如何工作的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Fling Animation</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T054436Z" creationid="pingfangx" creationdate="20191117T054436Z">
        <seg>投掷动画</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Focus</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064158Z" creationid="pingfangx" creationdate="20191103T064158Z">
        <seg>焦点</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Follow these steps to start using &lt;c0&gt;MotionLayout&lt;/c0&gt; in your project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T080606Z" creationid="pingfangx" creationdate="20191103T080606Z">
        <seg>请按照以下步骤开始在项目中使用 &lt;c0&gt;MotionLayout&lt;/c0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For a complete list of system broadcast actions, see the &lt;c0&gt;BROADCAST_ACTIONS.TXT&lt;/c0&gt; file in the Android SDK.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T051346Z" creationid="pingfangx" creationdate="20191030T051346Z">
        <seg>有关系统广播操作的完整列表，请参阅 Android SDK 中的 &lt;c0&gt;broadcast_actions.TXT&lt;/c0&gt; 文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For a more detailed look at the various elements that MotionScene supports, see the &lt;a0&gt; MotionLayout examples&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T081047Z" creationid="pingfangx" creationdate="20191103T081047Z">
        <seg>对于在该 MotionScene 支持各种元件更详细的研究，见 &lt;a0&gt; MotionLayout examples&lt;/a0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For additional information on this topic, see &lt;a0&gt; Optimize with stubs (blog post)&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T100228Z" creationid="pingfangx" creationdate="20191103T100228Z">
        <seg>有关此主题的其他信息，请参见 &lt;a0&gt; Optimize with stubs (blog post)&lt;/a0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For all the details, see &lt;a0&gt;Start an Activity with an Animation&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T060229Z" creationid="pingfangx" creationdate="20191117T060229Z">
        <seg>有关所有详细信息，请参见 &lt;a0&gt;Start an Activity with an Animation&lt;/a0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For an example, if you register within an &lt;c0&gt;&lt;a1&gt;Activity&lt;/a1&gt;&lt;/c0&gt; context, you receive broadcasts as long as the activity is not destroyed.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T054257Z" creationid="pingfangx" creationdate="20191030T053823Z">
        <seg>例如，如果你使用 &lt;c0&gt;&lt;a1&gt;Activity&lt;/a1&gt;&lt;/c0&gt; 上下文注册，只要该 Activity 未被 destroyed，你就可以接收广播。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For detailed reference information, see the &lt;c0&gt;&lt;a1&gt;View&lt;/a1&gt;&lt;/c0&gt; class.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T063843Z" creationid="pingfangx" creationdate="20191103T063843Z">
        <seg>对于详细的参考信息，见 &lt;c0&gt;&lt;a1&gt;View&lt;/a1&gt;&lt;/c0&gt; 类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For devices running Android version 5.0 (API level 21) or higher, each app runs in its own process and with its own instance of the &lt;a0&gt;Android Runtime (ART)&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T033546Z" creationid="pingfangx" creationdate="20191030T033546Z">
        <seg>对于运行 Android 5.0 版(API 级别 21)或更高版本的设备，每个应用程序都在其自己的进程中运行，并带有自己的 &lt;a0&gt;Android Runtime (ART)&lt;/a0&gt; 实例。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For each &lt;c2&gt;&lt;declare-styleable&gt;&lt;/c2&gt; resource in the res directory, the generated R.java defines both an array of attribute ids and a set of constants that define the index for each attribute in the array.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T065043Z" creationid="pingfangx" creationdate="20191103T065043Z">
        <seg>对于 res 目录中的每个 &lt;c2&gt;&lt;declare-styleable&gt;&lt;/c2&gt; 资源，生成的 R.java 定义属性 id 数组和一组常量，这些常量定义数组中每个属性的索引。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For each interpolator class, Android includes a public resource you can reference in order to apply the interpolator to an animation using the &lt;c2&gt;android:interpolator&lt;/c2&gt; attribute.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T072108Z" creationid="pingfangx" creationdate="20191117T072108Z">
        <seg>对于每个插值器类，Android 包含一个公共资源，你可以引用它，以便使用 &lt;c2&gt;android:interpolator&lt;/c2&gt; 属性将插值器应用于动画。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example you can specify &lt;c2&gt;"alpha"&lt;/c2&gt; or &lt;c3&gt;"backgroundColor"&lt;/c3&gt; for a View object.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T063120Z" creationid="pingfangx" creationdate="20191117T063120Z">
        <seg>例如，可以为视图对象指定 &lt;c2&gt;"alpha"&lt;/c2&gt; 或 &lt;c3&gt;"backgroundColor"&lt;/c3&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, &lt;a0&gt;the Android Runtime (ART)&lt;/a0&gt; relies on the Linux kernel for underlying functionalities such as threading and low-level memory management.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T033142Z" creationid="pingfangx" creationdate="20191030T033142Z">
        <seg>例如，&lt;a0&gt;Android Runtime (ART)&lt;/a0&gt; 依赖于 Linux 内核为基础的功能，诸如线程和低级别的存储器管理。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, &lt;c1&gt;backgroundColor&lt;/c1&gt; is supported, since our view has underlying &lt;c2&gt;getBackgroundColor()&lt;/c2&gt; and &lt;c3&gt;setBackgroundColor()&lt;/c3&gt; methods.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T081336Z" creationid="pingfangx" creationdate="20191103T081336Z">
        <seg>例如，支持 &lt;c1&gt;backgroundColor&lt;/c1&gt;，因为我们的视图有底层的 &lt;c2&gt;getBackgroundColor()&lt;/c2&gt; 和 &lt;c3&gt;setBackgroundColor()&lt;/c3&gt; 方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, &lt;c2&gt;motion:dragDirection="dragRight"&lt;/c2&gt; means that progress increases as you drag to the right.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T080953Z" creationid="pingfangx" creationdate="20191103T080953Z">
        <seg>例如，&lt;c2&gt;motion:dragDirection="dragRight"&lt;/c2&gt; 表示向右拖动时进度会增加。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, a Combo Box can be thought of as a combination of a single line EditText field and an adjacent button with an attached PopupList.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064219Z" creationid="pingfangx" creationdate="20191103T064219Z">
        <seg>比如，Combo Box 可被认为是一个单行的 EditText 和一个与 PopupList 相邻的按钮组成而成。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, a value of &lt;c2&gt;"1"&lt;/c2&gt; means that the animation is repeated once after the initial run of the animation, so the animation plays a total of two times.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T063511Z" creationid="pingfangx" creationdate="20191117T063511Z">
        <seg>例如，值 &lt;c2&gt;"1"&lt;/c2&gt; 表示动画在初始运行后重复一次，因此动画总共播放两次。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, a yes/no button panel, or custom progress bar with description text.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T094421Z" creationid="pingfangx" creationdate="20191103T094421Z">
        <seg>例如，是/否按钮面板或带有说明文本的自定义进度条。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, animating a play button transforming into a pause button when tapped is a nice way to communicate to the user that the two actions are related, and that pressing one makes the other visible.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T053508Z" creationid="pingfangx" creationdate="20191117T053508Z">
        <seg>例如，点击时将播放按钮动画转换成暂停按钮，是一个很好的方式来告知用户，这两个行动是相关的，按下一个，使另一个可见。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, assume your receiving app has a manifest-declared receiver as shown below:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T062928Z" creationid="pingfangx" creationdate="20191030T062928Z">
        <seg>例如，假设你的接收应用程序有一个清单声明的接收器，如下所示：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, figure 1 shows a layout that's used as an item in a &lt;c0&gt;&lt;a1&gt;ListView&lt;/a1&gt;&lt;/c0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T092136Z" creationid="pingfangx" creationdate="20191103T092136Z">
        <seg>例如，图 1 显示了一个在 &lt;c0&gt;&lt;a1&gt;ListView&lt;/a1&gt;&lt;/c0&gt; 中用作项的布局。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, figure 10 shows B with a 24dp offset alignment.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T072602Z" creationid="pingfangx" creationdate="20191103T072602Z">
        <seg>例如，图 7 展示了 B 的对齐具有 24dp 偏移量。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, figure 13 shows view C is constrained to the right side of a barrier.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T073410Z" creationid="pingfangx" creationdate="20191103T073410Z">
        <seg>例如，图 13 显示视图 C 被限制在屏障的右侧。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, figure 2 shows the layout for the list item illustrated by figure 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T092254Z" creationid="pingfangx" creationdate="20191103T092254Z">
        <seg>例如，图 2 显示了图 1 所示的列表项的布局。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, here's a layout that defines a title bar to be included in each activity (&lt;c0&gt;titlebar.xml&lt;/c0&gt;):</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T094522Z" creationid="pingfangx" creationdate="20191103T094522Z">
        <seg>例如，这里有一个布局，它定义了要包含在每个 activity 中的标题栏(&lt;c0&gt;titlebar.xml&lt;/c0&gt;)：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, here's a layout that includes the title bar from above:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T094749Z" creationid="pingfangx" creationdate="20191103T094749Z">
        <seg>例如，下面是一个布局，其中包括上面的标题栏：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, here's how to use the attributes defined for &lt;c2&gt;PieChart&lt;/c2&gt;:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T065005Z" creationid="pingfangx" creationdate="20191103T065005Z">
        <seg>例如，以下是如何使用为 &lt;c2&gt;PieChart&lt;/c2&gt; 定义的属性：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, here's the code that draws &lt;c0&gt;PieChart&lt;/c0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T065654Z" creationid="pingfangx" creationdate="20191103T065654Z">
        <seg>例如，这是绘制 &lt;c0&gt;PieChart&lt;/c0&gt; 的代码。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, if process A has bound to a &lt;c0&gt;&lt;a1&gt;Service&lt;/a1&gt;&lt;/c0&gt; with the &lt;c2&gt;&lt;a3&gt;Context.BIND_AUTO_CREATE&lt;/a3&gt;&lt;/c2&gt; flag or is using a &lt;c4&gt;&lt;a5&gt;ContentProvider&lt;/a5&gt;&lt;/c4&gt; in process B, then process B's classification will always be at least as important as process A's.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191029T080622Z" creationid="pingfangx" creationdate="20191029T080455Z">
        <seg>例如，如果过程 A 已绑定到进程 B 中 &lt;c0&gt;&lt;a1&gt;Service&lt;/a1&gt;&lt;/c0&gt; 用 &lt;c2&gt;&lt;a3&gt;Context.BIND_AUTO_CREATE&lt;/a3&gt;&lt;/c2&gt; 标志，或使用进程 B 中的 &lt;c4&gt;&lt;a5&gt;ContentProvider&lt;/a5&gt;&lt;/c4&gt;，则进程 B 的分类将总是至少与进程 A 的一样重要。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, if these values are 0, 0 (top-left corner), all growth will be down and to the right.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T071228Z" creationid="pingfangx" creationdate="20191117T071228Z">
        <seg>例如，如果这些值是 0,0(左上角)，所有的增长将是向下和向右。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, if you set both sides to "match constraints", click &lt;b0&gt;Toggle Aspect Ratio Constraint&lt;/b0&gt; twice to set the width be a ratio of the height.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T074544Z" creationid="pingfangx" creationdate="20191103T074544Z">
        <seg>例如，如果你将两边设置为 "match constraints"，点击 click &lt;b0&gt;Toggle Aspect Ratio Constraint&lt;/b0&gt; 两次来将宽度设置为高度的比率。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, if your app would like to deliver an SMS message, you don't need to build that functionality yourself—you can instead invoke whichever SMS app is already installed to deliver a message to the recipient you specify.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T050124Z" creationid="pingfangx" creationdate="20191030T050124Z">
        <seg>例如，如果你的应用程序希望发送短信，则不需要自己构建该功能，你可以调用已安装的任何短消息应用程序来将消息发送给指定的收件人。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, if your main layout is a vertical &lt;c1&gt;&lt;a2&gt;LinearLayout&lt;/a2&gt;&lt;/c1&gt; in which two consecutive views can be re-used in multiple layouts, then the re-usable layout in which you place the two views requires its own root view.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T095055Z" creationid="pingfangx" creationdate="20191103T095055Z">
        <seg>例如，如果主布局是一个垂直的 &lt;c1&gt;&lt;a2&gt;LinearLayout&lt;/a2&gt;&lt;/c1&gt;，其中两个连续的视图可以在多个布局中重用，则放置两个视图的可重用布局需要自己的根视图。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, images should not immediately pop out of existence and reappear somewhere else, because objects in the real world don't do that.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T065924Z" creationid="pingfangx" creationdate="20191103T065924Z">
        <seg>例如，图像不应该立即弹出并重新出现在其他地方，因为现实世界中的对象不会这样做。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, in Figure 1, the elapsed fraction at t = 10 ms would be .25 because the total duration is t = 40 ms.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T091244Z" creationid="pingfangx" creationdate="20191117T091244Z">
        <seg>例如，在图 1 中，由于总持续时间为 t=40 ms，t=10 ms 时的经过的分数将为 .25。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, in Figure 2, because the animation slowly accelerates, the interpolated fraction, about .15, is less than the elapsed fraction, .25, at t = 10 ms.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T091510Z" creationid="pingfangx" creationdate="20191117T091510Z">
        <seg>例如，在图 2 中，由于动画缓慢加速，在 t=10ms 时，插值分数大约为 .15，小于经过分数 .25。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, in Figure 2, the &lt;c6&gt;&lt;a7&gt;TimeInterpolator&lt;/a7&gt;&lt;/c6&gt; used would be &lt;c8&gt;&lt;a9&gt;AccelerateDecelerateInterpolator&lt;/a9&gt;&lt;/c8&gt; and the &lt;c10&gt;&lt;a11&gt;TypeEvaluator&lt;/a11&gt;&lt;/c10&gt; would be &lt;c12&gt;&lt;a13&gt;IntEvaluator&lt;/a13&gt;&lt;/c12&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T091044Z" creationid="pingfangx" creationdate="20191117T091044Z">
        <seg>例如，在图 2 中，所使用的 &lt;c6&gt;&lt;a7&gt;TimeInterpolator&lt;/a7&gt;&lt;/c6&gt; 将是 &lt;c8&gt;&lt;a9&gt;AccelerateDecelerateInterpolator&lt;/a9&gt;&lt;/c8&gt;，而 &lt;c10&gt;&lt;a11&gt;TypeEvaluator&lt;/a11&gt;&lt;/c10&gt; 将是 &lt;c12&gt;&lt;a13&gt;IntEvaluator&lt;/a13&gt;&lt;/c12&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, in Figure 2, the interpolated fraction was .15 at t = 10 ms, so the value for the property at that time would be .15 × (40 - 0), or 6.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T091606Z" creationid="pingfangx" creationdate="20191117T091606Z">
        <seg>例如，在图 2 中，t=10 ms 时，插值分数为 .15，因此此时属性的值为 .15×(40-0)或 6。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, the &lt;c0&gt;&lt;a1&gt;CONNECTIVITY_ACTION&lt;/a1&gt;&lt;/c0&gt; broadcast is delivered only to context-registered receivers.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T063923Z" creationid="pingfangx" creationdate="20191030T063923Z">
        <seg>例如，&lt;c0&gt;&lt;a1&gt;CONNECTIVITY_ACTION&lt;/a1&gt;&lt;/c0&gt; 广播仅传送给上下文注册的接收器。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, the Android system sends broadcasts when various system events occur, such as when the system boots up or the device starts charging.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T050458Z" creationid="pingfangx" creationdate="20191030T050458Z">
        <seg>例如，当各种系统事件发生时，比如当系统启动或设备开始充电时，Android 系统发送广播。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, the airplane mode intent includes a boolean extra that indicates whether or not Airplane Mode is on.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T051248Z" creationid="pingfangx" creationdate="20191030T051248Z">
        <seg>例如，飞行模式 intent 包含一个布尔 extra，指示飞行模式是否打开。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, the following code sends a broadcast:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T062023Z" creationid="pingfangx" creationdate="20191030T062023Z">
        <seg>例如，以下代码发送广播：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, the value of the constant &lt;c1&gt;&lt;a2&gt;ACTION_AIRPLANE_MODE_CHANGED&lt;/a2&gt;&lt;/c1&gt; is &lt;c3&gt;android.intent.action.AIRPLANE_MODE&lt;/c3&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T051538Z" creationid="pingfangx" creationdate="20191030T051538Z">
        <seg>例如，常量 &lt;c1&gt;&lt;a2&gt;ACTION_AIRPLANE_MODE_CHANGED&lt;/a2&gt;&lt;/c1&gt; 的值为 &lt;c3&gt;android.intent.action.AIRPLANE_MODE&lt;/c3&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, they should maintain momentum when their target changes, and make smooth transitions during any changes.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T054343Z" creationid="pingfangx" creationdate="20191117T054343Z">
        <seg>例如，当目标发生变化时，它们应该保持动力，并在任何变化期间平滑过渡。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, using nested instances of &lt;c0&gt;&lt;a1&gt;LinearLayout&lt;/a1&gt;&lt;/c0&gt; can lead to an excessively deep view hierarchy.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T091849Z" creationid="pingfangx" creationdate="20191103T091849Z">
        <seg>例如，使用 &lt;c0&gt;&lt;a1&gt;LinearLayout&lt;/a1&gt;&lt;/c0&gt; 的嵌套实例可能会导致视图层次结构过深。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, when a process executes a receiver (that is, currently running the code in its &lt;c2&gt;&lt;a3&gt;onReceive()&lt;/a3&gt;&lt;/c2&gt; method), it is considered to be a foreground process.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T054657Z" creationid="pingfangx" creationdate="20191030T054657Z">
        <seg>例如，当一个进程执行一个接收器(即，当前正在其 &lt;c2&gt;&lt;a3&gt;onReceive()&lt;/a3&gt;&lt;/c2&gt; 方法中运行代码)时，它被认为是一个前台进程。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, when the user taps an item to see more information, you can replace the layout with the item details, applying a transition like the one shown in figure 5.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T055406Z" creationid="pingfangx" creationdate="20191117T055406Z">
        <seg>例如，当用户点击一个项目以查看更多信息时，你可以用项目详细信息替换布局，应用如图 5 所示的过渡。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, when the user taps an item to see more information, you can transition into a new activity with an animation that seamlessly grows that item to fill the screen, like the animation shown in figure 5.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T060035Z" creationid="pingfangx" creationdate="20191117T060035Z">
        <seg>例如，当用户点击一个项目以查看更多信息时，你可以切换到一个新的 activity，其中的动画可以无缝地扩展该项目以填充屏幕，如图 5 所示。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, when users fling a UI object, they should sense friction at the beginning that delays the motion, and then at the end sense momentum that carries the motion beyond the fling.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T065931Z" creationid="pingfangx" creationdate="20191103T065931Z">
        <seg>例如，当用户投掷 UI 对象时，他们应该在开始时感知延迟运动的摩擦，然后在结束时感知带动运动超出投掷的动量。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, when you change the position properties, the view moves across the screen, or when you change the alpha property, the view fades in or out.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T053834Z" creationid="pingfangx" creationdate="20191117T053834Z">
        <seg>例如，当你更改位置属性时，视图将在屏幕上移动，或者当你更改 alpha 属性时，视图将淡入或淡出。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, you can access &lt;a0&gt;OpenGL ES&lt;/a0&gt; through the Android framework’s &lt;a1&gt;Java OpenGL API&lt;/a1&gt; to add support for drawing and manipulating 2D and 3D graphics in your app.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T041806Z" creationid="pingfangx" creationdate="20191030T041734Z">
        <seg>例如，你可以通过 Android 框架的 &lt;a1&gt;Java OpenGL API&lt;/a1&gt; 访问 &lt;a0&gt;OpenGL ES&lt;/a0&gt; 来添加对在应用程序中绘制和操作 2D 和 3D 图形的支持。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, you can adjust the rate of acceleration for the &lt;c0&gt;&lt;a1&gt;AnticipateInterpolator&lt;/a1&gt;&lt;/c0&gt;, or adjust the number of cycles for the &lt;c2&gt;&lt;a3&gt;CycleInterpolator&lt;/a3&gt;&lt;/c2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T072244Z" creationid="pingfangx" creationdate="20191117T072244Z">
        <seg>例如，你可以调整 &lt;c0&gt;&lt;a1&gt;AnticipateInterpolator&lt;/a1&gt;&lt;/c0&gt; 的加速度，或调整 &lt;c2&gt;&lt;a3&gt;CycleInterpolator&lt;/a3&gt;&lt;/c2&gt; 的循环数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, you can specify animations to happen linearly across the whole animation, meaning the animation moves evenly the entire time, or you can specify animations to use non-linear time, for example, accelerating at the beginning and decelerating at the end of the animation.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T093902Z" creationid="pingfangx" creationdate="20191117T093902Z">
        <seg>例如，可以指定动画在整个动画中线性发生，这意味着动画在整个时间内均匀移动，也可以指定动画使用非线性时间，例如，在动画开始时加速，在动画结束时减速。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064543Z" creationid="pingfangx" creationdate="20191103T064543Z">
        <seg>例如：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For further information related to this lesson, see &lt;a0&gt;XML Layouts&lt;/a0&gt; and &lt;a1&gt; Layout Resource&lt;/a1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T093458Z" creationid="pingfangx" creationdate="20191103T093458Z">
        <seg>有关本课的更多信息，请参见 &lt;a0&gt;XML Layouts&lt;/a0&gt; 和 &lt;a1&gt; Layout Resource&lt;/a1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For further information related to this topic, see &lt;a0&gt;Layout resources&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T095234Z" creationid="pingfangx" creationdate="20191103T095234Z">
        <seg>有关此主题的更多信息，请参见 &lt;a0&gt;Layout resources&lt;/a0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For information on permissions and security in general, see the &lt;a4&gt;System Permissions&lt;/a4&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T062159Z" creationid="pingfangx" creationdate="20191030T062159Z">
        <seg>有关权限和一般安全性的信息，请参阅 &lt;a4&gt;System Permissions&lt;/a4&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For instance, &lt;c0&gt;&lt;a1&gt;Canvas&lt;/a1&gt;&lt;/c0&gt; provides a method to draw a line, while &lt;c2&gt;&lt;a3&gt;Paint&lt;/a3&gt;&lt;/c2&gt; provides methods to define that line's color.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T065518Z" creationid="pingfangx" creationdate="20191103T065518Z">
        <seg>例如，&lt;c0&gt;&lt;a1&gt;Canvas&lt;/a1&gt;&lt;/c0&gt; 提供了绘制线条的方法，而 &lt;c2&gt;&lt;a3&gt;Paint&lt;/a3&gt;&lt;/c2&gt; 提供了定义该线条颜色的方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For instance, &lt;c0&gt;PieChart&lt;/c0&gt; exposes a custom event called &lt;c1&gt;OnCurrentItemChanged&lt;/c1&gt; to notify listeners that the user has rotated the pie chart to focus on a new pie slice.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T065108Z" creationid="pingfangx" creationdate="20191103T065108Z">
        <seg>例如，&lt;c0&gt;PieChart&lt;/c0&gt; 公开一个名为 &lt;c1&gt;OnCurrentItemChanged&lt;/c1&gt; 的自定义事件，以通知监听器用户已旋转饼图聚焦到新的饼图切片。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For instance, if you animated a button to move across the screen, the button draws correctly, but the actual location where you can click the button does not change, so you have to implement your own logic to handle this.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T091838Z" creationid="pingfangx" creationdate="20191117T091838Z">
        <seg>例如，如果设置按钮的动画以在屏幕上移动，则该按钮会正确绘制，但单击按钮的实际位置不会更改，因此必须实现自己的逻辑来处理此问题。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For instance, the &lt;c0&gt;PieChart&lt;/c0&gt; class has an inner class called &lt;c1&gt;PieView&lt;/c1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T065022Z" creationid="pingfangx" creationdate="20191103T065022Z">
        <seg>例如，&lt;c0&gt;PieChart&lt;/c0&gt; 类有一个名为 &lt;c1&gt;PieView&lt;/c1&gt; 的内部类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For instance, this code creates a class that extends &lt;c8&gt;&lt;a9&gt;GestureDetector.SimpleOnGestureListener&lt;/a9&gt;&lt;/c8&gt; and overrides &lt;c10&gt;&lt;a11&gt;onDown(MotionEvent)&lt;/a11&gt;&lt;/c10&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T070027Z" creationid="pingfangx" creationdate="20191103T070027Z">
        <seg>例如，此代码创建一个继承 &lt;c8&gt;&lt;a9&gt;GestureDetector.SimpleOnGestureListener&lt;/a9&gt;&lt;/c8&gt; 的类，并重写 &lt;c10&gt;&lt;a11&gt;onDown(MotionEvent)&lt;/a11&gt;&lt;/c10&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For manifest-declared receivers, you can set the &lt;a0&gt;android:exported&lt;/a0&gt; attribute to "false" in the manifest.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T064142Z" creationid="pingfangx" creationdate="20191030T064142Z">
        <seg>对于清单声明的接收器，可以在清单中将 &lt;a0&gt;android:exported&lt;/a0&gt; 属性设置为“false”。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For more attributes supported by &lt;c0&gt;&lt;alpha&gt;&lt;/c0&gt;, see the &lt;c1&gt;&lt;a2&gt;Animation&lt;/a2&gt;&lt;/c1&gt; class reference (of which, all XML attributes are inherrited by this element).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T071148Z" creationid="pingfangx" creationdate="20191117T071148Z">
        <seg>有关 &lt;c0&gt;&lt;alpha&gt;&lt;/c0&gt; 支持的更多属性，请参见 &lt;c1&gt;&lt;a2&gt;Animation&lt;/a2&gt;&lt;/c1&gt; 类引用(其中，所有 XML 属性都由该元素继承)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For more attributes supported by &lt;c0&gt;&lt;rotate&gt;&lt;/c0&gt;, see the &lt;c1&gt;&lt;a2&gt;Animation&lt;/a2&gt;&lt;/c1&gt; class reference (of which, all XML attributes are inherrited by this element).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T071751Z" creationid="pingfangx" creationdate="20191117T071751Z">
        <seg>有关 &lt;c0&gt;&lt;rotate&gt;&lt;/c0&gt; 支持的更多属性，请参见 &lt;c1&gt;&lt;a2&gt;Animation&lt;/a2&gt;&lt;/c1&gt; 类引用(其中，所有 XML 属性都由该元素继承)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For more attributes supported by &lt;c0&gt;&lt;scale&gt;&lt;/c0&gt;, see the &lt;c1&gt;&lt;a2&gt;Animation&lt;/a2&gt;&lt;/c1&gt; class reference (of which, all XML attributes are inherrited by this element).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T071346Z" creationid="pingfangx" creationdate="20191117T071346Z">
        <seg>有关 &lt;c0&gt;&lt;scale&gt;&lt;/c0&gt; 支持的更多属性，请参见 &lt;c1&gt;&lt;a2&gt;Animation&lt;/a2&gt;&lt;/c1&gt; 类引用(其中，所有 XML 属性都由该元素继承)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For more attributes supported by &lt;c0&gt;&lt;translate&gt;&lt;/c0&gt;, see the &lt;c1&gt;&lt;a2&gt;Animation&lt;/a2&gt;&lt;/c1&gt; class reference (of which, all XML attributes are inherrited by this element).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T071615Z" creationid="pingfangx" creationdate="20191117T071615Z">
        <seg>有关 &lt;c0&gt;&lt;translate&gt;&lt;/c0&gt; 支持的更多属性，请参见 &lt;c1&gt;&lt;a2&gt;Animation&lt;/a2&gt;&lt;/c1&gt; 类引用(其中，所有 XML 属性都由该元素继承)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For more examples, see &lt;a6&gt;Common Layout Objects&lt;/a6&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T063753Z" creationid="pingfangx" creationdate="20191103T063753Z">
        <seg>更多实例，请参见 &lt;a6&gt;Common Layout Objects&lt;/a6&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For more information about double taxation and how to prevent it, see &lt;a1&gt; Performance and View Hierarchies&lt;/a1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T092734Z" creationid="pingfangx" creationdate="20191103T092734Z">
        <seg>有关双重征税和如何防止双重征税的详细信息，请参见 &lt;a1&gt; Performance and View Hierarchies&lt;/a1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For more information about how to read intents and get the action string from an intent, see &lt;a0&gt;Intents and Intent Filters&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T051327Z" creationid="pingfangx" creationdate="20191030T051327Z">
        <seg>有关如何读取 intent 并从中获取 action 字符串的详细信息，请参阅 &lt;a0&gt;intents and intent Filters&lt;/a0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For more information on &lt;c0&gt;MotionLayout&lt;/c0&gt;, see the following links:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T081653Z" creationid="pingfangx" creationdate="20191103T081653Z">
        <seg>有关 &lt;c0&gt;MotionLayout&lt;/c0&gt; 的详细信息，请参阅下面的链接：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For more information on creating accessible views, see &lt;a0&gt; Making Applications Accessible&lt;/a0&gt; in the Android Developers Guide.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T065231Z" creationid="pingfangx" creationdate="20191103T065231Z">
        <seg>有关创建无障碍 view 的更多信息，请参阅 Android 开发者指南中的 &lt;a0&gt; Making Applications Accessible&lt;/a0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For more information on designing your app with motion, see the Material Design section on &lt;a1&gt;Understanding motion&lt;/a1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T080559Z" creationid="pingfangx" creationdate="20191103T080559Z">
        <seg>对于与运动设计你的应用程序的更多信息，请参阅 &lt;a1&gt;Understanding motion&lt;/a1&gt; 材质设计部分。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For more information on the XML syntax, available tags and attributes, see &lt;a0&gt;Animation Resources&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T075606Z" creationid="pingfangx" creationdate="20191117T075606Z">
        <seg>有关 XML 语法、可用标签和属性的更多信息，请参见 &lt;a0&gt;Animation Resources&lt;/a0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For more information, read &lt;a0&gt;Animate Between Layouts Using a Transition&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T055741Z" creationid="pingfangx" creationdate="20191117T055741Z">
        <seg>有关详细信息，请阅读 &lt;a0&gt;Animate Between Layouts Using a Transition&lt;/a0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For more information, read &lt;a0&gt;Animate Drawable Graphics&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T053518Z" creationid="pingfangx" creationdate="20191117T053518Z">
        <seg>有关详细信息，请阅读 &lt;a0&gt;Animate Drawable Graphics&lt;/a0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For more information, see &lt;a0&gt;Auto Animate Layout Updates&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T053901Z" creationid="pingfangx" creationdate="20191117T053901Z">
        <seg>有关详细信息，请参见 &lt;a0&gt;Auto Animate Layout Updates&lt;/a0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For more information, see &lt;a2&gt; Profile GPU rendering walkthrough&lt;/a2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T094312Z" creationid="pingfangx" creationdate="20191117T094312Z">
        <seg>有关详细信息，请参见 &lt;a2&gt; Profile GPU rendering walkthrough&lt;/a2&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For more information, see &lt;a2&gt;Intelligent Job Scheduling&lt;/a2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T064645Z" creationid="pingfangx" creationdate="20191030T064645Z">
        <seg>有关详细信息，请参见 &lt;a2&gt;Intelligent Job Scheduling&lt;/a2&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For more information, see &lt;a3&gt;Effect on process state&lt;/a3&gt; To perform long running work, we recommend:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T064433Z" creationid="pingfangx" creationdate="20191030T064433Z">
        <seg>有关详细信息，请参见 &lt;a3&gt;Effect on process state&lt;/a3&gt; 要执行长时间运行的工作，我们建议：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For more information, see &lt;a7&gt;Processes and Application Life Cycle&lt;/a7&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T055100Z" creationid="pingfangx" creationdate="20191030T055100Z">
        <seg>有关详细信息，请参见 &lt;a7&gt;Processes and Application Life Cycle&lt;/a7&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For more information, see the API reference for &lt;c0&gt;&lt;a1&gt;AnimatedVectorDrawable&lt;/a1&gt;&lt;/c0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T114410Z" creationid="pingfangx" creationdate="20191117T114410Z">
        <seg>有关详细信息，请参阅 &lt;c0&gt;&lt;a1&gt;AnimatedVectorDrawable&lt;/a1&gt;&lt;/c0&gt; 的 API 参考。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For the velocity value, you can use the value computed for you by &lt;c2&gt;&lt;a3&gt;GestureDetector&lt;/a3&gt;&lt;/c2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T070200Z" creationid="pingfangx" creationdate="20191103T070200Z">
        <seg>对于速度值，你可以使用 &lt;c2&gt;&lt;a3&gt;GestureDetector&lt;/a3&gt;&lt;/c2&gt; 为你计算的值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For this reason, using resource intensive animations can negatively impact the performance of your app.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T094218Z" creationid="pingfangx" creationdate="20191117T094218Z">
        <seg>因此，使用资源密集型动画可能会对应用程序的性能产生负面影响。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For this reason, you should not start long running background threads from a broadcast receiver.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T054926Z" creationid="pingfangx" creationdate="20191030T054926Z">
        <seg>因此，不应该从广播接收器开始长时间运行后台线程。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For this sample, overriding the &lt;c0&gt;onDraw()&lt;/c0&gt; method allows us to paint the blue lines on the &lt;c1&gt;EditText&lt;/c1&gt; view canvas (the canvas is passed into the overridden &lt;c2&gt;onDraw()&lt;/c2&gt; method).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064516Z" creationid="pingfangx" creationdate="20191103T064516Z">
        <seg>对于此示例，重写 &lt;c0&gt;onDraw()&lt;/c0&gt; 方法允许我们在 &lt;c1&gt;EditText&lt;/c1&gt; 视图画布上绘制蓝线（画布将传递到重写的 &lt;c2&gt;onDraw()&lt;/c2&gt; 方法）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Forgetting these method calls can cause hard-to-find bugs.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T065105Z" creationid="pingfangx" creationdate="20191103T065105Z">
        <seg>忘记这些方法调用可能会导致难以发现的错误。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Fortunately, Android provides helper classes to simulate this and other behaviors.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T070122Z" creationid="pingfangx" creationdate="20191103T070122Z">
        <seg>幸运的是，Android 提供了帮助类来模拟这个和其他行为。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Fortunately, you can easily create components that look and behave in any way you like, limited perhaps only by your imagination, the size of the screen, and the available processing power (remember that ultimately your application might have to run on something with significantly less power than your desktop workstation).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T063951Z" creationid="pingfangx" creationdate="20191103T063951Z">
        <seg>幸运的是，你可以很轻松的创建一个任意样式、任意行为的组件，只要你喜欢。所受的限制可能仅仅是你的想象力、屏幕的大小以及可用的处理能力(记住最终你的应用要运行在一个很多性能都比你的电脑要差的系统上)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Frame animation</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T062402Z" creationid="pingfangx" creationdate="20191117T062402Z">
        <seg>帧动画</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Frame refresh delay: You can specify how often to refresh frames of your animation.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T080239Z" creationid="pingfangx" creationdate="20191117T080239Z">
        <seg>帧刷新延迟：可以指定刷新动画帧的频率。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Fully Customized Components</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T063932Z" creationid="pingfangx" creationdate="20191103T063932Z">
        <seg>完整的自定义组件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Fully customized components can be used to create graphical components that appear however you wish.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T063934Z" creationid="pingfangx" creationdate="20191103T063934Z">
        <seg>完整的自定义组件可以用来创建一个图形组件，它可以按你想的任意呈现。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Furthermore, nesting several instances of &lt;c2&gt;&lt;a3&gt;LinearLayout&lt;/a3&gt;&lt;/c2&gt; that use the &lt;c4&gt;layout_weight&lt;/c4&gt; parameter can be especially expensive as each child needs to be measured twice.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T091932Z" creationid="pingfangx" creationdate="20191103T091932Z">
        <seg>此外，嵌套使用 &lt;c4&gt;layout_weight&lt;/c4&gt; 参数的 &lt;c2&gt;&lt;a3&gt;LinearLayout&lt;/a3&gt;&lt;/c2&gt; 的多个实例可能特别昂贵，因为每个子对象都需要测量两次。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Furthermore, this is not a default constructor, but a parameterized one.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064509Z" creationid="pingfangx" creationdate="20191103T064509Z">
        <seg>此外，这不是一个默认的，而是一个带着参数的构造方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Generally speaking, broadcasts can be used as a messaging system across apps and outside of the normal user flow.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T050607Z" creationid="pingfangx" creationdate="20191030T050607Z">
        <seg>一般来说，广播可以用作跨应用程序和正常用户流之外的消息传递系统。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Generally, at this point, the device has reached a memory paging state, so this action is required in order to keep the user interface responsive.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191029T074847Z" creationid="pingfangx" creationdate="20191029T074847Z">
        <seg>通常，此时设备已达到内存分页状态，因此需要执行此操作以保持用户界面响应。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gestures are a powerful way to control touchscreen devices, but they can be counterintuitive and difficult to remember unless they produce physically plausible results.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T070114Z" creationid="pingfangx" creationdate="20191103T070114Z">
        <seg>手势是控制触摸屏设备的有效方式，但它们可能违反直觉并且难以记住，除非它们产生物理上可信的结果。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Getting started</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T080602Z" creationid="pingfangx" creationdate="20191103T080602Z">
        <seg>入门</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Handle Input Gestures</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T065936Z" creationid="pingfangx" creationdate="20191103T065936Z">
        <seg>处理输入手势</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Handle Layout Events</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T065539Z" creationid="pingfangx" creationdate="20191103T065539Z">
        <seg>处理布局事件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Hardware Abstraction Layer (HAL)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T030147Z" creationid="pingfangx" creationdate="20191030T030147Z">
        <seg>硬件抽象层(HAL)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here are a few other things to consider when using chains:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T075020Z" creationid="pingfangx" creationdate="20191103T075020Z">
        <seg>在使用链条时，还需要考虑以下几点：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here are some security considerations and best practices for sending and receiving broadcasts:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T063043Z" creationid="pingfangx" creationdate="20191030T063043Z">
        <seg>以下是发送和接收广播时的一些安全注意事项和最佳做法：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here are some things to note in this file:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064453Z" creationid="pingfangx" creationdate="20191103T064453Z">
        <seg>以下是此文件中需要注意的事项：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here is a high level overview of what you need to know to get started in creating your own View components:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T063859Z" creationid="pingfangx" creationdate="20191103T063859Z">
        <seg>这里是有关如何开始创建自己的 View 组件的高度概括：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here is the resulting &lt;c0&gt;&lt;a1&gt;AnimatedVectorDrawable&lt;/a1&gt;&lt;/c0&gt;:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T114401Z" creationid="pingfangx" creationdate="20191117T114401Z">
        <seg>下面是结果 &lt;c0&gt;&lt;a1&gt;AnimatedVectorDrawable&lt;/a1&gt;&lt;/c0&gt;：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here's a full example &lt;c0&gt;MotionLayout&lt;/c0&gt; file that can be used to create the motion in figure 1:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T080702Z" creationid="pingfangx" creationdate="20191103T080702Z">
        <seg>下面是一个完整的 &lt;c0&gt;MotionLayout&lt;/c0&gt; 示例，可以用来创建图 1 中的运动：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here's a snippet from &lt;c0&gt;PieChart.onSizeChanged()&lt;/c0&gt; that shows how to do this:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T065603Z" creationid="pingfangx" creationdate="20191103T065603Z">
        <seg>以下是来自 &lt;c0&gt;PieChart.onSizeChanged()&lt;/c0&gt; 的片段，其中显示了如何执行此操作：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here's a summary of some of the other standard methods that the framework calls on views:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064101Z" creationid="pingfangx" creationdate="20191103T064101Z">
        <seg>这里有一些框架在 view 中调用的标准的方法的摘要：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here's an example Activity, in which the animation is added to an &lt;c5&gt;&lt;a6&gt;ImageView&lt;/a6&gt;&lt;/c5&gt; and then animated when the screen is touched:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T102943Z" creationid="pingfangx" creationdate="20191117T102943Z">
        <seg>下面是一个例子 Activity，其中，所述动画被添加到 &lt;c5&gt;&lt;a6&gt;ImageView&lt;/a6&gt;&lt;/c5&gt; 然后当屏幕被触摸进行动画：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here's an example MotionScene file that describes the basic horizontal motion in figure 1:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T080845Z" creationid="pingfangx" creationdate="20191103T080845Z">
        <seg>下面是一个示例 MotionScene 文件，它描述了图 1 中的基本水平运动：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here's an example XML file for a Drawable animation:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T102641Z" creationid="pingfangx" creationdate="20191117T102641Z">
        <seg>以下是 Drawable 动画的 XML 文件示例：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here's an example implementation of &lt;c0&gt;&lt;a1&gt;onMeasure()&lt;/a1&gt;&lt;/c0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T065609Z" creationid="pingfangx" creationdate="20191103T065609Z">
        <seg>这是 &lt;c0&gt;&lt;a1&gt;onMeasure()&lt;/a1&gt;&lt;/c0&gt; 的示例实现。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here's an example of an &lt;c2&gt;attrs.xml&lt;/c2&gt; file:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064951Z" creationid="pingfangx" creationdate="20191103T064951Z">
        <seg>以下是 &lt;c2&gt;attrs.xml&lt;/c2&gt; 文件的示例：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here's how the &lt;c5&gt;PieChart&lt;/c5&gt; class reads its attributes:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T065046Z" creationid="pingfangx" creationdate="20191103T065046Z">
        <seg>以下是 &lt;c5&gt;PieChart&lt;/c5&gt; 类如何读取其属性：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here's how you can apply one of these with the &lt;c0&gt;android:interpolator&lt;/c0&gt; attribute:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T072150Z" creationid="pingfangx" creationdate="20191117T072150Z">
        <seg>这里是你如何运用这些与一个 &lt;c0&gt;android:interpolator&lt;/c0&gt; 属性：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here's the layout file:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T094753Z" creationid="pingfangx" creationdate="20191103T094753Z">
        <seg>这是布局文件：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Hierarchy Viewer works by allowing you to select running processes on a connected device or emulator, then display the layout tree.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T092048Z" creationid="pingfangx" creationdate="20191103T092048Z">
        <seg>层次结构查看器允许你选择连接的设备或模拟器上正在运行的进程，然后显示布局树。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Horizontally, the endpoints are at the far left and right sides of the screen.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T081043Z" creationid="pingfangx" creationdate="20191103T081030Z">
        <seg>在水平方向上，端点位于屏幕的最左侧和最右侧。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>How an animation behaves when it reaches the end of the animation.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T063525Z" creationid="pingfangx" creationdate="20191117T063525Z">
        <seg>动画到达动画结尾时的行为方式。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>How animations are calculated</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T082108Z" creationid="pingfangx" creationdate="20191117T082108Z">
        <seg>动画是如何计算</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>How many times to repeat an animation.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T063437Z" creationid="pingfangx" creationdate="20191117T063437Z">
        <seg>一个动画要重复多少次。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>How property animation differs from view animation</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T091611Z" creationid="pingfangx" creationdate="20191117T091611Z">
        <seg>属性动画与视图动画的区别</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>How property animation works</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T080314Z" creationid="pingfangx" creationdate="20191117T080314Z">
        <seg>属性动画的工作原理</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>However, clipping &lt;e1&gt;will occur&lt;/e1&gt; if the animation exceeds the bounds of the parent View.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T075710Z" creationid="pingfangx" creationdate="20191117T075705Z">
        <seg>但是，如果动画超出父视图的边界，则&lt;e1&gt;将发生剪裁&lt;/e1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>However, each widget and layout you add to your application requires initialization, layout, and drawing.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T091839Z" creationid="pingfangx" creationdate="20191103T091839Z">
        <seg>但是，添加到应用程序中的每个小部件和布局都需要初始化、布局和绘图。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>However, even with this approach the system expects you to finish with the broadcast very quickly (under 10 seconds).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T064611Z" creationid="pingfangx" creationdate="20191030T064611Z">
        <seg>然而，即使采用这种方法，系统也希望你能够非常快地完成广播(不到 10 秒)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>However, if the given dimension has only one constraint, then the view expands to fit its contents.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T074403Z" creationid="pingfangx" creationdate="20191103T074403Z">
        <seg>但是，如果给定尺寸只有一个约束，则 view 将扩展以适合其内容。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>However, if you want to override layout attributes using the &lt;c0&gt;&lt;include&gt;&lt;/c0&gt; tag, you must override both &lt;c1&gt;android:layout_height&lt;/c1&gt; and &lt;c2&gt;android:layout_width&lt;/c2&gt; in order for other layout attributes to take effect.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T094959Z" creationid="pingfangx" creationdate="20191103T094959Z">
        <seg>但是，如果要使用 &lt;c0&gt;&lt;include&gt;&lt;/c0&gt; 标签覆盖布局属性，则必须同时覆盖 &lt;c1&gt;android:layout_height&lt;/c1&gt; 和 &lt;c2&gt;android:layout_width&lt;/c2&gt; 才能使其他布局属性生效。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>However, once your code returns from &lt;c0&gt;onReceive()&lt;/c0&gt;, the BroadcastReceiver is no longer active.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T054720Z" creationid="pingfangx" creationdate="20191030T054720Z">
        <seg>但是，一旦代码从 &lt;c0&gt;onReceive()&lt;/c0&gt; 返回，广播接收器将不再处于活动状态。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>However, simulating the feel of a flywheel isn't trivial.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T070120Z" creationid="pingfangx" creationdate="20191103T070120Z">
        <seg>然而，模拟飞轮的感觉并非无足轻重。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>However, this is only to make editing easier; if a view has no constraints when you run your layout on a device, it is drawn at position [0,0] (the top-left corner).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T071230Z" creationid="pingfangx" creationdate="20191103T071230Z">
        <seg>然而这个仅仅是让编辑的时候更容易而已，如果这个 View 没有任何约束，当你运行应用到在设备上，他将会被绘制到左上角[0,0]这个位置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>However, using another &lt;c3&gt;&lt;a4&gt;LinearLayout&lt;/a4&gt;&lt;/c3&gt; as the root for the re-usable layout would result in a vertical &lt;c5&gt;&lt;a6&gt;LinearLayout&lt;/a6&gt;&lt;/c5&gt; inside a vertical &lt;c7&gt;&lt;a8&gt;LinearLayout&lt;/a8&gt;&lt;/c7&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T095140Z" creationid="pingfangx" creationdate="20191103T095140Z">
        <seg>然而，使用另一个 &lt;c3&gt;&lt;a4&gt;LinearLayout&lt;/a4&gt;&lt;/c3&gt; 作为可重复使用的布局的根将导致垂直 &lt;c5&gt;&lt;a6&gt;LinearLayout&lt;/a6&gt;&lt;/c5&gt; 内嵌垂直的 &lt;c7&gt;&lt;a8&gt;LinearLayout&lt;/a8&gt;&lt;/c7&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>However, you can modify that behavior with the following attributes and values (these attributes take effect only when you set the view width to match constraints):</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T074237Z" creationid="pingfangx" creationdate="20191103T074237Z">
        <seg>但是，可以使用以下属性和值修改该行为(这些属性仅在将视图宽度设置为匹配约束时生效)：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>However, you can still override them if you need to.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064342Z" creationid="pingfangx" creationdate="20191103T064342Z">
        <seg>当然，如果需要你也可以重写。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>However, you can toggle between &lt;b0&gt;spread&lt;/b0&gt;, &lt;b1&gt;spread inside&lt;/b1&gt;, and &lt;b2&gt;packed&lt;/b2&gt; by selecting any view in the chain and then clicking the chain button &lt;i3/&gt; that appears below the view.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T074957Z" creationid="pingfangx" creationdate="20191103T074957Z">
        <seg>但是，你可以在 &lt;b0&gt;spread&lt;/b0&gt;、&lt;b1&gt;spread inside&lt;/b1&gt; 和 &lt;b2&gt;packed&lt;/b2&gt; 之间切换，方法是选择链中的任何视图，然后单击出现在视图下方的链按钮 &lt;i3/&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>However, you must be careful not to abuse the opportunity to respond to broadcasts and run jobs in the background that can contribute to a slow system performance, as described in the following video.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T050625Z" creationid="pingfangx" creationdate="20191030T050625Z">
        <seg>但是，你必须小心，不要滥用在后台响应广播和运行作业的机会，这可能会导致系统性能降低，如以下视频中所述。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>However, you sometimes want to use &lt;c4&gt;&lt;a5&gt;ValueAnimator&lt;/a5&gt;&lt;/c4&gt; directly because &lt;c6&gt;&lt;a7&gt;ObjectAnimator&lt;/a7&gt;&lt;/c6&gt; has a few more restrictions, such as requiring specific accessor methods to be present on the target object.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T093517Z" creationid="pingfangx" creationdate="20191117T093517Z">
        <seg>但是，有时你希望直接使用 &lt;c4&gt;&lt;a5&gt;ValueAnimator&lt;/a5&gt;&lt;/c4&gt; ，因为 &lt;c6&gt;&lt;a7&gt;ObjectAnimator&lt;/a7&gt;&lt;/c6&gt; 还有一些限制，比如要求目标对象上存在特定的访问器方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If both the width and height are set to match constraints, you can click &lt;b0&gt;Toggle Aspect Ratio Constraint&lt;/b0&gt; to select which dimension is based on a ratio of the other.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T074542Z" creationid="pingfangx" creationdate="20191103T074542Z">
        <seg>如果宽度和高度都设置为 match constraints，你可以单击 &lt;b0&gt;Toggle Aspect Ratio Constraint&lt;/b0&gt; 来选择哪个尺寸基于另一个比率。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If enabled, when you add child views to a parent, this feature automatically creates two or more constraints for each view as you add them to the layout, but only when it's appropriate to constrain the view to the parent layout.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T075205Z" creationid="pingfangx" creationdate="20191103T075205Z">
        <seg>如果启用，将子视图添加到父视图时，此功能会在将每个视图添加到布局时自动为其创建两个或多个约束，但仅当将视图约束到父布局时才适用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If implemented poorly, your layout can lead to a memory hungry application with slow UIs.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T091433Z" creationid="pingfangx" creationdate="20191103T091433Z">
        <seg>如果实现得不好，你的布局可能会导致一个内存不足、UI 速度慢的应用程序。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If it finds conflicting measurements, it may need to traverse the hierarchy multiple times.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T070612Z" creationid="pingfangx" creationdate="20191103T070612Z">
        <seg>如果发现有冲突的测量，则可能需要多次遍历层次结构。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If it has a background image, the background image will be transformed along with the text.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T074926Z" creationid="pingfangx" creationdate="20191117T074926Z">
        <seg>如果它有背景图像，背景图像将与文本一起转换。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If it is set &lt;v2&gt;false&lt;/v2&gt; then the animation will loop.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T102902Z" creationid="pingfangx" creationdate="20191117T102902Z">
        <seg>如果设置为 &lt;v2&gt;false&lt;/v2&gt; 则动画将循环。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If many apps have registered to receive the same broadcast in their manifest, it can cause the system to launch a lot of apps, causing a substantial impact on both device performance and user experience.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T063902Z" creationid="pingfangx" creationdate="20191030T063902Z">
        <seg>如果许多应用程序在其清单中注册接收相同的广播，则可能导致系统启动许多应用程序，从而对设备性能和用户体验造成实质性影响。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If none of the prebuilt widgets or layouts meets your needs, you can create your own View subclass.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T063757Z" creationid="pingfangx" creationdate="20191103T063757Z">
        <seg>如果预制的组件和布局都不能满足你的需求，你可以创建自己的 View 子类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If none of the provided interpolators suits your needs, implement the &lt;c2&gt;&lt;a3&gt;TimeInterpolator&lt;/a3&gt;&lt;/c2&gt; interface and create your own.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T093936Z" creationid="pingfangx" creationdate="20191117T093936Z">
        <seg>如果提供的插值程序都不适合你的需要，请实现 &lt;c2&gt;&lt;a3&gt;TimeInterpolator&lt;/a3&gt;&lt;/c2&gt; 接口并创建自己的插值器。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If not specified, the animation starts at the value obtained by the property's get method.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T063343Z" creationid="pingfangx" creationdate="20191117T063343Z">
        <seg>如果没有指定，动画开始于由属性的 get 方法得到的值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If that process hosts only a manifest-declared receiver (a common case for apps that the user has never or not recently interacted with), then upon returning from &lt;c1&gt;onReceive()&lt;/c1&gt;, the system considers its process to be a low-priority process and may kill it to make resources available for other more important processes.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T054841Z" creationid="pingfangx" creationdate="20191030T054841Z">
        <seg>如果该进程仅承载清单声明的接收器(这是用户从未或最近没有与之交互的应用程序的常见情况)，那么当从 &lt;c1&gt;onReceive()&lt;/c1&gt; 返回时，系统会将其进程视为低优先级进程，并可能会终止该进程，以便为其他更重要的进程提供资源。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If the target value changes, you need to cancel the animation at the time of target value change, re-configure the animation with a new value as the new start value, and add the new target value.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T054518Z" creationid="pingfangx" creationdate="20191117T054518Z">
        <seg>如果目标值更改，则需要在目标值更改时取消动画，使用新值作为新的开始值重新配置动画，然后添加新的目标值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If the value you want to change is one of the base &lt;c0&gt;&lt;a1&gt;View&lt;/a1&gt;&lt;/c0&gt; properties, doing the animation is even easier, because Views have a built-in &lt;c2&gt;&lt;a3&gt;ViewPropertyAnimator&lt;/a3&gt;&lt;/c2&gt; that is optimized for simultaneous animation of multiple properties.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T070428Z" creationid="pingfangx" creationdate="20191103T070428Z">
        <seg>如果要更改的值是基本 &lt;c0&gt;&lt;a1&gt;View&lt;/a1&gt;&lt;/c0&gt; 属性之一，则执行动画会更加容易，因为 view 具有内置的 &lt;c2&gt;&lt;a3&gt;ViewPropertyAnimator&lt;/a3&gt;&lt;/c2&gt;，针对多个属性的同步动画进行了优化。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If there is a component that is already very similar to what you want, you can simply extend that component and just override the behavior that you want to change.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064422Z" creationid="pingfangx" creationdate="20191103T064422Z">
        <seg>如果有一个组件已经非常接近你想要的组件，你可以简单的继承那个组件并且重写你想要改变的行为。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If view animation accomplishes everything that you need to do, or if your existing code already works the way you want, there is no need to use the property animation system.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T092101Z" creationid="pingfangx" creationdate="20191117T092101Z">
        <seg>如果视图动画完成了所有需要做的事情，或者如果现有代码已经按你想要的方式工作，则不需要使用属性动画系统。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you add opposing constraints on a view, the constraint lines become squiggly like a spring to indicate the opposing forces, as shown in video 2.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T072512Z" creationid="pingfangx" creationdate="20191103T072512Z">
        <seg>如果在 view 上添加了相反的约束，约束线会变成像弹簧一样扭曲来表示相反的力，就像视频 2。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you already know the layout that you want to re-use, create a new XML file and define the layout.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T094515Z" creationid="pingfangx" creationdate="20191103T094515Z">
        <seg>如果你已经知道要重用的布局，请创建一个新的 XML 文件并定义布局。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you are animating an object property that is &lt;e0&gt;not&lt;/e0&gt; an &lt;c1&gt;int&lt;/c1&gt;, &lt;c2&gt;float&lt;/c2&gt;, or color, you must implement the &lt;c3&gt;&lt;a4&gt;TypeEvaluator&lt;/a4&gt;&lt;/c3&gt; interface to specify how to compute the object property's animated values.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T093757Z" creationid="pingfangx" creationdate="20191117T093757Z">
        <seg>如果要为 &lt;e0&gt;不是&lt;/e0&gt;&lt;c1&gt;int&lt;/c1&gt;、&lt;c2&gt;float&lt;/c2&gt; 或 color 的对象属性设置动画，则必须实现 &lt;c3&gt;&lt;a4&gt;TypeEvaluator&lt;/a4&gt;&lt;/c3&gt; 接口，以指定如何计算对象属性的动画值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you are developing an app that requires C or C++ code, you can use the &lt;a0&gt;Android NDK&lt;/a0&gt; to access some of these &lt;a1&gt;native platform libraries&lt;/a1&gt; directly from your native code.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T043059Z" creationid="pingfangx" creationdate="20191030T043059Z">
        <seg>如果你正在开发一个需要 C 或 C++ 代码的应用程序，你可以使用 &lt;a0&gt;Android NDK&lt;/a0&gt; 直接从原生代码访问这些 &lt;a1&gt;原生平台库&lt;/a1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you aren't using AndroidX, add the following support library dependency:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T080626Z" creationid="pingfangx" creationdate="20191103T080626Z">
        <seg>如果不使用 AndroidX，请添加以下支持库依赖项：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you declare a broadcast receiver in your manifest, the system launches your app (if the app is not already running) when the broadcast is sent.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T052548Z" creationid="pingfangx" creationdate="20191030T052548Z">
        <seg>如果在清单中声明广播接收器，则在发送广播时，系统将启动应用程序(如果应用程序尚未运行)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you don't apply any attributes, then your interpolator will function exactly the same as those provided by the platform (listed in the table above).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T072332Z" creationid="pingfangx" creationdate="20191117T072332Z">
        <seg>如果不应用任何属性，则插值器的功能将与平台提供的功能完全相同(在上表中列出)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you don't need to send broadcasts across apps, use local broadcasts.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T061237Z" creationid="pingfangx" creationdate="20191030T061237Z">
        <seg>如果不需要跨应用程序发送广播，请使用本地广播。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you don't need to send broadcasts to components outside of your app, then send and receive local broadcasts with the &lt;c0&gt;&lt;a1&gt;LocalBroadcastManager&lt;/a1&gt;&lt;/c0&gt; which is available in the &lt;a2&gt;Support Library&lt;/a2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T063742Z" creationid="pingfangx" creationdate="20191030T063742Z">
        <seg>如果不需要向应用程序外部的组件发送广播，则使用 &lt;a2&gt;支持库&lt;/a2&gt; 中提供的 &lt;c0&gt;&lt;a1&gt;LocalBroadcastManager&lt;/a1&gt;&lt;/c0&gt; 发送和接收本地广播。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you don't want to create a completely customized component, but instead are looking to put together a reusable component that consists of a group of existing controls, then creating a Compound Component (or Compound Control) might fit the bill.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064215Z" creationid="pingfangx" creationdate="20191103T064215Z">
        <seg>如果你不想创建完全自定义的组件，而是想创建一个由一组已存在的控件组成的可复用的组件，那么创建一个组合组件(或组合控件)可以满足你的需求。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you fail to call this method from an overridden &lt;c5&gt;onMeasure()&lt;/c5&gt; method, the result will be an exception at measurement time.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064041Z" creationid="pingfangx" creationdate="20191103T064041Z">
        <seg>如果你在重写 &lt;c5&gt;onMeasure()&lt;/c5&gt; 方法时没有成功调用该方法，在测量时这个结果将会出错。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you have a complex UI, consider writing a custom &lt;c0&gt;&lt;a1&gt;ViewGroup&lt;/a1&gt;&lt;/c0&gt; to perform its layout.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T070620Z" creationid="pingfangx" creationdate="20191103T070620Z">
        <seg>如果你有复杂的 UI，请考虑编写自定义 &lt;c0&gt;&lt;a1&gt;ViewGroup&lt;/a1&gt;&lt;/c0&gt; 来执行其布局。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you haven't done so already, import the NotePad sample into Android Studio (or just look at the source using the link provided).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064447Z" creationid="pingfangx" creationdate="20191103T064447Z">
        <seg>如果你还没看过这个 demo，可以导入 Android Studio (或者用提供的链接看下源代码。)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you instead want the view to stretch its size to meet the constraints, &lt;a0&gt;switch the size to "match constraints"&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T073850Z" creationid="pingfangx" creationdate="20191103T073850Z">
        <seg>如果你想拉伸 view 的尺寸以满足约束， &lt;a0&gt;switch the size to "match constraints"&lt;/a0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you instead want the view to stretch its size to meet the constraints, &lt;a0&gt;switch the size to "match constraints"&lt;/a0&gt;; or if you want to keep the current size but move the view so that it is not centered, &lt;a1&gt;adjust the constraint bias&lt;/a1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T072520Z" creationid="pingfangx" creationdate="20191103T072520Z">
        <seg>如果你想拉伸 view 的尺寸以满足约束， &lt;a0&gt;switch the size to "match constraints"&lt;/a0&gt;；或者如果你想保留当前的大小，但想移动 view 使其不居中，&lt;a1&gt;adjust the constraint bias&lt;/a1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you need finer control over your view's layout parameters, implement &lt;c0&gt;&lt;a1&gt;onMeasure()&lt;/a1&gt;&lt;/c0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T065604Z" creationid="pingfangx" creationdate="20191103T065604Z">
        <seg>如果需要更好地控制 view 的布局参数，请实现 &lt;c0&gt;&lt;a1&gt;onMeasure()&lt;/a1&gt;&lt;/c0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you need to perform long running work, be careful about spawning threads or starting background services because the system can kill the entire process after &lt;c2&gt;onReceive()&lt;/c2&gt; returns.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T064420Z" creationid="pingfangx" creationdate="20191030T064420Z">
        <seg>如果需要执行长时间运行的工作，请小心生成线程或启动后台服务，因为系统可能会在 &lt;c2&gt;onReceive()&lt;/c2&gt; 返回后终止整个进程。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you omit this call, the &lt;c4&gt;&lt;a5&gt;View&lt;/a5&gt;&lt;/c4&gt; class throws a runtime exception.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T065634Z" creationid="pingfangx" creationdate="20191103T065634Z">
        <seg>如果省略此调用，&lt;c4&gt;&lt;a5&gt;View&lt;/a5&gt;&lt;/c4&gt; 类将引发运行时异常。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you only need to make small adjustments to an existing widget or layout, you can simply subclass the widget or layout and override its methods.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T063800Z" creationid="pingfangx" creationdate="20191103T063800Z">
        <seg>如果你只需要对现有的 widget 或 layout 作小的调整，你可以简单地创建它们的子类并重写相关方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you only want to process a few gestures, you can extend &lt;c4&gt;&lt;a5&gt;GestureDetector.SimpleOnGestureListener&lt;/a5&gt;&lt;/c4&gt; instead of implementing the &lt;c6&gt;&lt;a7&gt;GestureDetector.OnGestureListener&lt;/a7&gt;&lt;/c6&gt; interface.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T070026Z" creationid="pingfangx" creationdate="20191103T070026Z">
        <seg>如果你只想处理几个手势，可以继承 &lt;c4&gt;&lt;a5&gt;GestureDetector.SimpleOnGestureListener&lt;/a5&gt;&lt;/c4&gt;，而不是实现 &lt;c6&gt;&lt;a7&gt;GestureDetector.OnGestureListener&lt;/a7&gt;&lt;/c6&gt; 界面。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you press the button and select something from the list, it populates the EditText field, but the user can also type something directly into the EditText if they prefer.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064221Z" creationid="pingfangx" creationdate="20191103T064221Z">
        <seg>如果你按下按钮并从列表中选择了某项，它会填充 EditText，但是如果用户想要，也可以直接在 EditText 中输入。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you register a receiver in &lt;c4&gt;&lt;a5&gt;onResume()&lt;/a5&gt;&lt;/c4&gt;, you should unregister it in &lt;c6&gt;&lt;a7&gt;onPause()&lt;/a7&gt;&lt;/c6&gt; to prevent registering it multiple times (If you don't want to receive broadcasts when paused, and this can cut down on unnecessary system overhead).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T054509Z" creationid="pingfangx" creationdate="20191030T054509Z">
        <seg>如果在 &lt;c4&gt;&lt;a5&gt;onResume()&lt;/a5&gt;&lt;/c4&gt; 中注册接收器，则应在 &lt;c6&gt;&lt;a7&gt;onPause()&lt;/a7&gt;&lt;/c6&gt; 中注销接收器，以防止多次注册(如果你不希望在暂停时接收广播，这可以减少不必要的系统开销)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you register with the Application context, you receive broadcasts as long as the app is running.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T054301Z" creationid="pingfangx" creationdate="20191030T054241Z">
        <seg>如果你使用应用程序上下文注册，则只要应用程序在运行，就可以接收广播。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you return &lt;c7&gt;false&lt;/c7&gt; from &lt;c8&gt;&lt;a9&gt;onDown()&lt;/a9&gt;&lt;/c8&gt;, as &lt;c10&gt;&lt;a11&gt;GestureDetector.SimpleOnGestureListener&lt;/a11&gt;&lt;/c10&gt; does, the system assumes that you want to ignore the rest of the gesture, and the other methods of &lt;c12&gt;&lt;a13&gt;GestureDetector.OnGestureListener&lt;/a13&gt;&lt;/c12&gt; never get called.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T070037Z" creationid="pingfangx" creationdate="20191103T070037Z">
        <seg>如果从 &lt;c8&gt;&lt;a9&gt;onDown()&lt;/a9&gt;&lt;/c8&gt; 返回 &lt;c7&gt;false&lt;/c7&gt;，像 &lt;c10&gt;&lt;a11&gt;GestureDetector.SimpleOnGestureListener&lt;/a11&gt;&lt;/c10&gt; 一样，则系统假定你要忽略手势的其余部分，并且永远不会调用 &lt;c12&gt;&lt;a13&gt;GestureDetector.OnGestureListener&lt;/a13&gt;&lt;/c12&gt; 的其他方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you specify a permission parameter when registering a broadcast receiver (either with &lt;c0&gt;&lt;a1&gt;registerReceiver(BroadcastReceiver, IntentFilter, String, Handler)&lt;/a1&gt;&lt;/c0&gt; or in &lt;a2&gt;&lt;c3&gt;&lt;receiver&gt;&lt;/c3&gt;&lt;/a2&gt; tag in your manifest), then only broadcasters who have requested the permission with the &lt;a4&gt;&lt;c5&gt;&lt;uses-permission&gt;&lt;/c5&gt;&lt;/a4&gt; tag in their manifest (and subsequently been granted the permission if it is dangerous) can send an Intent to the receiver.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T062505Z" creationid="pingfangx" creationdate="20191030T062431Z">
        <seg>如果在注册广播接收器时指定了权限参数(使用 &lt;c0&gt;&lt;a1&gt;registerReceiver(BroadcastReceiver, IntentFilter, String, Handler)&lt;/a1&gt;&lt;/c0&gt; 或在清单中的 &lt;a2&gt;&lt;c3&gt;&lt;receiver&gt;&lt;/c3&gt;&lt;/a2&gt; 标记中)。然后，只有在清单中使用 &lt;a4&gt;&lt;c5&gt;&lt;uses-permission&gt;&lt;/c5&gt;&lt;/a4&gt; 标记请求权限(如果是权限危险，则需要随后被授予该权限)的广播者才能向接收器发送 intent。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you want to play the animation immediately, without requiring interaction, then you might want to call it from the &lt;c6&gt;&lt;c7&gt;&lt;a8&gt;onStart()&lt;/a8&gt;&lt;/c7&gt;&lt;/c6&gt; method in your Activity, which will get called when Android makes the view visible on screen.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T103058Z" creationid="pingfangx" creationdate="20191117T103058Z">
        <seg>如果你希望立即播放动画，而不需要交互，那么你可能希望从 Activity 中的 &lt;c6&gt;&lt;c7&gt;&lt;a8&gt;onStart()&lt;/a8&gt;&lt;/c7&gt;&lt;/c6&gt; 方法调用它，当 Android 使视图在屏幕上可见时，将调用该方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you want to use 3D graphics, you must extend &lt;c1&gt;&lt;a2&gt;SurfaceView&lt;/a2&gt;&lt;/c1&gt; instead of View, and draw from a separate thread.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064024Z" creationid="pingfangx" creationdate="20191103T064024Z">
        <seg>如果你想要使用 3D 图形，你必须继承 &lt;c1&gt;&lt;a2&gt;SurfaceView&lt;/a2&gt;&lt;/c1&gt; 而不是 View，并从一个独立的线程画图。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you'd like more information about the Layout Editor itself, see the Android Studio guide to &lt;a2&gt;Build a UI with Layout Editor&lt;/a2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T071210Z" creationid="pingfangx" creationdate="20191103T071210Z">
        <seg>如果你想了解有关布局编辑器本身的更多信息，请参阅 Android Studio 指南 &lt;a2&gt;Build a UI with Layout Editor&lt;/a2&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you're familiar with &lt;c6&gt;layout_weight&lt;/c6&gt; in a &lt;a7&gt;linear layout&lt;/a7&gt;, this works the same way.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T074929Z" creationid="pingfangx" creationdate="20191103T074929Z">
        <seg>如果你熟悉 &lt;a7&gt;linear layout&lt;/a7&gt; 中的 &lt;c6&gt;layout_weight&lt;/c6&gt; 它们的工作方式是相同的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you're not satisfied with the interpolators provided by the platform (listed in the table above), you can create a custom interpolator resource with modified attributes.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T072206Z" creationid="pingfangx" creationdate="20191117T072206Z">
        <seg>如果你对平台提供的插值器(在上表中列出)不满意，可以使用修改的属性创建自定义插值器资源。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you're using AndroidX, add the following dependency:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T080620Z" creationid="pingfangx" creationdate="20191103T080620Z">
        <seg>如果你使用 AndroidX，添加以下的依赖：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If your app runs well on ART, then it should work on Dalvik as well, but &lt;a0&gt;the reverse may not be true&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T041125Z" creationid="pingfangx" creationdate="20191030T041125Z">
        <seg>如果你的应用程序在 ART 上运行良好，那么它也应该在 Dalvik 上运行，但是 &lt;a0&gt;反过来可能不正确&lt;/a0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If your app targets Android 8.0 or higher, you cannot use the manifest to declare a receiver for most implicit broadcasts (broadcasts that don't target your app specifically).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T052116Z" creationid="pingfangx" creationdate="20191030T052116Z">
        <seg>如果你的应用程序以 Android 8.0 或更高版本为目标，则无法使用清单为大多数隐式广播(不是专门针对您的应用程序的广播)声明接收器。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If your application UI repeats certain layout constructs in multiple places, this lesson shows you how to create efficient, re-usable layout constructs, then include them in the appropriate UI layouts.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T091642Z" creationid="pingfangx" creationdate="20191103T091642Z">
        <seg>如果应用程序 UI 在多个位置重复某些布局构造，本课程将向你展示如何创建高效、可重用的布局构造，然后将它们包含在相应的 UI 布局中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If your custom View component is not defined as an inner class, then you can, alternatively, declare the View component with the XML element name, and exclude the &lt;c0&gt;class&lt;/c0&gt; attribute.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064541Z" creationid="pingfangx" creationdate="20191103T064541Z">
        <seg>如果你的自定义 View 组件没有定义为内部类，你也可以用 XML 的元素名字来申明 View 组件，而不需要 &lt;c0&gt;class&lt;/c0&gt; 属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If your view class is an inner class, you must further qualify it with the name of the view's outer class.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T065020Z" creationid="pingfangx" creationdate="20191103T065020Z">
        <seg>如果你的 view 类是内部类，则必须使用 view 人外部类的名称进一步限定它。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If your view doesn't need special control over its size, you only need to override one method: &lt;c2&gt;&lt;a3&gt;onSizeChanged()&lt;/a3&gt;&lt;/c2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T065548Z" creationid="pingfangx" creationdate="20191103T065548Z">
        <seg>如果你的 view 不需要对其大小进行特殊控制，则只需重写一个方法：&lt;c2&gt;&lt;a3&gt;onSizeChanged()&lt;/a3&gt;&lt;/c2&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Improving Layout Performance</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T091408Z" creationid="pingfangx" creationdate="20191103T091408Z">
        <seg>提高布局性能</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In Android 4.0 and higher, you can specify a &lt;a0&gt;package&lt;/a0&gt; with &lt;c1&gt;&lt;a2&gt;setPackage(String)&lt;/a2&gt;&lt;/c1&gt; when sending a broadcast.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T064019Z" creationid="pingfangx" creationdate="20191030T064019Z">
        <seg>在 Android 4.0 及更高版本中，你可以在发送广播时使用 &lt;c1&gt;&lt;a2&gt;setPackage(String)&lt;/a2&gt;&lt;/c1&gt; 指定 &lt;a0&gt;package&lt;/a0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In Android, there are actually two other Views readily available to do this: &lt;c0&gt;&lt;a1&gt;Spinner&lt;/a1&gt;&lt;/c0&gt; and &lt;c2&gt;&lt;a3&gt;AutoCompleteTextView&lt;/a3&gt;&lt;/c2&gt;, but regardless, the concept of a Combo Box makes an easy-to-understand example.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064225Z" creationid="pingfangx" creationdate="20191103T064225Z">
        <seg>在安卓中，事实上有 2 个 View 真的可以这样做，&lt;c0&gt;&lt;a1&gt;Spinner&lt;/a1&gt;&lt;/c0&gt; 和 &lt;c2&gt;&lt;a3&gt;AutoCompleteTextView&lt;/a3&gt;&lt;/c2&gt; 但不管怎样，Combo Box 的概念让这个例子更好理解。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In Figure 1, the interpolated fraction is always the same as the elapsed fraction.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T091517Z" creationid="pingfangx" creationdate="20191117T091517Z">
        <seg>在图 1 中，插值分数始终与经过分数相同。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In a normally behaving system, these are the only processes involved in memory management: a well running system will have multiple cached processes always available (for more efficient switching between applications) and regularly kill the oldest ones as needed.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191029T081423Z" creationid="pingfangx" creationdate="20191029T081423Z">
        <seg>在正常运行的系统中，这些进程是内存管理所涉及的唯一进程：运行良好的系统将始终有多个缓存进程可用(以便在应用程序之间进行更有效的切换)，并根据需要定期杀死最旧的进程。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In a nutshell, this brings together a number of more atomic controls (or views) into a logical group of items that can be treated as a single thing.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064217Z" creationid="pingfangx" creationdate="20191103T064217Z">
        <seg>简而言之，它把更多的原子的控件(或 view)组合在成一个有逻辑的项目组，你可以把它单独的东西来对待。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In addition to being a well-designed class, though, a custom view should:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064841Z" creationid="pingfangx" creationdate="20191103T064841Z">
        <seg>除了是一个精心设计的类之外，自定义视图应该：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In addition to describing transitions between layouts, &lt;c0&gt;MotionLayout&lt;/c0&gt; lets you animate any layout properties, as well.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T080351Z" creationid="pingfangx" creationdate="20191103T080351Z">
        <seg>除了描述布局之间的转换，&lt;c0&gt;MotionLayout&lt;/c0&gt; 还允许设置任何布局属性的动画。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In addition to making &lt;c0&gt;&lt;a1&gt;onDraw()&lt;/a1&gt;&lt;/c0&gt; leaner, also make sure it's called as infrequently as possible.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T070604Z" creationid="pingfangx" creationdate="20191103T070604Z">
        <seg>除了使 &lt;c0&gt;&lt;a1&gt;onDraw()&lt;/a1&gt;&lt;/c0&gt; 更精简之外，还要确保尽可能不频繁地调用它。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In addition to position and bounds, the following attributes are interpolated by &lt;c1&gt;MotionLayout&lt;/c1&gt;:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T081112Z" creationid="pingfangx" creationdate="20191103T081112Z">
        <seg>除了位置和范围，下面的属性是由 &lt;c1&gt;MotionLayout&lt;/c1&gt; 插值：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In addition to the attributes in the example above, &lt;c0&gt;MotionLayout&lt;/c0&gt; has other attributes that you might want to specify:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T081508Z" creationid="pingfangx" creationdate="20191103T081508Z">
        <seg>除了上面示例中的属性之外，&lt;c0&gt;MotionLayout&lt;/c0&gt; 还有其他属性，你可能需要指定这些属性：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In addition, if your app is installed on a device running Android 9 or higher, system broadcasts from Wi-Fi don't contain SSIDs, BSSIDs, connection information, or scan results.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T052022Z" creationid="pingfangx" creationdate="20191030T052022Z">
        <seg>此外，如果应用程序安装在运行 Android9 或更高版本的设备上，则 Wi-Fi 的系统广播不包含 SSID、BSSID、连接信息或扫描结果。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In figure 1, the layout looks good in the editor, but there's no vertical constraint on view C. When this layout draws on a device, view C horizontally aligns with the left and right edges of view A, but appears at the top of the screen because it has no vertical constraint.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T071232Z" creationid="pingfangx" creationdate="20191103T071232Z">
        <seg>在图 1，在布局编辑器上看起来不错，但是在 view C 上没有垂直约束。当这个布局在设备上绘制的时候，view C 与 view A 的左边缘和右边缘水平对齐，但它会出现在屏幕的顶部，因为它没有垂直约束。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In figure 11, the first line of B is aligned with the text in A.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T073053Z" creationid="pingfangx" creationdate="20191103T073053Z">
        <seg>在图 11，B 的第一行与 A 中的文本对齐。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In figure 7, the left side of the view is connected to the left edge of the parent layout.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T072530Z" creationid="pingfangx" creationdate="20191103T072530Z">
        <seg>在图 7，view 的左侧连接到父布局的左边缘。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In figure 8, B is constrained to always be to the right of A, and C is constrained below A. However, these constraints do not imply alignment, so B can still move up and down.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T072544Z" creationid="pingfangx" creationdate="20191103T072544Z">
        <seg>在图 8，B 被约束为总是在 A 的右边，并且 C 被约束在 A 的下面。然而，这些约束并不意味着对齐，所以 B 仍然可以上下移动。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In figure 9, the left side of B is aligned to the left side of A. If you want to align the view centers, create a constraint on both sides.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T072557Z" creationid="pingfangx" creationdate="20191103T072557Z">
        <seg>在图 9，B 的左侧与 A 的左侧对齐。如果你要对齐 view 的中心，请在两侧分别创建约束。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In most cases, every Android application runs in its own Linux process.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191029T073609Z" creationid="pingfangx" creationdate="20191029T073609Z">
        <seg>在大多数情况下，每一个 Android 应用程序在自己的 Linux 进程中运行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In most cases, you can use &lt;a4&gt;scheduled jobs&lt;/a4&gt; instead.&lt;/s1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T052754Z" creationid="pingfangx" creationdate="20191030T052754Z">
        <seg>在大多数情况下，你可以使用 &lt;a4&gt;scheduled jobs&lt;/a4&gt; 代替。&lt;/s1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In order to avoid having to repeat the long namespace URI, the sample uses an &lt;c0&gt;xmlns&lt;/c0&gt; directive.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T065009Z" creationid="pingfangx" creationdate="20191103T065009Z">
        <seg>为了避免必须重复长命名空间 URI，该示例使用 &lt;c0&gt;xmlns&lt;/c0&gt; 指令。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In order to do so, you need to create your own interpolator resource in an XML file.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T072253Z" creationid="pingfangx" creationdate="20191117T072253Z">
        <seg>为此，需要在 XML 文件中创建自己的插值器资源。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In order to properly draw your custom view, you need to know what size it is.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T065540Z" creationid="pingfangx" creationdate="20191103T065540Z">
        <seg>为了正确绘制自定义 view，你需要知道它的大小。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In order to run this animation, you must inflate the XML resources in your code to an &lt;c0&gt;&lt;a1&gt;AnimatorSet&lt;/a1&gt;&lt;/c0&gt; object, and then set the target objects for all of the animations before starting the animation set.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T065458Z" creationid="pingfangx" creationdate="20191117T065458Z">
        <seg>要运行此动画，必须将代码中的 XML 资源加载为一个 &lt;c0&gt;&lt;a1&gt;AnimatorSet&lt;/a1&gt;&lt;/c0&gt; 对象，然后在启动动画集之前为所有动画设置目标对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In particular you should eliminate allocations in &lt;c2&gt;&lt;a3&gt;onDraw()&lt;/a3&gt;&lt;/c2&gt;, because allocations may lead to a garbage collection that would cause a stutter.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T070557Z" creationid="pingfangx" creationdate="20191103T070557Z">
        <seg>特别是你应该消除 &lt;c2&gt;&lt;a3&gt;onDraw()&lt;/a3&gt;&lt;/c2&gt; 中的分配，因为分配可能会导致垃圾收集，从而导致不流畅。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In particular, note the definition of &lt;c0&gt;LinedEditText&lt;/c0&gt; in the &lt;a1&gt; NoteEditor.java&lt;/a1&gt; file.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064451Z" creationid="pingfangx" creationdate="20191103T064451Z">
        <seg>特别要注意 &lt;a1&gt; NoteEditor.java&lt;/a1&gt; 文件中 &lt;c0&gt;LinedEditText&lt;/c0&gt; 的定义。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In some complex layouts, the system may waste effort measuring the same UI element more than once.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T092700Z" creationid="pingfangx" creationdate="20191103T092700Z">
        <seg>在一些复杂的布局中，系统可能会浪费多次测量同一个 UI 元素的工作。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In some situations, images need to be animated on screen.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T101943Z" creationid="pingfangx" creationdate="20191117T101943Z">
        <seg>在某些情况下，图像需要在屏幕上进行动画。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In the &lt;b0&gt;Component Tree&lt;/b0&gt; window, select the views you want inside the barrier and drag them into the barrier component.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T073600Z" creationid="pingfangx" creationdate="20191103T073600Z">
        <seg>在 &lt;b0&gt;Component Tree&lt;/b0&gt; 窗口中，选择要在屏障内显示的视图，并将它们拖到屏障组件中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In the &lt;b0&gt;Layout&lt;/b0&gt; section of the &lt;b1&gt;Attributes&lt;/b1&gt; window, click on a constraint anchor, as shown in figure 6.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T072451Z" creationid="pingfangx" creationdate="20191103T072451Z">
        <seg>在 &lt;b1&gt;Attributes&lt;/b1&gt; 窗口的 &lt;b0&gt;Layout&lt;/b0&gt; 部分，点击一个约束锚，如图 6。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In the &lt;c4&gt;PieChart&lt;/c4&gt; example, &lt;c5&gt;&lt;a6&gt;onSizeChanged()&lt;/a6&gt;&lt;/c5&gt; is where the &lt;c7&gt;PieChart&lt;/c7&gt; view calculates the bounding rectangle of the pie chart and the relative position of the text label and other visual elements.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T065553Z" creationid="pingfangx" creationdate="20191103T065553Z">
        <seg>在 &lt;c4&gt;PieChart&lt;/c4&gt; 示例中，&lt;c5&gt;&lt;a6&gt;onSizeChanged()&lt;/a6&gt;&lt;/c5&gt; 是 &lt;c7&gt;PieChart&lt;/c7&gt; view 计算饼图的边界矩形的位置，文本标签和其他视觉元素的相对位置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In the &lt;s0&gt;Component Tree&lt;/s0&gt; window, right-click the layout and click &lt;s1&gt;Convert &lt;e2&gt;layout&lt;/e2&gt; to ConstraintLayout&lt;/s1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T071725Z" creationid="pingfangx" creationdate="20191103T071725Z">
        <seg>在 &lt;s0&gt;Component Tree&lt;/s0&gt; 窗口，右击布局然后点击 &lt;s1&gt;Convert &lt;e2&gt;layout&lt;/e2&gt; to ConstraintLayout&lt;/s1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In the &lt;s0&gt;Project&lt;/s0&gt; window, click the module folder and then select &lt;s1&gt;File &gt; New &gt; XML &gt; Layout XML&lt;/s1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T071747Z" creationid="pingfangx" creationdate="20191103T071747Z">
        <seg>在 &lt;s0&gt;Project&lt;/s0&gt; 窗口，点击 module 文件夹，然后选择 &lt;s1&gt;File &gt; New &gt; XML &gt; Layout XML&lt;/s1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In the NotePad example, the custom component is used directly from the declarative layout, so take a look at &lt;c0&gt;note_editor.xml&lt;/c0&gt; in the &lt;a1&gt; res/layout&lt;/a1&gt; folder.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064527Z" creationid="pingfangx" creationdate="20191103T064527Z">
        <seg>在 NotePad 示例中，自定义组件直接从声明性布局中使用，因此请查看 &lt;a1&gt; res/layout&lt;/a1&gt; 文件夹中的 &lt;c0&gt;note_editor.xml&lt;/c0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In the beginning, this animation accelerates up to the halfway point then decelerates from the halfway point until the end of the animation.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T082034Z" creationid="pingfangx" creationdate="20191117T082034Z">
        <seg>在开始时，该动画加速到中间点，然后从中间点减速到动画结束。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In the case of extending a Layout, you don't need to override the &lt;c0&gt;onDraw()&lt;/c0&gt; and &lt;c1&gt;onMeasure()&lt;/c1&gt; methods since the layout will have default behavior that will likely work just fine.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064339Z" creationid="pingfangx" creationdate="20191103T064339Z">
        <seg>在继承 Layout 的情况下，你不必重写 &lt;c0&gt;onDraw()&lt;/c0&gt; 或 &lt;c1&gt;onMeasure()&lt;/c1&gt; 方法，因为 layout 有自己的默认行为可以很好的工作。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In the constructor for the new class, take whatever parameters the superclass expects, and pass them through to the superclass constructor first.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064241Z" creationid="pingfangx" creationdate="20191103T064241Z">
        <seg>在新类的构造方法中，首先取出父类需要的参数，通过父类的构造的方法传递给它。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In the end, you can very quickly construct arbitrarily complex compound views and re-use them as if they were a single component.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064413Z" creationid="pingfangx" creationdate="20191103T064413Z">
        <seg>最后，你可以任意组合和复用复杂的组件，只需把它们当作一个单一的组件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In the example below, we use XML.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T075012Z" creationid="pingfangx" creationdate="20191117T075012Z">
        <seg>在下面的示例中，我们使用 XML。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In the following example, modifying the currently selected pie slice in PieChart causes the entire chart to rotate so that the selection pointer is centered in the selected slice.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T070415Z" creationid="pingfangx" creationdate="20191103T070415Z">
        <seg>在以下示例中，修改 PieChart 中当前选定的饼图切片会导致整个图表旋转，以使选择指针在所选切片中居中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In the previous &lt;c1&gt;MotionLayout&lt;/c1&gt; example, the &lt;c2&gt;app:layoutDescription&lt;/c2&gt; attribute references a &lt;i3&gt;MotionScene&lt;/i3&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T080755Z" creationid="pingfangx" creationdate="20191103T080755Z">
        <seg>在前面的 &lt;c1&gt;MotionLayout&lt;/c1&gt; 示例中，&lt;c2&gt;app:layoutDescription&lt;/c2&gt; 属性引用一个 &lt;i3&gt;MotionScene&lt;/i3&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In the same way a complex web page can slow down load time, your layout hierarchy if too complex can also cause performance problems.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T091603Z" creationid="pingfangx" creationdate="20191103T091603Z">
        <seg>一个复杂的网页会减缓加载时间，同样你的布局层次结构如果过于复杂也会导致性能问题。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In the toolbar or sync notification, click &lt;s0&gt;Sync Project with Gradle Files&lt;/s0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T071711Z" creationid="pingfangx" creationdate="20191103T071711Z">
        <seg>在工具栏或同步通知中，点吉 &lt;s0&gt;Sync Project with Gradle Files&lt;/s0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In this case, the instructions are the order and duration for each frame of the animation.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T102532Z" creationid="pingfangx" creationdate="20191117T102532Z">
        <seg>在这种情况下，指令是动画每帧的顺序和持续时间。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In this document</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T030117Z" creationid="pingfangx" creationdate="20191030T030117Z">
        <seg>在本文档中</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In this example, we define one &lt;c1&gt;ConstraintSet&lt;/c1&gt; for each endpoint of our motion.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T081006Z" creationid="pingfangx" creationdate="20191103T081006Z">
        <seg>在本例中，我们为运动的每个端点定义一个 &lt;c1&gt;ConstraintSet&lt;/c1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In this implementation, &lt;c2&gt;PieChart&lt;/c2&gt; attempts to make its area big enough to make the pie as big as its label:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T065620Z" creationid="pingfangx" creationdate="20191103T065620Z">
        <seg>在此实现中，&lt;c2&gt;PieChart&lt;/c2&gt; 尝试使其区域足够大，使得饼与其标签一样大：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In this lesson you'll learn to use &lt;a0&gt;Hierarchy Viewer&lt;/a0&gt; and &lt;a1&gt;Lint&lt;/a1&gt; to examine and optimize your layout.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T092002Z" creationid="pingfangx" creationdate="20191103T092002Z">
        <seg>在本课中，你将学习使用 &lt;a0&gt;Hierarchy Viewer&lt;/a0&gt; 和 &lt;a1&gt;Lint&lt;/a1&gt; 检查和优化布局。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Inside the layout to which you want to add the re-usable component, add the &lt;c0&gt;&lt;include/&gt;&lt;/c0&gt; tag.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T094743Z" creationid="pingfangx" creationdate="20191103T094743Z">
        <seg>在要添加可重用组件的布局中，添加 &lt;c0&gt;&lt;include/&gt;&lt;/c0&gt; 标签。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Inspect Your Layout</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T092005Z" creationid="pingfangx" creationdate="20191103T092005Z">
        <seg>检查你的布局</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Inspection Configuration</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T093427Z" creationid="pingfangx" creationdate="20191103T093427Z">
        <seg>检查配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Inspection of the new layout looks like this:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T092529Z" creationid="pingfangx" creationdate="20191103T092529Z">
        <seg>新布局的检查如下所示：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Instead of adding constraints to every view as you place them in the layout, you can move each view into the positions you desire, and then click &lt;s0&gt;Infer Constraints&lt;/s0&gt; &lt;i1/&gt; to automatically create constraints.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T075122Z" creationid="pingfangx" creationdate="20191103T075122Z">
        <seg>在布局中放置约束时，你可以将每个视图移动到所需的位置，然后单击 &lt;s0&gt;Infer Constraints&lt;/s0&gt; &lt;i1/&gt; 以自动创建约束，而不是将约束添加到每个视图。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Instead of belonging to the &lt;c0&gt;http://schemas.android.com/apk/res/android&lt;/c0&gt; namespace, they belong to &lt;c1&gt;http://schemas.android.com/apk/res/[your package name]&lt;/c1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T065003Z" creationid="pingfangx" creationdate="20191103T065003Z">
        <seg>它们不属于 &lt;c0&gt;http://schemas.android.com/apk/res/android&lt;/c0&gt; 命名空间，而属于 &lt;c1&gt;http://schemas.android.com/apk/res/[your package name]&lt;/c1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Instead use "match constraints" (&lt;c3&gt;0dp&lt;/c3&gt;).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T074513Z" creationid="pingfangx" creationdate="20191103T074513Z">
        <seg>而是使用 "match constraints" (&lt;c3&gt;0dp&lt;/c3&gt;)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Instead, consider displaying a &lt;a0&gt;notification&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T064720Z" creationid="pingfangx" creationdate="20191030T064720Z">
        <seg>相反，请考虑显示 &lt;a0&gt;通知&lt;/a0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Instead, images should move from one place to another.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T065925Z" creationid="pingfangx" creationdate="20191103T065925Z">
        <seg>相反，图像应该从一个地方移动到另一个地方。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Instead, it is determined by the system through a combination of the parts of the application that the system knows are running, how important these things are to the user, and how much overall memory is available in the system.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191029T073935Z" creationid="pingfangx" creationdate="20191029T073935Z">
        <seg>相反，它是由系统通过组合应用程序中系统知道正在运行的部分、这些东西对用户有多重要以及系统中有多少总内存可用来确定的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Instead, it sets their sizes directly according to its own custom layout algorithm.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T070628Z" creationid="pingfangx" creationdate="20191103T070628Z">
        <seg>相反，它根据自己的自定义布局算法直接设置它们的大小。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Instead, pass the &lt;c0&gt;&lt;a1&gt;AttributeSet&lt;/a1&gt;&lt;/c0&gt; to &lt;c2&gt;&lt;a3&gt;obtainStyledAttributes()&lt;/a3&gt;&lt;/c2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T065036Z" creationid="pingfangx" creationdate="20191103T065036Z">
        <seg>取而代之的是，将 &lt;c0&gt;&lt;a1&gt;AttributeSet&lt;/a1&gt;&lt;/c0&gt; 传递给 &lt;c2&gt;&lt;a3&gt;obtainStyledAttributes()&lt;/a3&gt;&lt;/c2&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Instead, the method communicates its results by calling &lt;c2&gt;&lt;a3&gt;setMeasuredDimension()&lt;/a3&gt;&lt;/c2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T065631Z" creationid="pingfangx" creationdate="20191103T065631Z">
        <seg>相反，该方法通过调用 &lt;c2&gt;&lt;a3&gt;setMeasuredDimension()&lt;/a3&gt;&lt;/c2&gt; 来传达其结果。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Instead, use &lt;c0&gt;&lt;a1&gt;ValueAnimator&lt;/a1&gt;&lt;/c0&gt; to make the change.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T070410Z" creationid="pingfangx" creationdate="20191103T070410Z">
        <seg>而是使用 &lt;c0&gt;&lt;a1&gt;ValueAnimator&lt;/a1&gt;&lt;/c0&gt; 进行更改。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Interpolated attributes</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T081051Z" creationid="pingfangx" creationdate="20191103T081051Z">
        <seg>插值属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Interpolator class</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T072123Z" creationid="pingfangx" creationdate="20191117T072123Z">
        <seg>插值器类</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It also means that any elements of your application that are common across multiple layouts can be extracted, managed separately, then included in each layout.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T094434Z" creationid="pingfangx" creationdate="20191103T094434Z">
        <seg>这还意味着，应用程序中跨多个布局通用的任何元素都可以被提取、单独管理，然后包含在每个布局中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It also might make sense to use both animation systems for different situations if the use case arises.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T092114Z" creationid="pingfangx" creationdate="20191117T092114Z">
        <seg>如果用例出现，在不同的情况下同时使用这两个动画系统也是有意义的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It does allow you to move work to another thread to avoid glitching the main thread.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T064626Z" creationid="pingfangx" creationdate="20191030T064626Z">
        <seg>它允许你将工作转移到另一个线程，以避免主线程出现故障。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It does not support nested layout hierarchies or activity transitions.&lt;/s1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T080520Z" creationid="pingfangx" creationdate="20191103T080520Z">
        <seg>它不支持嵌套的布局层次结构或 activity 转换。&lt;/s1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It encapsulates a specific set of functionality with an easy to use interface, it uses CPU and memory efficiently, and so forth.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064840Z" creationid="pingfangx" creationdate="20191103T064840Z">
        <seg>它通过易于使用的接口封装了一组特定的函数，它有效地使用 CPU 和内存，等等。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It extends &lt;c0&gt;EditText&lt;/c0&gt;, which is the View we have chosen to customize in this case.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064504Z" creationid="pingfangx" creationdate="20191103T064504Z">
        <seg>它继承于我们所选择进行自定义的 &lt;c0&gt;EditText&lt;/c0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It has a &lt;c0&gt;&lt;a1&gt;BroadcastReceiver&lt;/a1&gt;&lt;/c0&gt; that is currently running (its &lt;c2&gt;&lt;a3&gt;BroadcastReceiver.onReceive()&lt;/a3&gt;&lt;/c2&gt; method is executing).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191029T074715Z" creationid="pingfangx" creationdate="20191029T074715Z">
        <seg>它有一个 &lt;c0&gt;&lt;a1&gt;BroadcastReceiver&lt;/a1&gt;&lt;/c0&gt; 当前正在运行(其 &lt;c2&gt;&lt;a3&gt;BroadcastReceiver.onReceive()&lt;/a3&gt;&lt;/c2&gt; 方法正在执行)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It has a &lt;c0&gt;&lt;a1&gt;Service&lt;/a1&gt;&lt;/c0&gt; that is currently executing code in one of its callbacks (&lt;c2&gt;&lt;a3&gt;Service.onCreate()&lt;/a3&gt;&lt;/c2&gt;, &lt;c4&gt;&lt;a5&gt;Service.onStart()&lt;/a5&gt;&lt;/c4&gt;, or &lt;c6&gt;&lt;a7&gt;Service.onDestroy()&lt;/a7&gt;&lt;/c6&gt;).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191029T074753Z" creationid="pingfangx" creationdate="20191029T074753Z">
        <seg>它有一个 &lt;c0&gt;&lt;a1&gt;Service&lt;/a1&gt;&lt;/c0&gt; 当前在其回调之一中执行代码(&lt;c2&gt;&lt;a3&gt;Service.onCreate()&lt;/a3&gt;&lt;/c2&gt;，&lt;c4&gt;&lt;a5&gt;Service.onStart()&lt;/a5&gt;&lt;/c4&gt; 或 &lt;c6&gt;&lt;a7&gt;Service.onDestroy()&lt;/a7&gt;&lt;/c6&gt;)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It has a &lt;c0&gt;&lt;a1&gt;Service&lt;/a1&gt;&lt;/c0&gt; that is running as a foreground service, through &lt;c2&gt;&lt;a3&gt;Service.startForeground()&lt;/a3&gt;&lt;/c2&gt; (which is asking the system to treat the service as something the user is aware of, or essentially visible to them).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191029T081114Z" creationid="pingfangx" creationdate="20191029T081114Z">
        <seg>它有一个 &lt;c0&gt;&lt;a1&gt;Service&lt;/a1&gt;&lt;/c0&gt; 作为前台服务运行，通过 &lt;c2&gt;&lt;a3&gt;Service.startForeground()&lt;/a3&gt;&lt;/c2&gt;(它要求系统将该服务视为用户意识到的或用户基本可见的东西)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It has all of the core functionality that calculates animation values and contains the timing details of each animation, information about whether an animation repeats, listeners that receive update events, and the ability to set custom types to evaluate.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T093038Z" creationid="pingfangx" creationdate="20191117T093038Z">
        <seg>它具有计算动画值的所有核心功能，并包含每个动画的计时详细信息、有关动画是否重复的信息、接收更新事件的侦听器以及设置要求值的自定义类型的能力。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It is &lt;c0&gt;static&lt;/c0&gt;, meaning it does not generate the so-called "synthetic methods" that allow it to access data from the parent class, which in turn means that it really behaves as a separate class rather than something strongly related to &lt;c1&gt;NoteEditor&lt;/c1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064501Z" creationid="pingfangx" creationdate="20191103T064501Z">
        <seg>它是 &lt;c0&gt;static&lt;/c0&gt; 方法，意味首它不会生成可以访问父类数据的所谓的 "synthetic methods（不知道怎么翻译，改天翻书去）"，相反的意味着它确实表现为一个独立的类而不会强烈依赖 &lt;c1&gt;NoteEditor&lt;/c1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It is a common misconception that using the basic layout structures leads to the most efficient layouts.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T091829Z" creationid="pingfangx" creationdate="20191103T091829Z">
        <seg>使用基本布局结构会导致最有效的布局，这是一种常见的误解。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It is always good practice to run the &lt;a0&gt;lint&lt;/a0&gt; tool on your layout files to search for possible view hierarchy optimizations.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T092745Z" creationid="pingfangx" creationdate="20191103T092745Z">
        <seg>在布局文件上运行 &lt;a0&gt;lint&lt;/a0&gt; 工具来搜索可能的视图层次结构优化，这是一个好的实践。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It is especially important that layouts that will be inflated multiple times—such as this one—are optimized as the performance benefits will be multiplied.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T092208Z" creationid="pingfangx" creationdate="20191103T092208Z">
        <seg>尤其重要的是，当性能效益成倍增加时，将多次加载的布局(如本布局)将得到优化。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It is hosting a service that the system is using for a particular feature that the user is aware, such as a live wallpaper, input method service, etc.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191029T081132Z" creationid="pingfangx" creationdate="20191029T081132Z">
        <seg>它托管了一个服务，系统正在使用该服务来实现用户知道的特定功能，例如实时墙纸、输入方法服务等。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It is important that application developers understand how different application components (in particular &lt;c0&gt;&lt;a1&gt;Activity&lt;/a1&gt;&lt;/c0&gt;, &lt;c2&gt;&lt;a3&gt;Service&lt;/a3&gt;&lt;/c2&gt;, and &lt;c4&gt;&lt;a5&gt;BroadcastReceiver&lt;/a5&gt;&lt;/c4&gt;) impact the lifetime of the application's process.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191029T074012Z" creationid="pingfangx" creationdate="20191029T074012Z">
        <seg>应用程序开发人员必须了解不同的应用程序组件(特别是 &lt;c0&gt;&lt;a1&gt;Activity&lt;/a1&gt;&lt;/c0&gt;、&lt;c2&gt;&lt;a3&gt;Service&lt;/a3&gt;&lt;/c2&gt; 和 &lt;c4&gt;&lt;a5&gt;BroadcastReceiver&lt;/a5&gt;&lt;/c4&gt;)如何影响应用程序进程的生命周期。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It is just one example of how each layout has appropriate uses and you should carefully consider whether using layout weight is necessary.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T092650Z" creationid="pingfangx" creationdate="20191103T092650Z">
        <seg>这只是每个布局如何有适当使用的一个例子，你应该仔细考虑是否需要使用布局权重。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It is replaced by the inflated layout and the ID for the root view of that layout is the one specified by the &lt;c2&gt;android:inflatedId&lt;/c2&gt; attribute of the ViewStub.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T100120Z" creationid="pingfangx" creationdate="20191103T100120Z">
        <seg>它被加载的布局替换，该布局的根视图的 ID 是由 ViewStub 的 &lt;c2&gt;android:inflatedId&lt;/c2&gt; 属性指定的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It is running an &lt;c0&gt;&lt;a1&gt;Activity&lt;/a1&gt;&lt;/c0&gt; at the top of the screen that the user is interacting with (its &lt;c2&gt;&lt;a3&gt;onResume()&lt;/a3&gt;&lt;/c2&gt; method has been called).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191029T074707Z" creationid="pingfangx" creationdate="20191029T074707Z">
        <seg>它运行的是 &lt;c0&gt;&lt;a1&gt;Activity&lt;/a1&gt;&lt;/c0&gt; 在屏幕的顶部，该用户与交互(其 &lt;c2&gt;&lt;a3&gt;onResume()&lt;/a3&gt;&lt;/c2&gt; 方法被调用)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It is running an &lt;c0&gt;&lt;a1&gt;Activity&lt;/a1&gt;&lt;/c0&gt; that is visible to the user on-screen but not in the foreground (its &lt;c2&gt;&lt;a3&gt;onPause()&lt;/a3&gt;&lt;/c2&gt; method has been called).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191029T081042Z" creationid="pingfangx" creationdate="20191029T081042Z">
        <seg>它运行的是 &lt;c0&gt;&lt;a1&gt;Activity&lt;/a1&gt;&lt;/c0&gt; 在屏幕上对用户可见，但是不在前台(其 &lt;c2&gt;&lt;a3&gt;onPause()&lt;/a3&gt;&lt;/c2&gt; 方法被调用)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It is the fully qualified name of the custom view class.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T065017Z" creationid="pingfangx" creationdate="20191103T065017Z">
        <seg>它是自定义 view 类的完全限定名称。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It makes a best effort to constrain the views to their current positions while allowing flexibility.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T075133Z" creationid="pingfangx" creationdate="20191103T075133Z">
        <seg>它尽最大努力将 view 限制在当前位置，同时允许灵活性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It should be used to help users understand what your application is doing.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T080549Z" creationid="pingfangx" creationdate="20191103T080549Z">
        <seg>它应该用来帮助用户了解你的应用程序正在做什么。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It should be visible only when new items are being imported into the app.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T095714Z" creationid="pingfangx" creationdate="20191103T095714Z">
        <seg>只有当新项目导入到应用程序中时，它才应该可见。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It should try to stay within the specifications passed in, although it can choose to exceed them (in this case, the parent can choose what to do, including clipping, scrolling, throwing an exception, or asking the &lt;c1&gt;onMeasure()&lt;/c1&gt; to try again, perhaps with different measurement specifications).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064053Z" creationid="pingfangx" creationdate="20191103T064053Z">
        <seg>它应该尽量留在传递的规格中，尽管它也可以选择超过它们(在这种情况下，父类会选择一项操作，包括修剪，滚动，抛出异常，让 &lt;c1&gt;onMeasure()&lt;/c1&gt; 重试，也许使用不同的测量规格)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It uses a mix of text, lines, and shapes.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T065655Z" creationid="pingfangx" creationdate="20191103T065655Z">
        <seg>它使用文本，线条和形状的混合。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It's common to divide the x and y velocity by a factor of 4 to 8.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T070211Z" creationid="pingfangx" creationdate="20191103T070211Z">
        <seg>将 x 和 y 速度除以 4 到 8 倍是很常见的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It's customary to put these resources into a &lt;c1&gt;res/values/attrs.xml&lt;/c1&gt; file.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064949Z" creationid="pingfangx" creationdate="20191103T064949Z">
        <seg>习惯上将这些资源放入 &lt;c1&gt;res/values/attrs.xml&lt;/c1&gt; 文件中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It's easy to forget to expose properties and events, especially when you're the only user of the custom view.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T065116Z" creationid="pingfangx" creationdate="20191103T065116Z">
        <seg>很容易忘记公开属性和事件，尤其是当你是自定义view的 唯一用户时。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It's important to note that the &lt;c0&gt;start()&lt;/c0&gt; method called on the &lt;c1&gt;&lt;a2&gt;AnimationDrawable&lt;/a2&gt;&lt;/c1&gt; cannot be called during the &lt;c3&gt;onCreate()&lt;/c3&gt; method of your Activity, because the &lt;c4&gt;&lt;a5&gt;AnimationDrawable&lt;/a5&gt;&lt;/c4&gt; is not yet fully attached to the window.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T103036Z" creationid="pingfangx" creationdate="20191117T103036Z">
        <seg>需要注意的是，在 Activity 的 &lt;c3&gt;onCreate()&lt;/c3&gt; 方法中，无法在 &lt;c1&gt;&lt;a2&gt;AnimationDrawable&lt;/a2&gt;&lt;/c1&gt; 上调用 &lt;c0&gt;start()&lt;/c0&gt; 方法，因为 &lt;c4&gt;&lt;a5&gt;AnimationDrawable&lt;/a5&gt;&lt;/c4&gt; 尚未完全附加到窗口。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It's similar to &lt;a2&gt;&lt;c3&gt;RelativeLayout&lt;/c3&gt;&lt;/a2&gt; in that all views are laid out according to relationships between sibling views and the parent layout, but it's more flexible than &lt;c4&gt;RelativeLayout&lt;/c4&gt; and easier to use with Android Studio's Layout Editor.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T071140Z" creationid="pingfangx" creationdate="20191103T071140Z">
        <seg> 它类似于 &lt;a2&gt;&lt;c3&gt;RelativeLayout&lt;/c3&gt;&lt;/a2&gt; 因为所有视图都是根据兄弟视图和父布局之间的关系来布局的，但它比 &lt;c4&gt;RelativeLayout&lt;/c4&gt; 更灵活，并且更易于与 Android Studio 的布局编辑器一起使用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It's your responsibility to make sure you get and apply new coordinates often enough to make the scrolling animation look smooth.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T070241Z" creationid="pingfangx" creationdate="20191103T070241Z">
        <seg>你有责任确保经常获得并应用新坐标，以使滚动动画看起来流畅。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Java API Framework</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T030211Z" creationid="pingfangx" creationdate="20191030T030211Z">
        <seg>Java API 框架</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Java is a registered trademark of Oracle and/or its affiliates.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T064740Z" creationid="pingfangx" creationdate="20191030T064740Z">
        <seg>Java 是 Oracle 和/或其附属公司的注册商标。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Just as with primitive shapes, paths can be outlined, filled, or both, depending on the &lt;c6&gt;&lt;a7&gt;setStyle()&lt;/a7&gt;&lt;/c6&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T065646Z" creationid="pingfangx" creationdate="20191103T065646Z">
        <seg>与基本形状一样，路径可以是轮廓，填充或两者，具体取决于 &lt;c6&gt;&lt;a7&gt;setStyle()&lt;/a7&gt;&lt;/c6&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Keep the following changes in mind if your app targets Android 7.0 (API level 24) or higher, or if it's installed on devices running Android 7.0 or higher.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T051930Z" creationid="pingfangx" creationdate="20191030T051930Z">
        <seg>如果你的应用针对的是 Android 7.0(API 级别 24)或更高版本，或者安装在运行 Android 7.0 或更高版本的设备上，请记住以下更改。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Keyframe animations</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T075232Z" creationid="pingfangx" creationdate="20191103T075232Z">
        <seg>关键帧动画</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Label your input fields using the &lt;c0&gt;android:contentDescription&lt;/c0&gt; attribute</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T065152Z" creationid="pingfangx" creationdate="20191103T065152Z">
        <seg>使用 &lt;c0&gt;android:contentDescription&lt;/c0&gt; 属性标记输入字段</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Layout</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064129Z" creationid="pingfangx" creationdate="20191103T064129Z">
        <seg>布局</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Layout hierarchy for the layout in figure 1, using &lt;c1&gt;&lt;a2&gt;RelativeLayout&lt;/a2&gt;&lt;/c1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T092553Z" creationid="pingfangx" creationdate="20191103T092553Z">
        <seg>图 1 中布局的布局层次结构，使用 &lt;c1&gt;&lt;a2&gt;RelativeLayout&lt;/a2&gt;&lt;/c1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Layout hierarchy for the layout in figure 1, using nested instances of &lt;c1&gt;&lt;a2&gt;LinearLayout&lt;/a2&gt;&lt;/c1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T092314Z" creationid="pingfangx" creationdate="20191103T092314Z">
        <seg>图 1 中布局的布局层次结构，使用 &lt;c1&gt;&lt;a2&gt;LinearLayout&lt;/a2&gt;&lt;/c1&gt; 的嵌套实例。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Layouts are a key part of Android applications that directly affect the user experience.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T091417Z" creationid="pingfangx" creationdate="20191103T091417Z">
        <seg>布局是 Android 应用程序中直接影响用户体验的关键部分。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Lessons</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T091532Z" creationid="pingfangx" creationdate="20191103T091532Z">
        <seg>课程</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Let's take a detailed look at how the important components of the property animation system would calculate animations like the ones illustrated above.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T082056Z" creationid="pingfangx" creationdate="20191117T082056Z">
        <seg>让我们详细了解一下属性动画系统的重要组件将如何计算与上述动画类似的动画。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Like many other UI frameworks, Android supports an input event model.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T065941Z" creationid="pingfangx" creationdate="20191103T065941Z">
        <seg>与许多其他 UI 框架一样，Android 支持输入事件模型。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Likewise, you need to request a new layout if a property changes that might affect the size or shape of the view.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T065104Z" creationid="pingfangx" creationdate="20191103T065104Z">
        <seg>同样，如果属性更改可能会影响 view 的大小或形状，则需要请求新布局。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Lint automatically runs whenever you compile your program.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T093346Z" creationid="pingfangx" creationdate="20191103T093346Z">
        <seg>Lint 在编译程序时自动运行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Lint has replaced the Layoutopt tool and has much greater functionality.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T092801Z" creationid="pingfangx" creationdate="20191103T092801Z">
        <seg>Lint 已经取代了 Layoutopt 工具，具有更强大的功能。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Lint has the ability to automatically fix some issues, provide suggestions for others and jump directly to the offending code for review.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T093441Z" creationid="pingfangx" creationdate="20191103T093441Z">
        <seg>Lint 能够自动修复一些问题，为其他问题提供建议，并直接跳转到有问题的代码进行检查。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Load the ViewStub Layout</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T095717Z" creationid="pingfangx" creationdate="20191103T095717Z">
        <seg>加载 ViewStub 布局</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Loading Views On Demand</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T091649Z" creationid="pingfangx" creationdate="20191103T091649Z">
        <seg>按需加载视图</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Local Broadcasts can be used as a general purpose pub/sub event bus in your app without any overheads of system wide broadcasts.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T063843Z" creationid="pingfangx" creationdate="20191030T063843Z">
        <seg>本地广播可以用作应用程序中的通用 pub/sub 事件总线，而无需系统范围广播的任何开销。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Make Your Transitions Smooth</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T070313Z" creationid="pingfangx" creationdate="20191103T070313Z">
        <seg>让你的过渡平滑</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Make sure that action names and other strings are written in a namespace you own, or else you may inadvertently conflict with other apps.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T064232Z" creationid="pingfangx" creationdate="20191030T064232Z">
        <seg>请确保操作名和其他字符串是在你自己的命名空间中写入的，否则你可能会无意中与其他应用程序发生冲突。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Make your view hierarchies as shallow as possible.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T070618Z" creationid="pingfangx" creationdate="20191103T070618Z">
        <seg>使你的 view 层次结构尽可能浅。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Making the View Interactive</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T065917Z" creationid="pingfangx" creationdate="20191103T065917Z">
        <seg>使 view 可交互</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Manage motion and widget animation with MotionLayout</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T080155Z" creationid="pingfangx" creationdate="20191103T080155Z">
        <seg>使用 MotionLayout 管理运动和小部件动画</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Manifest-declared receivers</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T052532Z" creationid="pingfangx" creationdate="20191030T052532Z">
        <seg>清单声明接收器</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Many core Android system components and services, such as ART and HAL, are built from native code that require native libraries written in C and C++.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T041335Z" creationid="pingfangx" creationdate="20191030T041335Z">
        <seg>许多核心 Android 系统组件和服务，如 ART 和 HAL，都是由需要用 C 和 C++ 编写的原生库的原生代码构建的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Merge root frame - If a &lt;c0&gt;&lt;a1&gt;FrameLayout&lt;/a1&gt;&lt;/c0&gt; is the root of a layout and does not provide background or padding etc, it can be replaced with a merge tag which is slightly more efficient.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T093133Z" creationid="pingfangx" creationdate="20191103T093133Z">
        <seg>合并根 frame - 如果 &lt;c0&gt;&lt;a1&gt;FrameLayout&lt;/a1&gt;&lt;/c0&gt; 是布局的根，并且不提供背景或内边距等，则可以用稍微更有效的 merge 标签替换它。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Methods</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064103Z" creationid="pingfangx" creationdate="20191103T064103Z">
        <seg>方法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Modern touch UIs define interactions in terms of gestures such as tapping, pulling, pushing, flinging, and zooming.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T065953Z" creationid="pingfangx" creationdate="20191103T065953Z">
        <seg>现代触摸 UI 定义了手势方面的交互，例如点击，拉动，推动，投掷和缩放。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Modifying an Existing View Type</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064415Z" creationid="pingfangx" creationdate="20191103T064415Z">
        <seg>修改一个已存在的 View 类型</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Moreover, it inherently supports &lt;e1&gt;seekable transitions&lt;/e1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T080400Z" creationid="pingfangx" creationdate="20191103T080400Z">
        <seg>此外，它固有地支持 &lt;e1&gt;seekable transitions (可查找转换)&lt;/e1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Most calls to &lt;c2&gt;&lt;a3&gt;onDraw()&lt;/a3&gt;&lt;/c2&gt; are the result of a call to &lt;c4&gt;&lt;a5&gt;invalidate()&lt;/a5&gt;&lt;/c4&gt;, so eliminate unnecessary calls to &lt;c6&gt;&lt;a7&gt;invalidate()&lt;/a7&gt;&lt;/c6&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T070606Z" creationid="pingfangx" creationdate="20191103T070606Z">
        <seg>大多数对 &lt;c2&gt;&lt;a3&gt;onDraw()&lt;/a3&gt;&lt;/c2&gt; 的调用是对 &lt;c4&gt;&lt;a5&gt;invalidate()&lt;/a5&gt;&lt;/c4&gt; 的调用的结果，因此应消除对 &lt;c6&gt;&lt;a7&gt;invalidate()&lt;/a7&gt;&lt;/c6&gt; 的不必要调用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Most of the difference is due to the use of &lt;c0&gt;layout_weight&lt;/c0&gt; in the &lt;c1&gt;&lt;a2&gt;LinearLayout&lt;/a2&gt;&lt;/c1&gt; design, which can slow down the speed of measurement.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T092627Z" creationid="pingfangx" creationdate="20191103T092627Z">
        <seg>大多数差异是由于在 &lt;c1&gt;&lt;a2&gt;LinearLayout&lt;/a2&gt;&lt;/c1&gt; 设计中使用了 &lt;c0&gt;layout_weight&lt;/c0&gt;，这会降低测量速度。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Most views pass the &lt;c0&gt;&lt;a1&gt;Scroller&lt;/a1&gt;&lt;/c0&gt; object's x and y position directly to &lt;c2&gt;&lt;a3&gt;scrollTo()&lt;/a3&gt;&lt;/c2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T070229Z" creationid="pingfangx" creationdate="20191103T070229Z">
        <seg>大多数 view 将 &lt;c0&gt;&lt;a1&gt;Scroller&lt;/a1&gt;&lt;/c0&gt; 对象的 x 和 y 位置直接传递给 &lt;c2&gt;&lt;a3&gt;scrollTo()&lt;/a3&gt;&lt;/c2&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Motion in your app should not be simply a gratuitous special effect in your application.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T080544Z" creationid="pingfangx" creationdate="20191103T080544Z">
        <seg>应用程序中的运动不应只是应用程序中的免费特殊效果。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Motions begin and end smoothly instead of starting and stopping abruptly.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T070402Z" creationid="pingfangx" creationdate="20191103T070402Z">
        <seg>动作开始和结束平滑地而不是突然开始和停止。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Must be a child of a &lt;c0&gt;&lt;animation-list&gt;&lt;/c0&gt; element.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T072908Z" creationid="pingfangx" creationdate="20191117T072908Z">
        <seg>必须是 &lt;c0&gt;&lt;animation-list&gt;&lt;/c0&gt; 元素的子元素。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Native C/C++ Libraries</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T030207Z" creationid="pingfangx" creationdate="20191030T030207Z">
        <seg>原生 C/C++ 库</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Near the top of the &lt;b0&gt;Attributes&lt;/b0&gt; window is the view inspector, which includes controls for several layout attributes, as shown in figure 14 (this is available only for views in a constraint layout).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T074059Z" creationid="pingfangx" creationdate="20191103T074059Z">
        <seg>在 &lt;b0&gt;Attributes&lt;/b0&gt; 窗口的顶部附近是视图检查器，它包括几个布局属性的控件，如图 14 所示(这仅适用于约束布局中的视图)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Never make an allocation while an animation is running.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T070602Z" creationid="pingfangx" creationdate="20191103T070602Z">
        <seg>永远不要在动画运行时进行分配。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>No attributes</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T072542Z" creationid="pingfangx" creationdate="20191117T072542Z">
        <seg>没有属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>No attributes.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T072408Z" creationid="pingfangx" creationdate="20191117T072408Z">
        <seg>没有属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Note also that the inner class we defined is referenced using the &lt;c0&gt;NoteEditor$LinedEditText&lt;/c0&gt; notation which is a standard way to refer to inner classes in the Java programming language.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064538Z" creationid="pingfangx" creationdate="20191103T064538Z">
        <seg>另请注意，我们定义的内部类是使用 &lt;c0&gt;NoteEditor$LinedEditText&lt;/c0&gt; 表示法引用的，这是一种在 Java 编程语言中引用内部类的标准方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Note that &lt;c0&gt;&lt;a1&gt;TypedArray&lt;/a1&gt;&lt;/c0&gt; objects are a shared resource and must be recycled after use.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T065052Z" creationid="pingfangx" creationdate="20191103T065052Z">
        <seg>请注意，&lt;c0&gt;&lt;a1&gt;TypedArray&lt;/a1&gt;&lt;/c0&gt; 对象是共享资源，必须在使用后回收。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Note that definitions in the MotionScene take precedence over any similar definitions in the &lt;c5&gt;MotionLayout&lt;/c5&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T080830Z" creationid="pingfangx" creationdate="20191103T080830Z">
        <seg>请注意，MotionScene 中的定义优先于 &lt;c5&gt;MotionLayout&lt;/c5&gt; 中的任何类似定义。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Note that it is possible to add your own parameters as well, and we will touch on this again below.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064600Z" creationid="pingfangx" creationdate="20191103T064600Z">
        <seg>注意，你也可以添加自己的参数，我们将在后面再讨论。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Note that just like with an Activity, you can use either the declarative (XML-based) approach to creating the contained components, or you can nest them programmatically from your code.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064239Z" creationid="pingfangx" creationdate="20191103T064239Z">
        <seg>注意，就像 Activity 一样，你既可以用申明的方式来创建这种容器组件(基于 XML)，也可以在代码中用编程的方式嵌套它们。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Note that the constraint turns red to indicate that you can click to delete it, as shown in figure 5.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T072435Z" creationid="pingfangx" creationdate="20191103T072435Z">
        <seg>注意，约束变为红色表示你可以单击以删除它，如图 5 所示。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Note that the latest version might be different than what is shown in the example:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T071709Z" creationid="pingfangx" creationdate="20191103T071709Z">
        <seg>请注意，最新版本可能与示例中显示的不同：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Note that when specifying a custom attribute, you must define endpoint values in both the start and end &lt;c0&gt;&lt;ConstraintSet&gt;&lt;/c0&gt; elements.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T081417Z" creationid="pingfangx" creationdate="20191103T081417Z">
        <seg>请注意，在指定自定义属性时，必须在 start 和 end &lt;c0&gt;&lt;ConstraintSet&gt;&lt;/c0&gt; 元素中定义端点值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Note that you also might introduce your own attributes and parameters into the XML that can be pulled out and used by your constructor.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064246Z" creationid="pingfangx" creationdate="20191103T064246Z">
        <seg>注意，你也可以在 XML 文件中引入一些自己的属性和参数，然后在构造方法中取出来使用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Note the following:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T080903Z" creationid="pingfangx" creationdate="20191103T080903Z">
        <seg>请注意以下几点：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Notice that &lt;c0&gt;setShowText&lt;/c0&gt; calls &lt;c1&gt;&lt;a2&gt;invalidate()&lt;/a2&gt;&lt;/c1&gt; and &lt;c3&gt;&lt;a4&gt;requestLayout()&lt;/a4&gt;&lt;/c3&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T065101Z" creationid="pingfangx" creationdate="20191103T065101Z">
        <seg>请注意，&lt;c0&gt;setShowText&lt;/c0&gt; 调用 &lt;c1&gt;&lt;a2&gt;invalidate()&lt;/a2&gt;&lt;/c1&gt; 和 &lt;c3&gt;&lt;a4&gt;requestLayout()&lt;/a4&gt;&lt;/c3&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Notice that as you drag the constraint handle, the Layout Editor shows potential connection anchors and blue overlays.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T072109Z" creationid="pingfangx" creationdate="20191103T072109Z">
        <seg>请注意，拖动约束控制柄时，布局编辑器将显示潜在的连接定位点和蓝色覆盖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Notice that each &lt;c0&gt;&lt;a1&gt;Interpolator&lt;/a1&gt;&lt;/c0&gt; implementation, when defined in XML, begins its name in lowercase.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T072347Z" creationid="pingfangx" creationdate="20191117T072347Z">
        <seg>注意，每个 &lt;c0&gt;&lt;a1&gt;Interpolator&lt;/a1&gt;&lt;/c0&gt; 实现在用 XML 定义时，都以小写开头。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Notice that the &lt;c0&gt;LinedEditText&lt;/c0&gt; class is now a separate class file.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064555Z" creationid="pingfangx" creationdate="20191103T064555Z">
        <seg>注意此时的 &lt;c0&gt;LinedEditText&lt;/c0&gt; 类是一个独立的类文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Notice the name of the XML tag that adds the custom view to the layout.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T065014Z" creationid="pingfangx" creationdate="20191103T065014Z">
        <seg>请注意将自定义 view 添加到布局的 XML 标记的名称。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Now that you have a well-designed view that responds to gestures and transitions between states, ensure that the view runs fast.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T070530Z" creationid="pingfangx" creationdate="20191103T070530Z">
        <seg>既然你有一个精心设计的 view 来响应手势和状态之间的转换，请确保 view 快速运行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Now the entire size is dictated by the height of the view (which can be defined in any way) as shown in figure 15.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T074609Z" creationid="pingfangx" creationdate="20191103T074551Z">
        <seg>现在整个尺寸由 view 的高度(其可以以任何方式定义)来决定，如图 15 所示。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Now you can create a constraint from another view to the barrier.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T073648Z" creationid="pingfangx" creationdate="20191103T073648Z">
        <seg>现在可以从另一个视图创建到屏障的约束。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Now you're ready to build your layout with &lt;c0&gt;ConstraintLayout&lt;/c0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T071712Z" creationid="pingfangx" creationdate="20191103T071712Z">
        <seg>现在你已经准备好用 &lt;c0&gt;ConstraintLayout&lt;/c0&gt; 来构建布局了。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Now, when you include this layout in another layout (using the &lt;c0&gt;&lt;include/&gt;&lt;/c0&gt; tag), the system ignores the &lt;c1&gt;&lt;merge&gt;&lt;/c1&gt; element and places the two buttons directly in the layout, in place of the &lt;c2&gt;&lt;include/&gt;&lt;/c2&gt; tag.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T095229Z" creationid="pingfangx" creationdate="20191103T095229Z">
        <seg>现在，当你在另一个布局中包含此布局时(使用 &lt;c0&gt;&lt;include/&gt;&lt;/c0&gt; 标签)，系统将忽略 &lt;c1&gt;&lt;merge&gt;&lt;/c1&gt; 元素，并将两个按钮直接放置在布局中，而不是 &lt;c2&gt;&lt;include/&gt;&lt;/c2&gt; 标签。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Objects should always act in the same way that real objects do.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T065923Z" creationid="pingfangx" creationdate="20191103T065923Z">
        <seg>对象应始终以与真实对象相同的方式起作用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>On Android 4.4 (API level 19) and higher, you can use the transition framework to create animations when you swap the layout within the current activity or fragment.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T055037Z" creationid="pingfangx" creationdate="20191117T055037Z">
        <seg>在 Android 4.4(API 级别 19)及更高版本上，当你交换当前 activity 或 fragment 中的布局时，可以使用过渡框架来创建动画。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>On Android 5.0 (API level 21) and higher, you can also create animations that transition between your activities.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T055838Z" creationid="pingfangx" creationdate="20191117T055838Z">
        <seg>在 Android 5.0(API 级别 21)及更高版本上，你还可以创建在 activity 之间过渡的动画。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Once completed, your new extension class can be used in place of the view upon which it was based.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T063924Z" creationid="pingfangx" creationdate="20191103T063924Z">
        <seg>一旦完成，你的新继承类就可以用来代替它的基类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Once it returns, the system considers the BroadcastReceiver to be no longer active, and thus, its hosting process no longer needed (unless other application components are active in it).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191029T074240Z" creationid="pingfangx" creationdate="20191029T074240Z">
        <seg>一旦返回，系统将认为广播接收器不再处于活动状态，因此不再需要其宿主进程(除非其他应用程序组件在其中处于活动状态)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Once the width and height are calculated, the &lt;c0&gt;setMeasuredDimension(int width, int height)&lt;/c0&gt; method must be called with the calculated measurements.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064057Z" creationid="pingfangx" creationdate="20191103T064057Z">
        <seg>一旦计算出了宽度和高度，必须用计算的结果调用 &lt;c0&gt;setMeasuredDimension(int width, int height)&lt;/c0&gt; 方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Once visible/inflated, the &lt;c0&gt;&lt;a1&gt;ViewStub&lt;/a1&gt;&lt;/c0&gt; element is no longer part of the view hierarchy.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T100055Z" creationid="pingfangx" creationdate="20191103T100047Z">
        <seg>一旦可见/加载，&lt;c0&gt;&lt;a1&gt;ViewStub&lt;/a1&gt;&lt;/c0&gt; 元素就不再是视图层次结构的一部分。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Once you define the custom attributes, you can use them in layout XML files just like built-in attributes.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064959Z" creationid="pingfangx" creationdate="20191103T064959Z">
        <seg>定义自定义属性后，可以像布局属性一样在布局 XML 文件中使用它们。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Once you have your object creation and measuring code defined, you can implement &lt;c0&gt;&lt;a1&gt;onDraw()&lt;/a1&gt;&lt;/c0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T065636Z" creationid="pingfangx" creationdate="20191103T065636Z">
        <seg>一旦定义了对象创建和测量代码，就可以实现 &lt;c0&gt;&lt;a1&gt;onDraw()&lt;/a1&gt;&lt;/c0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Once you've implemented &lt;c17&gt;&lt;a18&gt;GestureDetector.OnGestureListener&lt;/a18&gt;&lt;/c17&gt; and created an instance of &lt;c19&gt;&lt;a20&gt;GestureDetector&lt;/a20&gt;&lt;/c19&gt;, you can use your &lt;c21&gt;&lt;a22&gt;GestureDetector&lt;/a22&gt;&lt;/c21&gt; to interpret the touch events you receive in &lt;c23&gt;&lt;a24&gt;onTouchEvent()&lt;/a24&gt;&lt;/c23&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T070041Z" creationid="pingfangx" creationdate="20191103T070041Z">
        <seg>一旦实现了 &lt;c17&gt;&lt;a18&gt;GestureDetector.OnGestureListener&lt;/a18&gt;&lt;/c17&gt; 并创建了 &lt;c19&gt;&lt;a20&gt;GestureDetector&lt;/a20&gt;&lt;/c19&gt; 的实例，就可以使用 &lt;c21&gt;&lt;a22&gt;GestureDetector&lt;/a22&gt;&lt;/c21&gt; 解释你在 &lt;c23&gt;&lt;a24&gt;onTouchEvent()&lt;/a24&gt;&lt;/c23&gt; 中收到的触摸事件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Once your code returns from this method, the system considers the component no longer active.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T053505Z" creationid="pingfangx" creationdate="20191030T053505Z">
        <seg>一旦代码从此方法返回后，系统将认为该组件不再处于活动状态。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>One drawback of &lt;c1&gt;&lt;a2&gt;ViewStub&lt;/a2&gt;&lt;/c1&gt; is that it doesn’t currently support the &lt;c3&gt;&lt;merge&gt;&lt;/c3&gt; tag in the layouts to be inflated.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T100215Z" creationid="pingfangx" creationdate="20191103T100215Z">
        <seg>&lt;c1&gt;&lt;a2&gt;ViewStub&lt;/a2&gt;&lt;/c1&gt; 的一个缺点是它当前不支持要加载的布局中的 &lt;c3&gt;&lt;merge&gt;&lt;/c3&gt; 标签。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>One or more object animators with the &lt;c0&gt;&lt;objectAnimator&gt;&lt;/c0&gt; element in &lt;c1&gt;res/animator/&lt;/c1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T113616Z" creationid="pingfangx" creationdate="20191117T113616Z">
        <seg>&lt;c1&gt;res/animator/&lt;/c1&gt; 中使用 &lt;c0&gt;&lt;objectAnimator&gt;&lt;/c0&gt; 元素声明的一个或多个对象动画</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>One way to animate &lt;c0&gt;&lt;a1&gt;Drawables&lt;/a1&gt;&lt;/c0&gt; is to load a series of Drawable resources one after another to create an animation.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T102344Z" creationid="pingfangx" creationdate="20191117T102344Z">
        <seg>动画化 &lt;c0&gt;&lt;a1&gt;Drawables&lt;/a1&gt;&lt;/c0&gt; 的一种方法是逐个加载一系列 Drawable 资源来创建动画。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Only in very critical (and undesireable) situations will the system get to a point where all cached processes are killed and it must start killing service processes.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191029T081439Z" creationid="pingfangx" creationdate="20191029T081439Z">
        <seg>只有在非常关键(且不希望发生)的情况下，系统才会达到这样的程度：所有缓存的进程都将被终止，它必须开始终止服务进程。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Only receivers who have requested that permission with the &lt;u4&gt; tag in their manifest (and subsequently been granted the permission if it is dangerous) can receive the broadcast.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T062516Z" creationid="pingfangx" creationdate="20191030T062018Z">
        <seg>只有在其清单中使用 &lt;u4&gt; 标记请求该权限的接收器(如果是危险权限，则需要随后被授予该权限)才能接收广播。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Open your layout in Android Studio and click the &lt;s0&gt;Design&lt;/s0&gt; tab at the bottom of the editor window.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T071720Z" creationid="pingfangx" creationdate="20191103T071720Z">
        <seg>在 Android Studio 打开你的布局，点击编辑窗口底部的 &lt;s0&gt;Design&lt;/s0&gt; 标签。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Optimized garbage collection (GC)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T034101Z" creationid="pingfangx" creationdate="20191030T034101Z">
        <seg>优化垃圾回收(GC)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Optimizing Layout Hierarchies</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T091538Z" creationid="pingfangx" creationdate="20191103T091538Z">
        <seg>优化布局层次结构</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Optimizing the View</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T070527Z" creationid="pingfangx" creationdate="20191103T070527Z">
        <seg>优化视图</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Or see the following pages to create common animations:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T053929Z" creationid="pingfangx" creationdate="20191117T053929Z">
        <seg>或查看以下页面以创建常用动画：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Or your receiving app has a context-registered receiver as shown below:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T062956Z" creationid="pingfangx" creationdate="20191030T062956Z">
        <seg>或者你的接收应用程序有一个上下文注册的接收器，如下所示：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Order position</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T072538Z" creationid="pingfangx" creationdate="20191103T072538Z">
        <seg>顺序定位</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Other &lt;c0&gt;on...&lt;/c0&gt; methods may also be overridden as required.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064014Z" creationid="pingfangx" creationdate="20191103T064014Z">
        <seg>如果需要，其他的 &lt;c0&gt;on...&lt;/c0&gt; 方法也可能需要重写。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Other policies for killing processes may also be applied: hard limits on the number of processes allowed, limits on the amount of time a process can stay continually cached, etc.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191029T081836Z" creationid="pingfangx" creationdate="20191029T081836Z">
        <seg>还可以应用其他用于终止进程的策略：对允许的进程数的硬限制、对进程可以持续缓存的时间的限制等等。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Overridden Methods</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064511Z" creationid="pingfangx" creationdate="20191103T064511Z">
        <seg>重写方法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Override some of the methods from the superclass.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T063906Z" creationid="pingfangx" creationdate="20191103T063906Z">
        <seg>重写父类的一些方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Override this method to handle the event:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T065946Z" creationid="pingfangx" creationdate="20191103T065946Z">
        <seg>重写此方法以处理事件：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Parent position</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T072522Z" creationid="pingfangx" creationdate="20191103T072522Z">
        <seg>父布局位置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Performs an animation over a specified amount of time.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T063811Z" creationid="pingfangx" creationdate="20191117T063811Z">
        <seg>在指定的时间内执行动画。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Perhaps a graphical VU meter that looks like an old analog gauge, or a sing-a-long text view where a bouncing ball moves along the words so you can sing along with a karaoke machine.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T063936Z" creationid="pingfangx" creationdate="20191103T063936Z">
        <seg>比如看起来像一个老的模拟表的 VU 图表，或者一个有一个跟随歌词跳动的小球的 text view，就像一个卡拉 ok 机。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Perhaps in the case of a Combo box we might use a LinearLayout with horizontal orientation.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064231Z" creationid="pingfangx" creationdate="20191103T064231Z">
        <seg>也许在这种情况下，我们可能使用水平方向的 LinearLayout（线性布局）来完成 Combo box。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Permissions allow you to restrict broadcasts to the set of apps that hold certain permissions.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T061858Z" creationid="pingfangx" creationdate="20191030T061858Z">
        <seg>权限允许你将广播限制为具有特定权限的应用程序集。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Physics-based motion</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T054200Z" creationid="pingfangx" creationdate="20191117T054200Z">
        <seg>基于物理的运动</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PieChart has child views, but it never measures them.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T070625Z" creationid="pingfangx" creationdate="20191103T070625Z">
        <seg>PieChart 有子 view，但它从不测量它们。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Platform Architecture</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T030103Z" creationid="pingfangx" creationdate="20191030T030103Z">
        <seg>平台架构</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Play animations in this set at the same time.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T063002Z" creationid="pingfangx" creationdate="20191117T063002Z">
        <seg>同时播放此集中的动画。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Play animations in this set sequentially</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T062949Z" creationid="pingfangx" creationdate="20191117T062949Z">
        <seg>按顺序播放此集中的动画</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Possible values are "SHOW_PROGRESS", "SHOW_PATH", or "SHOW_ALL".</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T081633Z" creationid="pingfangx" creationdate="20191103T081633Z">
        <seg>可能的值是 “SHOW_PROGRESS”，“SHOW_PATH”，或 “SHOW_ALL”。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Potential effects on UI performance</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T094144Z" creationid="pingfangx" creationdate="20191117T094144Z">
        <seg>对 UI 性能的潜在影响</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Press and hold &lt;c0&gt;Control&lt;/c0&gt; (&lt;c1&gt;Command&lt;/c1&gt; on macOS), and then click on a constraint anchor.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T072427Z" creationid="pingfangx" creationdate="20191103T072427Z">
        <seg>按住 &lt;c0&gt;Control&lt;/c0&gt;(&lt;c1&gt;Command&lt;/c1&gt; 在 macOS)，然后点击一个约束锚。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Prior to Android version 5.0 (API level 21), Dalvik was the Android runtime.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T034234Z" creationid="pingfangx" creationdate="20191030T034234Z">
        <seg>在 Android 版本 5.0(API 级别 21)之前，Dalvik 是 Android 运行时。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Processes and Application Life Cycle</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191029T073556Z" creationid="pingfangx" creationdate="20191029T073556Z">
        <seg>进程和应用生命周期</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Processes and Application Lifecycle</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191029T081853Z" creationid="pingfangx" creationdate="20191029T081853Z">
        <seg>进程和应用生命周期</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Property Animation</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T060941Z" creationid="pingfangx" creationdate="20191117T060941Z">
        <seg>属性动画</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Property Animation Overview</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T075921Z" creationid="pingfangx" creationdate="20191117T075921Z">
        <seg>属性动画概览</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Property animation</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T061536Z" creationid="pingfangx" creationdate="20191117T061536Z">
        <seg>属性动画</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Provide custom styleable attributes that work with Android XML layouts</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064846Z" creationid="pingfangx" creationdate="20191103T064846Z">
        <seg>提供适用于 Android XML 布局的自定义 styleable 属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Provided they implement their Activity life-cycle correctly (see &lt;c4&gt;&lt;a5&gt;Activity&lt;/a5&gt;&lt;/c4&gt; for more details), when the system kills such processes it will not impact the user's experience when returning to that app: it can restore the previously saved state when the associated activity is recreated in a new process.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191029T081625Z" creationid="pingfangx" creationdate="20191029T081625Z">
        <seg>如果他们正确地实现了他们的 Activity 生命周期(请参见活动 &lt;c4&gt;&lt;a5&gt;Activity&lt;/a5&gt;&lt;/c4&gt; 了解更多详细信息)，那么当系统终止这些进程时，返回到该应用程序时不会影响用户的体验：当在新进程中重新创建关联的 Activity 时，它可以恢复先前保存的状态。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Provided they implement their Activity life-cycle correctly (see &lt;c5&gt;&lt;a6&gt;Activity&lt;/a6&gt;&lt;/c5&gt; for more details), the system can kill such processes at any time to reclaim memory for one of the three previous processes types.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191029T075342Z" creationid="pingfangx" creationdate="20191029T075342Z">
        <seg>如果它们正确地实现其 Activity 生命周期(请参见活动 &lt;c5&gt;&lt;a6&gt;Activity&lt;/a6&gt;&lt;/c5&gt; 了解更多详细信息)，系统可以随时终止此类进程，以回收内存用于前三种进程类型之一。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Provides a mechanism to group animations together so that they run in relation to one another.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T093524Z" creationid="pingfangx" creationdate="20191117T093524Z">
        <seg>提供一种机制，将动画分组在一起，以便它们彼此相对地运行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Re-using Layouts with &lt;include/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T091621Z" creationid="pingfangx" creationdate="20191103T091621Z">
        <seg>使用 &lt;include/&gt; 重用布局</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Re-using layouts with &lt;include/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T094328Z" creationid="pingfangx" creationdate="20191103T094328Z">
        <seg>使用 &lt;include/&gt; 重用布局</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Receiving broadcasts</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T052227Z" creationid="pingfangx" creationdate="20191030T052227Z">
        <seg>接收广播</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Receiving with permissions</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T062240Z" creationid="pingfangx" creationdate="20191030T062240Z">
        <seg>带权限接收</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Regardless of how your animation may move or resize, the bounds of the View that holds your animation will not automatically adjust to accommodate it.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T075628Z" creationid="pingfangx" creationdate="20191117T075628Z">
        <seg>无论动画如何移动或调整大小，保存动画的视图的边界都不会自动调整以适应它。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Remember that other layouts can be nested inside, so the compound component can be arbitrarily complex and structured.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064234Z" creationid="pingfangx" creationdate="20191103T064234Z">
        <seg>请记住其他的布局可以在内部任意嵌套，所以组件可以任意的复杂和构造。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Repeat count and behavior: You can specify whether or not to have an animation repeat when it reaches the end of a duration and how many times to repeat the animation.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T080135Z" creationid="pingfangx" creationdate="20191117T080135Z">
        <seg>重复次数和行为：可以指定动画在到达持续时间结束时是否重复，以及重复动画的次数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Repeats the animation for a specified number of cycles.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T072548Z" creationid="pingfangx" creationdate="20191117T072548Z">
        <seg>在指定的周期数内重复动画。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Represents a &lt;c0&gt;&lt;a1&gt;RotateAnimation&lt;/a1&gt;&lt;/c0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T071650Z" creationid="pingfangx" creationdate="20191117T071650Z">
        <seg>表示 &lt;c0&gt;&lt;a1&gt;RotateAnimation&lt;/a1&gt;&lt;/c0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Represents a &lt;c0&gt;&lt;a1&gt;TranslateAnimation&lt;/a1&gt;&lt;/c0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T071357Z" creationid="pingfangx" creationdate="20191117T071357Z">
        <seg>表示 &lt;c0&gt;&lt;a1&gt;TranslateAnimation&lt;/a1&gt;&lt;/c0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Represents a &lt;c0&gt;&lt;a1&gt;ValueAnimator&lt;/a1&gt;&lt;/c0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T063819Z" creationid="pingfangx" creationdate="20191117T063819Z">
        <seg>表示 &lt;c0&gt;&lt;a1&gt;ValueAnimator&lt;/a1&gt;&lt;/c0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Represents a &lt;c2&gt;&lt;a3&gt;ScaleAnimation&lt;/a3&gt;&lt;/c2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T071231Z" creationid="pingfangx" creationdate="20191117T071231Z">
        <seg>表示 &lt;c2&gt;&lt;a3&gt;ScaleAnimation&lt;/a3&gt;&lt;/c2&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Represents an &lt;c0&gt;&lt;a1&gt;AlphaAnimation&lt;/a1&gt;&lt;/c0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T071050Z" creationid="pingfangx" creationdate="20191117T071050Z">
        <seg>表示 &lt;c0&gt;&lt;a1&gt;AlphaAnimation&lt;/a1&gt;&lt;/c0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Represents an &lt;c0&gt;&lt;a1&gt;ObjectAnimator&lt;/a1&gt;&lt;/c0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T063015Z" creationid="pingfangx" creationdate="20191117T063015Z">
        <seg>表示 &lt;c0&gt;&lt;a1&gt;ObjectAnimator&lt;/a1&gt;&lt;/c0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Represents an &lt;c3&gt;&lt;a4&gt;AnimatorSet&lt;/a4&gt;&lt;/c3&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T062854Z" creationid="pingfangx" creationdate="20191117T062854Z">
        <seg>表示 &lt;c3&gt;&lt;a4&gt;AnimatorSet&lt;/a4&gt;&lt;/c3&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Represents an &lt;c5&gt;&lt;a6&gt;AnimationSet&lt;/a6&gt;&lt;/c5&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T070019Z" creationid="pingfangx" creationdate="20191117T070019Z">
        <seg>表示 &lt;c5&gt;&lt;a6&gt;AnimationSet&lt;/a6&gt;&lt;/c5&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Resource ID</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T072126Z" creationid="pingfangx" creationdate="20191117T072126Z">
        <seg>资源 ID</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Resource pointer to a &lt;c0&gt;&lt;a1&gt;ValueAnimator&lt;/a1&gt;&lt;/c0&gt;, &lt;c2&gt;&lt;a3&gt;ObjectAnimator&lt;/a3&gt;&lt;/c2&gt;, or &lt;c4&gt;&lt;a5&gt;AnimatorSet&lt;/a5&gt;&lt;/c4&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T062619Z" creationid="pingfangx" creationdate="20191117T062619Z">
        <seg>指向 &lt;c0&gt;&lt;a1&gt;ValueAnimator&lt;/a1&gt;&lt;/c0&gt;，&lt;c2&gt;&lt;a3&gt;ObjectAnimator&lt;/a3&gt;&lt;/c2&gt; 或 &lt;c4&gt;&lt;a5&gt;AnimatorSet&lt;/a5&gt;&lt;/c4&gt; 的资源指针。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Resource pointer to an &lt;c0&gt;&lt;a1&gt;Animation&lt;/a1&gt;&lt;/c0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T065832Z" creationid="pingfangx" creationdate="20191117T065832Z">
        <seg>指向 &lt;c0&gt;&lt;a1&gt;Animation&lt;/a1&gt;&lt;/c0&gt; 的资源指针。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Resource pointer to an &lt;c0&gt;&lt;a1&gt;AnimationDrawable&lt;/a1&gt;&lt;/c0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T072750Z" creationid="pingfangx" creationdate="20191117T072750Z">
        <seg>指向 &lt;c0&gt;&lt;a1&gt;AnimationDrawable&lt;/a1&gt;&lt;/c0&gt; 的资源指针。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Resource pointer to the corresponding interpolator object.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T072259Z" creationid="pingfangx" creationdate="20191117T072259Z">
        <seg>指向相应插值器对象的资源指针。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Resource references within attribute values are not resolved</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T065030Z" creationid="pingfangx" creationdate="20191103T065030Z">
        <seg>未解析属性值中的资源引用</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Restricting broadcasts with permissions</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T061850Z" creationid="pingfangx" creationdate="20191030T061850Z">
        <seg>使用权限限制广播</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Retrieve attribute values at runtime</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064938Z" creationid="pingfangx" creationdate="20191103T064938Z">
        <seg>在运行时获取属性值</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Reusing layouts is particularly powerful as it allows you create reusable complex layouts.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T094409Z" creationid="pingfangx" creationdate="20191103T094409Z">
        <seg>重用布局特别强大，因为它允许你创建可重用的复杂布局。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Revise Your Layout</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T092414Z" creationid="pingfangx" creationdate="20191103T092414Z">
        <seg>修改布局</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Scheduling a job with the &lt;c0&gt;&lt;a1&gt;JobScheduler&lt;/a1&gt;&lt;/c0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T064640Z" creationid="pingfangx" creationdate="20191030T064640Z">
        <seg>使用 &lt;c0&gt;&lt;a1&gt;JobScheduler&lt;/a1&gt;&lt;/c0&gt; 调度作业。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Screen coordinates (not used in this example) are (0,0) at the upper left hand corner, and increase as you go down and to the right.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T075340Z" creationid="pingfangx" creationdate="20191117T075340Z">
        <seg>屏幕坐标(本例中未使用)位于左上角(0,0)，并随着向下和向右移动而增加。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Security considerations and best practices</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T063024Z" creationid="pingfangx" creationdate="20191030T063018Z">
        <seg>安全考虑和最佳做法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>See &lt;a4&gt;Using interpolators&lt;/a4&gt; for more information on how to write a custom interpolator.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T093955Z" creationid="pingfangx" creationdate="20191117T093955Z">
        <seg>有关如何编写自定义插值程序的详细信息，请参见 &lt;a4&gt;Using interpolators&lt;/a4&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>See the &lt;c0&gt;&lt;a1&gt;Activity&lt;/a1&gt;&lt;/c0&gt;, &lt;c2&gt;&lt;a3&gt;Service&lt;/a3&gt;&lt;/c2&gt;, and &lt;c4&gt;&lt;a5&gt;BroadcastReceiver&lt;/a5&gt;&lt;/c4&gt; documentation for more detail on how each of these components contribute to the overall life-cycle of a process.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191029T080316Z" creationid="pingfangx" creationdate="20191029T080316Z">
        <seg>查看 &lt;c0&gt;&lt;a1&gt;Activity&lt;/a1&gt;&lt;/c0&gt;，&lt;c2&gt;&lt;a3&gt;Service&lt;/a3&gt;&lt;/c2&gt; 和 &lt;c4&gt;&lt;a5&gt;BroadcastReceiver&lt;/a5&gt;&lt;/c4&gt; 文档，了解每个组件有助于进程的整体生命周期的更多细节。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>See the GLSurfaceViewActivity sample for details.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064026Z" creationid="pingfangx" creationdate="20191103T064026Z">
        <seg>更多细节可以查看 GLSurfaceViewActivity sample。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>See the discussion below for more about &lt;a3&gt;Interpolators&lt;/a3&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T070944Z" creationid="pingfangx" creationdate="20191117T070944Z">
        <seg>有关 &lt;a3&gt;Interpolators&lt;/a3&gt; 的详细信息，请参见下面的讨论。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>See the section about &lt;a0&gt;Choreographing multiple animations with Animator Sets&lt;/a0&gt; for more information.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T093542Z" creationid="pingfangx" creationdate="20191117T093542Z">
        <seg>有关详细信息，请参见关于 &lt;a0&gt;Choreographing multiple animations with Animator Sets&lt;/a0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>See the section about &lt;a4&gt;Animating with ValueAnimator&lt;/a4&gt; for more information.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T093157Z" creationid="pingfangx" creationdate="20191117T093157Z">
        <seg>有关详细信息，请参见 &lt;a4&gt;Animating with ValueAnimator&lt;/a4&gt; 部分。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>See the section about &lt;a9&gt;Using a TypeEvaluator&lt;/a9&gt; for more information on how to write a custom evaluator.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T093839Z" creationid="pingfangx" creationdate="20191117T093839Z">
        <seg>有关如何编写自定义计算器的详细信息，请参见关于 &lt;a9&gt;Using a TypeEvaluator&lt;/a9&gt; 部分。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Select the barrier from the &lt;b0&gt;Component Tree&lt;/b0&gt;, open the &lt;b1&gt;Attributes&lt;/b1&gt; &lt;i2/&gt; window, and then set the &lt;b3&gt;barrierDirection&lt;/b3&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T073641Z" creationid="pingfangx" creationdate="20191103T073641Z">
        <seg>从 &lt;b0&gt;Component Tree&lt;/b0&gt; 中选择屏障，打开 &lt;b1&gt;Attributes&lt;/b1&gt; &lt;i2/&gt; 窗口，然后设置 &lt;b3&gt;barrierDirection&lt;/b3&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Send accessibility events</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T065234Z" creationid="pingfangx" creationdate="20191103T064854Z">
        <seg>发送无障碍事件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Send accessibility events by calling &lt;c0&gt;&lt;a1&gt;sendAccessibilityEvent()&lt;/a1&gt;&lt;/c0&gt; when appropriate.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T065159Z" creationid="pingfangx" creationdate="20191103T065159Z">
        <seg>适当时通过调用 &lt;c0&gt;&lt;a1&gt;sendAccessibilityEvent()&lt;/a1&gt;&lt;/c0&gt; 发送无障碍事件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Sending broadcasts</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T055243Z" creationid="pingfangx" creationdate="20191030T055243Z">
        <seg>发送广播</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Sending with permissions</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T061910Z" creationid="pingfangx" creationdate="20191030T061910Z">
        <seg>使用权限发送</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Services that have been running for a long time (such as 30 minutes or more) may be demoted in importance to allow their process to drop to the cached LRU list described next.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191029T081312Z" creationid="pingfangx" creationdate="20191029T081312Z">
        <seg>运行了很长时间(如 30 分钟或更长)的服务可能会被降级，以允许其进程降到下面描述的缓存的 LRU 列表中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Set size as a ratio</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T074524Z" creationid="pingfangx" creationdate="20191103T074524Z">
        <seg>将大小设置为比例</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Set to &lt;c1&gt;"-1"&lt;/c1&gt; to infinitely repeat or to a positive integer.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T063500Z" creationid="pingfangx" creationdate="20191117T063500Z">
        <seg>设为 &lt;c1&gt;"-1"&lt;/c1&gt; 可无限重复或设为正整数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Set to &lt;c3&gt;"reverse"&lt;/c3&gt; to have the animation reverse direction with each iteration or &lt;c4&gt;"repeat"&lt;/c4&gt; to have the animation loop from the beginning each time.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T063550Z" creationid="pingfangx" creationdate="20191117T063550Z">
        <seg>设置为 &lt;c3&gt;"reverse"&lt;/c3&gt; 可使动画在每次迭代时反转方向，或设置为 &lt;c4&gt;"repeat"&lt;/c4&gt; 可使动画循环每次从头开始。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Set up a &lt;c0&gt;&lt;a1&gt;ValueAnimator&lt;/a1&gt;&lt;/c0&gt; to animate for the duration of the fling, and add a listener to process animation updates by calling &lt;c2&gt;&lt;a3&gt;addUpdateListener()&lt;/a3&gt;&lt;/c2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T070254Z" creationid="pingfangx" creationdate="20191103T070254Z">
        <seg>设置 &lt;c0&gt;&lt;a1&gt;ValueAnimator&lt;/a1&gt;&lt;/c0&gt; 以在 fling 持续时间内设置动画，并通过调用 &lt;c2&gt;&lt;a3&gt;addUpdateListener()&lt;/a3&gt;&lt;/c2&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Setting it to reverse plays the animation forwards then backwards repeatedly, until the number of repeats is reached.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T080212Z" creationid="pingfangx" creationdate="20191117T080212Z">
        <seg>将其设置为“反向”(reverse)将反复向前和向后播放动画，直到达到重复次数为止。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Similar to a guideline, a barrier is an invisible line that you can constrain views to.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T073322Z" creationid="pingfangx" creationdate="20191103T073322Z">
        <seg>与参考线类似，屏障是一种无形的线，你可以约束 view。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Simply put, &lt;c8&gt;&lt;a9&gt;Canvas&lt;/a9&gt;&lt;/c8&gt; defines shapes that you can draw on the screen, while &lt;c10&gt;&lt;a11&gt;Paint&lt;/a11&gt;&lt;/c10&gt; defines the color, style, font, and so forth of each shape you draw.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T065522Z" creationid="pingfangx" creationdate="20191103T065522Z">
        <seg>简单地说，&lt;c8&gt;&lt;a9&gt;Canvas&lt;/a9&gt;&lt;/c8&gt; 定义可以在屏幕上绘制的形状，而 &lt;c10&gt;&lt;a11&gt;Paint&lt;/a11&gt;&lt;/c10&gt; 定义你绘制的每个形状的颜色，样式，字体等。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>So a third-party app can become the user's default web browser, SMS messenger, or even the default keyboard (some exceptions apply, such as the system's Settings app).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T050023Z" creationid="pingfangx" creationdate="20191030T050023Z">
        <seg>因此，第三方应用程序可以成为用户的默认 web 浏览器、SMS messenger，甚至默认键盘(有一些例外情况，例如系统的设置应用程序)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>So a vertical plane (the left and right sides) of a view can be constrained only to another vertical plane; and baselines can constrain only to other baselines.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T072354Z" creationid="pingfangx" creationdate="20191103T072354Z">
        <seg>因此，view 的垂直平面(左侧和右侧)可以仅被约束到另一个垂直平面；并且基线只可以约束其他基线。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>So be sure you include other constraints to achieve the proper position for each view in the chain, such as &lt;a0&gt;alignment constraints&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T075056Z" creationid="pingfangx" creationdate="20191103T075056Z">
        <seg>因此，请确保包括其他约束，以实现链中每个 view 的正确位置，例如 &lt;a0&gt;alignment constraints&lt;/a0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>So the difference between this and using &lt;b1&gt;Wrap Content&lt;/b1&gt; (above), is that setting the width to &lt;b2&gt;Wrap Content&lt;/b2&gt; forces the width to always exactly match the content width; whereas using &lt;b3&gt;Match Constraints&lt;/b3&gt; with &lt;b4&gt;layout_constraintWidth_default&lt;/b4&gt; set to &lt;b5&gt;wrap&lt;/b5&gt; also allows the view to be smaller than the content width.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T074342Z" creationid="pingfangx" creationdate="20191103T074342Z">
        <seg>因此，这与使用 &lt;b1&gt;Wrap Content&lt;/b1&gt; 之间的区别在于，将宽度设置为 &lt;b2&gt;Wrap Content&lt;/b2&gt; 会强制宽度始终与内容宽度完全匹配；而使用 &lt;b3&gt;Match Constraints&lt;/b3&gt; 和 &lt;b4&gt;layout_constraintWidth_default&lt;/b4&gt; 设置为 &lt;b5&gt;wrap&lt;/b5&gt; 也会允许视图小于内容宽度。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>So the view with the highest weight value gets the most amount of space; views that have the same weight get the same amount of space.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T074931Z" creationid="pingfangx" creationdate="20191103T074931Z">
        <seg>因此，具有最高权重值的 view 获得最大的空间量;具有相同重量的 view 获得相同的空间量。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>So while you can create individual UI components by writing a custom &lt;c0&gt;&lt;a1&gt;View&lt;/a1&gt;&lt;/c0&gt;, you can do it even more easily by re-using a layout file.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T094505Z" creationid="pingfangx" creationdate="20191103T094505Z">
        <seg>因此，虽然可以通过编写自定义 &lt;c0&gt;&lt;a1&gt;View&lt;/a1&gt;&lt;/c0&gt; 来创建单个 UI 组件，但可以通过重新使用布局文件来更轻松地创建。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>So you can build your layout with &lt;c1&gt;ConstraintLayout&lt;/c1&gt; entirely by drag-and-dropping instead of editing the XML.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T071144Z" creationid="pingfangx" creationdate="20191103T071144Z">
        <seg>因此你可以完全通过拖拽的方式去构建一个使用 &lt;c1&gt;ConstraintLayout&lt;/c1&gt;，而不用直接在 XML 中编辑。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>So, before you draw anything, you need to create one or more &lt;c0&gt;&lt;a1&gt;Paint&lt;/a1&gt;&lt;/c0&gt; objects.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T065525Z" creationid="pingfangx" creationdate="20191103T065525Z">
        <seg>因此，在绘制任何内容之前，需要创建一个或多个 &lt;c0&gt;&lt;a1&gt;Paint&lt;/a1&gt;&lt;/c0&gt; 对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>So, if you have a &lt;c0&gt;&lt;a1&gt;TextView&lt;/a1&gt;&lt;/c0&gt; object, you can move, rotate, grow, or shrink the text.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T074915Z" creationid="pingfangx" creationdate="20191117T074915Z">
        <seg>因此，如果有一个 &lt;c0&gt;&lt;a1&gt;TextView&lt;/a1&gt;&lt;/c0&gt; 对象，则可以移动、旋转、增大或缩小文本。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>So, the system may kill the process at any time to reclaim memory, and in doing so, it terminates the spawned thread running in the process.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191029T074300Z" creationid="pingfangx" creationdate="20191029T074300Z">
        <seg>因此，系统可以随时终止进程以回收内存，这样做时，它会终止进程中运行的派生线程。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>So, when this design is converted to use &lt;c4&gt;&lt;a5&gt;RelativeLayout&lt;/a5&gt;&lt;/c4&gt;, you can see that the layout becomes a 2-level hierarchy.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T092520Z" creationid="pingfangx" creationdate="20191103T092520Z">
        <seg>因此，当此设计转换为使用 &lt;c4&gt;&lt;a5&gt;RelativeLayout&lt;/a5&gt;&lt;/c4&gt; 时，可以看到布局变成了一个两级层次结构。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Some examples of lint &lt;a1&gt;rules&lt;/a1&gt; are:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T092832Z" creationid="pingfangx" creationdate="20191103T092832Z">
        <seg>lint &lt;a1&gt;rules&lt;/a1&gt; 的一些示例如下：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Some of the major features of ART include the following:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T034015Z" creationid="pingfangx" creationdate="20191030T034015Z">
        <seg>ART 的一些主要特征包括：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Some values, such as pivotX, can be specified relative to the object itself or relative to the parent.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T075348Z" creationid="pingfangx" creationdate="20191117T075348Z">
        <seg>某些值(如 pivotX)可以相对于对象本身或相对于父对象指定。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Sometimes your layout might require complex views that are rarely used.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T095405Z" creationid="pingfangx" creationdate="20191103T095405Z">
        <seg>有时，你的布局可能需要很少使用的复杂视图。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Sometimes, the Android system itself enforces the use of context-registered receivers.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T063915Z" creationid="pingfangx" creationdate="20191030T063915Z">
        <seg>有时，Android 系统本身会强制使用上下文注册接收器。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Specifies that the animated values are floats</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T063703Z" creationid="pingfangx" creationdate="20191117T063703Z">
        <seg>指定动画值是浮点数</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Specifies that the animated values are integers</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T063638Z" creationid="pingfangx" creationdate="20191117T063638Z">
        <seg>指定动画值是整数</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Specifies the play ordering of animations in this set.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T062929Z" creationid="pingfangx" creationdate="20191117T062929Z">
        <seg>指定此集中动画的播放顺序。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Specify the &lt;a0&gt;&lt;c1&gt;&lt;receiver&gt;&lt;/c1&gt;&lt;/a0&gt; element in your app's manifest.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T052815Z" creationid="pingfangx" creationdate="20191030T052815Z">
        <seg>指定应用程序清单中的 &lt;a0&gt;&lt;c1&gt;&lt;receiver&gt;&lt;/c1&gt;&lt;/a0&gt; 元素。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Specify the typeface by calling &lt;c2&gt;&lt;a3&gt;setTypeface()&lt;/a3&gt;&lt;/c2&gt;, and the text color by calling &lt;c4&gt;&lt;a5&gt;setColor()&lt;/a5&gt;&lt;/c4&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T065639Z" creationid="pingfangx" creationdate="20191103T065639Z">
        <seg>通过调用 &lt;c2&gt;&lt;a3&gt;setTypeface()&lt;/a3&gt;&lt;/c2&gt; 指定字体，通过调用 &lt;c4&gt;&lt;a5&gt;setColor()&lt;/a5&gt;&lt;/c4&gt; 指定文本颜色。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Specify values for the attributes in your XML layout</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064936Z" creationid="pingfangx" creationdate="20191103T064936Z">
        <seg>在 XML 布局中指定属性的值</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Spring Animation</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T054413Z" creationid="pingfangx" creationdate="20191117T054413Z">
        <seg>弹簧动画</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Start by working on &lt;c0&gt;&lt;a1&gt;onDraw()&lt;/a1&gt;&lt;/c0&gt;, which will give you the biggest payback.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T070555Z" creationid="pingfangx" creationdate="20191103T070555Z">
        <seg>首先处理 &lt;c0&gt;&lt;a1&gt;onDraw()&lt;/a1&gt;&lt;/c0&gt;，这将为你带来最大的回报。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Starting X offset.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T071510Z" creationid="pingfangx" creationdate="20191117T071510Z">
        <seg>起始 X 偏移。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Starting X size offset, where 1.0 is no change.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T071312Z" creationid="pingfangx" creationdate="20191117T071242Z">
        <seg>起始 X 尺寸偏移，其中 1.0 不变。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Starting Y offset.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T071546Z" creationid="pingfangx" creationdate="20191117T071546Z">
        <seg>起始 Y 偏移。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Starting Y size offset, where 1.0 is no change.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T071308Z" creationid="pingfangx" creationdate="20191117T071308Z">
        <seg>起始 Y 尺寸偏移，其中 1.0 不变。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Starting angular position, in degrees.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T071659Z" creationid="pingfangx" creationdate="20191117T071659Z">
        <seg>起始角度位置，单位为度。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Starting opacity offset, where 0.0 is transparent and 1.0 is opaque.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T071105Z" creationid="pingfangx" creationdate="20191117T071105Z">
        <seg>开始不透明度偏移，其中 0.0 是透明的，1.0 是不透明的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Styles are not applied</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T065033Z" creationid="pingfangx" creationdate="20191103T065033Z">
        <seg>样式未运用</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Subclass &lt;c0&gt;&lt;a1&gt;BroadcastReceiver&lt;/a1&gt;&lt;/c0&gt; and implement &lt;c2&gt;&lt;a3&gt;onReceive(Context, Intent)&lt;/a3&gt;&lt;/c2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T053025Z" creationid="pingfangx" creationdate="20191030T053025Z">
        <seg>子类化 &lt;c0&gt;&lt;a1&gt;BroadcastReceiver&lt;/a1&gt;&lt;/c0&gt; 并实现 &lt;c2&gt;&lt;a3&gt;onReceive(Context, Intent)&lt;/a3&gt;&lt;/c2&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Subclass a View</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064903Z" creationid="pingfangx" creationdate="20191103T064903Z">
        <seg>实现 View 的子类</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Such a process is considered extremely important and will not be killed unless doing so is required to keep all foreground processes running.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191029T075029Z" creationid="pingfangx" creationdate="20191029T075029Z">
        <seg>这样的进程被认为是非常重要的，并且不会被终止，除非这样做是为了保持所有前台进程都在运行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Support alternate controllers, such as D-pad and trackball</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T065201Z" creationid="pingfangx" creationdate="20191103T065201Z">
        <seg>支持备用控制器，如 D-pad 和轨迹球</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Supports the following attributes in any of the following three formats: values from -100 to 100 ending with "%", indicating a percentage relative to itself; values from -100 to 100 ending in "%p", indicating a percentage relative to its parent; a float value with no suffix, indicating an absolute value.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T071420Z" creationid="pingfangx" creationdate="20191117T071420Z">
        <seg>支持以下三种格式中的任何一种：以“%”结尾的-100 到 100 之间的值，表示相对于自身的百分比；以“%p”结尾的-100 到 100 之间的值，表示相对于其父级的百分比；不带后缀的浮点值，表示绝对值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Swap views with a card flip</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T054152Z" creationid="pingfangx" creationdate="20191117T054152Z">
        <seg>用卡牌翻转交换视图</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System Apps</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T030214Z" creationid="pingfangx" creationdate="20191030T030214Z">
        <seg>系统应用</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System broadcasts are sent to all apps that are subscribed to receive the event.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T051053Z" creationid="pingfangx" creationdate="20191030T051053Z">
        <seg>系统广播发送给订阅接收事件的所有应用程序。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 3 describes the interpolators that are contained in &lt;c0&gt;&lt;a1&gt;android.view.animation&lt;/a1&gt;&lt;/c0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T093919Z" creationid="pingfangx" creationdate="20191117T093919Z">
        <seg>表 3 描述了 &lt;c0&gt;&lt;a1&gt;android.view.animation&lt;/a1&gt;&lt;/c0&gt; 中包含的插值器。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Taking some time to carefully define your view's interface reduces future maintenance costs.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T065118Z" creationid="pingfangx" creationdate="20191103T065118Z">
        <seg>花些时间仔细定义 view 接口可以降低未来的维护成本。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;a0&gt; hardware abstraction layer (HAL)&lt;/a0&gt; provides standard interfaces that expose device hardware capabilities to the higher-level &lt;a1&gt;Java API framework&lt;/a1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T033403Z" creationid="pingfangx" creationdate="20191030T033403Z">
        <seg>&lt;a0&gt;硬件抽象层 (HAL)&lt;/a0&gt; 提供标准接口，将设备硬件功能公开给更高级别的 &lt;a1&gt;Java API 框架&lt;/a1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;a1&gt;&lt;c2&gt;tools:showIn&lt;/c2&gt;&lt;/a1&gt; attribute in the XML above is a special attribute that is removed during compilation and used only at design time in Android Studio—it specifies a layout that &lt;i3&gt;includes&lt;/i3&gt; this file, so you can preview (and edit) this file as it appears while embedded in a parent layout.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T094700Z" creationid="pingfangx" creationdate="20191103T094700Z">
        <seg>上面 XML 中的 &lt;a1&gt;&lt;c2&gt;tools:showIn&lt;/c2&gt;&lt;/a1&gt; 属性是一个特殊属性，在编译过程中被删除，并且只在 Android Studio 的设计时使用 — 它指定了一个 &lt;i3&gt;includes&lt;/i3&gt; 此文件的布局，因此你可以在嵌入父布局时预览(和编辑)此文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;b1&gt;Layout&lt;/b1&gt; section of the &lt;b2&gt;Attributes&lt;/b2&gt; window lets you create connections.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T073008Z" creationid="pingfangx" creationdate="20191103T073008Z">
        <seg>&lt;b2&gt;Attributes&lt;/b2&gt; 窗口的 &lt;b1&gt;Layout&lt;/b1&gt; 部分允许你创建连接。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;&lt;a1&gt;Animator&lt;/a1&gt;&lt;/c0&gt; class provides the basic structure for creating animations.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T092919Z" creationid="pingfangx" creationdate="20191117T092919Z">
        <seg>&lt;c0&gt;&lt;a1&gt;Animator&lt;/a1&gt;&lt;/c0&gt; 类提供了创建动画的基本结构。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;&lt;a1&gt;LocalBroadcastManager.sendBroadcast&lt;/a1&gt;&lt;/c0&gt; method sends broadcasts to receivers that are in the same app as the sender.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T061229Z" creationid="pingfangx" creationdate="20191030T061229Z">
        <seg>&lt;c0&gt;&lt;a1&gt;LocalBroadcastManager.sendBroadcast&lt;/a1&gt;&lt;/c0&gt; 方法将广播发送到与发送方位于同一应用程序中的接收器。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;&lt;a1&gt;Scroller&lt;/a1&gt;&lt;/c0&gt; class computes scroll positions for you, but it does not automatically apply those positions to your view.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T070239Z" creationid="pingfangx" creationdate="20191103T070239Z">
        <seg>&lt;c0&gt;&lt;a1&gt;Scroller&lt;/a1&gt;&lt;/c0&gt; 类为你计算滚动位置，但它不会自动将这些位置应用于你的view。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;&lt;a1&gt;Scroller&lt;/a1&gt;&lt;/c0&gt; class is the basis for handling flywheel-style &lt;e2&gt;fling&lt;/e2&gt; gestures.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T070155Z" creationid="pingfangx" creationdate="20191103T070155Z">
        <seg>&lt;c0&gt;&lt;a1&gt;Scroller&lt;/a1&gt;&lt;/c0&gt; 类是处理飞轮式 &lt;e2&gt;fling&lt;/e2&gt; 手势的基础。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;&lt;a1&gt;ValueAnimator&lt;/a1&gt;&lt;/c0&gt; encapsulates a &lt;c2&gt;&lt;a3&gt;TimeInterpolator&lt;/a3&gt;&lt;/c2&gt;, which defines animation interpolation, and a &lt;c4&gt;&lt;a5&gt;TypeEvaluator&lt;/a5&gt;&lt;/c4&gt;, which defines how to calculate values for the property being animated.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T090949Z" creationid="pingfangx" creationdate="20191117T090949Z">
        <seg>&lt;c0&gt;&lt;a1&gt;ValueAnimator&lt;/a1&gt;&lt;/c0&gt; 封装了定义动画插值的 &lt;c2&gt;&lt;a3&gt;TimeInterpolator&lt;/a3&gt;&lt;/c2&gt;，以及定义如何计算要设置动画的属性值的 &lt;c4&gt;&lt;a5&gt;TypeEvaluator&lt;/a5&gt;&lt;/c4&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;&lt;a1&gt;ValueAnimator&lt;/a1&gt;&lt;/c0&gt; object keeps track of your animation's timing, such as how long the animation has been running, and the current value of the property that it is animating.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T082135Z" creationid="pingfangx" creationdate="20191117T082135Z">
        <seg>&lt;c0&gt;&lt;a1&gt;ValueAnimator&lt;/a1&gt;&lt;/c0&gt; 对象会跟踪动画的计时，例如动画运行的时间，以及它正在设置动画的属性的当前值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;&lt;a1&gt;android.graphics&lt;/a1&gt;&lt;/c0&gt; framework divides drawing into two areas:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T065508Z" creationid="pingfangx" creationdate="20191103T065508Z">
        <seg>&lt;c0&gt;&lt;a1&gt;android.graphics&lt;/a1&gt;&lt;/c0&gt; 框架将绘制划分为两个区域：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;&lt;a1&gt;sendBroadcast(Intent)&lt;/a1&gt;&lt;/c0&gt; method sends broadcasts to all receivers in an undefined order.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T061130Z" creationid="pingfangx" creationdate="20191030T061130Z">
        <seg>&lt;c0&gt;&lt;a1&gt;sendBroadcast(Intent)&lt;/a1&gt;&lt;/c0&gt; 方法以未定义的顺序向所有接收器发送广播。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;&lt;a1&gt;sendOrderedBroadcast(Intent, String)&lt;/a1&gt;&lt;/c0&gt; method sends broadcasts to one receiver at a time.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T060858Z" creationid="pingfangx" creationdate="20191030T060858Z">
        <seg>&lt;c0&gt;&lt;a1&gt;sendOrderedBroadcast(Intent, String)&lt;/a1&gt;&lt;/c0&gt; 方法一次向一个接收器发送广播。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;&lt;merge /&gt;&lt;/c0&gt; tag helps eliminate redundant view groups in your view hierarchy when including one layout within another.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T095027Z" creationid="pingfangx" creationdate="20191103T095027Z">
        <seg>&lt;c0&gt;&lt;merge /&gt;&lt;/c0&gt; 标签有助于在将一个布局包含在另一个布局中时消除视图层次结构中的冗余视图组。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;onDraw()&lt;/c0&gt; and &lt;c1&gt;onMeasure()&lt;/c1&gt; methods (plus most of the other &lt;c2&gt;on...&lt;/c2&gt; methods) will likely have suitable behavior so you don't have to override them.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064409Z" creationid="pingfangx" creationdate="20191103T064409Z">
        <seg>&lt;c0&gt;onDraw()&lt;/c0&gt; 和 &lt;c1&gt;onMeasure()&lt;/c1&gt; 方法（加上其他的 &lt;c2&gt;on...&lt;/c2&gt; 方法) 已经有合适的行为了，不需要重写它们。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;onDraw()&lt;/c0&gt; method delivers you a &lt;c1&gt;&lt;a2&gt;Canvas&lt;/a2&gt;&lt;/c1&gt; upon which you can implement anything you want: 2D graphics, other standard or custom components, styled text, or anything else you can think of.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064019Z" creationid="pingfangx" creationdate="20191103T064019Z">
        <seg>&lt;c0&gt;onDraw()&lt;/c0&gt; 方法给你提供一个 &lt;c1&gt;&lt;a2&gt;Canvas&lt;/a2&gt;&lt;/c1&gt;，在其中你可以实现任何你想要的东西。2D 图形，其他标准或自定义的组件，带风格的文字，以及任何你想要的别的东西。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c1&gt;&lt;a2&gt;AnimatedVectorDrawable&lt;/a2&gt;&lt;/c1&gt; class (and &lt;a3&gt; &lt;c4&gt;AnimatedVectorDrawableCompat&lt;/c4&gt;&lt;/a3&gt; for backward-compatibility) lets you animate the properties of a vector drawable, such as rotating it or changing the path data to morph it into a different image.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T113343Z" creationid="pingfangx" creationdate="20191117T113343Z">
        <seg>&lt;c1&gt;&lt;a2&gt;AnimatedVectorDrawable&lt;/a2&gt;&lt;/c1&gt; 类(和 &lt;a3&gt; &lt;c4&gt;AnimatedVectorDrawableCompat&lt;/c4&gt;&lt;/a3&gt; 用于向后兼容)允许设置 vector drawable 的属性的动画，例如旋转或更改路径数据以将其变形为不同的图像。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c1&gt;&lt;a2&gt;inflate()&lt;/a2&gt;&lt;/c1&gt; method returns the inflated &lt;c3&gt;&lt;a4&gt;View&lt;/a4&gt;&lt;/c3&gt; once complete.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T095943Z" creationid="pingfangx" creationdate="20191103T095943Z">
        <seg>&lt;c1&gt;&lt;a2&gt;inflate()&lt;/a2&gt;&lt;/c1&gt; 方法返回加载完成的 &lt;c3&gt;&lt;a4&gt;View&lt;/a4&gt;&lt;/c3&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c2&gt;&lt;a3&gt;AnimationDrawable&lt;/a3&gt;&lt;/c2&gt; class is the basis for Drawable animations.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T102422Z" creationid="pingfangx" creationdate="20191117T102422Z">
        <seg>&lt;c2&gt;&lt;a3&gt;AnimationDrawable&lt;/a3&gt;&lt;/c2&gt; 类是 Drawable 动画的基础。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c2&gt;&lt;a3&gt;animation package&lt;/a3&gt;&lt;/c2&gt; provides all the classes used in a tween animation.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T074941Z" creationid="pingfangx" creationdate="20191117T074941Z">
        <seg>在 &lt;c2&gt;&lt;a3&gt;animation package&lt;/a3&gt;&lt;/c2&gt; 提供了所有在补间动画使用的类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c2&gt;&lt;group&gt;&lt;/c2&gt; elements defines a set of paths or subgroups, and the &lt;c3&gt;&lt;path&gt;&lt;/c3&gt; element defines paths to be drawn.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T113652Z" creationid="pingfangx" creationdate="20191117T113652Z">
        <seg>&lt;c2&gt;&lt;group&gt;&lt;/c2&gt; 元素定义一组路径或子组，而 &lt;c3&gt;&lt;path&gt;&lt;/c3&gt; 元素定义要绘制的路径。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c2&gt;PieChart&lt;/c2&gt; example does this in a method called &lt;c3&gt;init&lt;/c3&gt;, which is called from the constructor from Java, but we can initialise inline in Kotlin:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T065527Z" creationid="pingfangx" creationdate="20191103T065527Z">
        <seg>&lt;c2&gt;PieChart&lt;/c2&gt; 示例在名为 &lt;c3&gt;init&lt;/c3&gt; 的方法中执行此操作，该方法是从 Java 的构造函数中调用的，但我们可以在 Kotlin 中初始化内联：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c3&gt;&lt;a4&gt;LocalBroadcastManager&lt;/a4&gt;&lt;/c3&gt; is much more efficient (no interprocess communication needed) and allows you to avoid thinking about any security issues related to other apps being able to receive or send your broadcasts.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T063808Z" creationid="pingfangx" creationdate="20191030T063808Z">
        <seg>&lt;c3&gt;&lt;a4&gt;LocalBroadcastManager&lt;/a4&gt;&lt;/c3&gt; 效率更高(不需要进程间通信)，并且允许你避免考虑与能够接收或发送你的广播的其他应用程序相关的任何安全问题。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c4&gt;objectAnimator&lt;/c4&gt; element does not expose a &lt;c5&gt;target&lt;/c5&gt; attribute, however, so you cannot set the object to animate in the XML declaration.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T063146Z" creationid="pingfangx" creationdate="20191117T063146Z">
        <seg>但是，&lt;c4&gt;objectAnimator&lt;/c4&gt; 元素不公开 &lt;c5&gt;target&lt;/c5&gt; 属性，因此不能在 XML 声明中将对象设置为 animate。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c6&gt;&lt;a7&gt;Canvas&lt;/a7&gt;&lt;/c6&gt; class defines methods for drawing text, lines, bitmaps, and many other graphics primitives.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T065500Z" creationid="pingfangx" creationdate="20191103T065500Z">
        <seg>&lt;c6&gt;&lt;a7&gt;Canvas&lt;/a7&gt;&lt;/c6&gt; 类定义了绘制文本，线条，位图和许多其他图形基元的方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Android &lt;a0&gt;property animation framework&lt;/a0&gt;, introduced in Android 3.0, makes smooth transitions easy.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T070406Z" creationid="pingfangx" creationdate="20191103T070406Z">
        <seg>Android 3.0 中引入的 &lt;a0&gt;property animation framework&lt;/a0&gt; 使平滑过渡变得容易。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Android SDK includes tools to help you identify problems in your layout performance, which when combined the lessons here, you will be able to implement smooth scrolling interfaces with a minimum memory footprint.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T091510Z" creationid="pingfangx" creationdate="20191103T091510Z">
        <seg>Android SDK 包括一些工具，可以帮助你识别布局性能中的问题，结合这里的课程，你将能够以最小的内存占用实现平滑的滚动界面。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Android SDK tools include a tool called &lt;a0&gt;Hierarchy Viewer&lt;/a0&gt; that allows you to analyze your layout while your application is running.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T092027Z" creationid="pingfangx" creationdate="20191103T092027Z">
        <seg>Android SDK 工具包括一个名为 &lt;a0&gt;Hierarchy Viewer&lt;/a0&gt; 的工具，它允许你在应用程序运行时分析布局。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Android framework provides a set of base classes and XML tags to help you create a view that meets all of these requirements.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064857Z" creationid="pingfangx" creationdate="20191103T064857Z">
        <seg>Android 框架提供了一组基类和 XML 标记，可帮助你创建满足所有这些要求的视图。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Android platform provides Java framework APIs to expose the functionality of some of these native libraries to apps.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T041632Z" creationid="pingfangx" creationdate="20191030T041607Z">
        <seg>Android 平台提供了 Java 框架 API 来向应用程序公开其中一些原生库的功能。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Android resource compiler does a lot of work for you to make calling &lt;c0&gt;&lt;a1&gt;obtainStyledAttributes()&lt;/a1&gt;&lt;/c0&gt; easier.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T065042Z" creationid="pingfangx" creationdate="20191103T065042Z">
        <seg>Android 资源编译器为你做了很多工作，使你更容易调用 &lt;c0&gt;&lt;a1&gt;obtainStyledAttributes()&lt;/a1&gt;&lt;/c0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Basic Approach</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T063847Z" creationid="pingfangx" creationdate="20191103T063847Z">
        <seg>基本的方法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Definition</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064454Z" creationid="pingfangx" creationdate="20191103T064454Z">
        <seg>定义</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The EditText is created with these parameters when it is inflated from an XML layout file, thus, our constructor needs to both take them and pass them to the superclass constructor as well.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064510Z" creationid="pingfangx" creationdate="20191103T064510Z">
        <seg>当 EditText 从 XML 布局文件加载时，它用这些参数来创建。因此，我们的构造方法需要获取参数并传递给父类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The HAL consists of multiple library modules, each of which implements an interface for a specific type of hardware component, such as the &lt;a2&gt;camera&lt;/a2&gt; or &lt;a3&gt;bluetooth&lt;/a3&gt; module.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T033425Z" creationid="pingfangx" creationdate="20191030T033425Z">
        <seg>HAL 由多个库模块组成，每个库模块实现一个特定类型硬件组件的接口，例如 &lt;a2&gt;camera&lt;/a2&gt; 或 &lt;a3&gt;bluetooth&lt;/a3&gt; 模块。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Inspection Configuration page appears with the supported inspections.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T093424Z" creationid="pingfangx" creationdate="20191103T093424Z">
        <seg>将显示检查配置页，其中包含支持的检查。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Linux Kernel</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T030143Z" creationid="pingfangx" creationdate="20191030T030143Z">
        <seg>Linux 内核</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The PieChart example is a little different: it uses the current scroll y position to set the rotational angle of the chart.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T070234Z" creationid="pingfangx" creationdate="20191103T070234Z">
        <seg>饼图示例略有不同：它使用当前滚动 y 位置来设置图表的旋转角度。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The PieChart example shows how to extend &lt;c2&gt;&lt;a3&gt;ViewGroup&lt;/a3&gt;&lt;/c2&gt; as part of a custom view.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T070624Z" creationid="pingfangx" creationdate="20191103T070624Z">
        <seg>PieChart 示例显示如何将 &lt;c2&gt;&lt;a3&gt;ViewGroup&lt;/a3&gt;&lt;/c2&gt; 继承为自定义 view 的一部分。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The PieChart example uses the second approach.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T070256Z" creationid="pingfangx" creationdate="20191103T070256Z">
        <seg>PieChart 示例使用第二种方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The X coordinate of the center of rotation.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T071716Z" creationid="pingfangx" creationdate="20191117T071716Z">
        <seg>旋转中心的 X 坐标。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The X coordinate to remain fixed when the object is scaled.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T071333Z" creationid="pingfangx" creationdate="20191117T071333Z">
        <seg>缩放对象时保持固定的 X 坐标。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The XML file consists of an &lt;c0&gt;&lt;animation-list&gt;&lt;/c0&gt; element as the root node and a series of child &lt;c1&gt;&lt;item&gt;&lt;/c1&gt; nodes that each define a frame: a drawable resource for the frame and the frame duration.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T102629Z" creationid="pingfangx" creationdate="20191117T102629Z">
        <seg>XML 文件由作为根节点的 &lt;c0&gt;&lt;animation-list&gt;&lt;/c0&gt; 元素和一系列 &lt;c1&gt;&lt;item&gt;&lt;/c1&gt; 子节点组成，每个子节点定义一个帧：帧的 drawable 资源和帧持续时间。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The XML file for this kind of animation belongs in the &lt;c2&gt;res/drawable/&lt;/c2&gt; directory of your Android project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T102520Z" creationid="pingfangx" creationdate="20191117T102520Z">
        <seg>这种动画的 XML 文件属于 Android 项目的 &lt;c2&gt;res/drawable/&lt;/c2&gt; 目录。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Y coordinate of the center of rotation.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T071738Z" creationid="pingfangx" creationdate="20191117T071738Z">
        <seg>旋转中心的 Y 坐标。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Y coordinate to remain fixed when the object is scaled.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T071337Z" creationid="pingfangx" creationdate="20191117T071337Z">
        <seg>缩放对象时保持固定的 Y 坐标。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The acceleration rate (default is 1).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T072428Z" creationid="pingfangx" creationdate="20191117T072428Z">
        <seg>加速率(默认为 1)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The amount by which to multiply the tension (default is 1.5).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T072523Z" creationid="pingfangx" creationdate="20191117T072523Z">
        <seg>乘以张力的量(默认值为 1.5)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The amount of milliseconds the animation delays after &lt;c1&gt;&lt;a2&gt;start()&lt;/a2&gt;&lt;/c1&gt; is called.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T063432Z" creationid="pingfangx" creationdate="20191117T063432Z">
        <seg>调用 &lt;c1&gt;&lt;a2&gt;start()&lt;/a2&gt;&lt;/c1&gt; 之后动画延迟的毫秒数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The amount of tension to apply (default is 2).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T072447Z" creationid="pingfangx" creationdate="20191117T072447Z">
        <seg>要应用的张力量(默认值为 2)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The animated vector drawable definition refers to the groups and paths in the vector drawable by their names:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T114105Z" creationid="pingfangx" creationdate="20191117T114105Z">
        <seg>animated vector drawable 定义根据其名称引用 vector drawable 中的组和路径：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The animation XML file belongs in the &lt;c0&gt;res/anim/&lt;/c0&gt; directory of your Android project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T075211Z" creationid="pingfangx" creationdate="20191117T075211Z">
        <seg>动画 XML 文件属于 Android 项目的 &lt;c0&gt;res/anim/&lt;/c0&gt; 目录。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The animation definitions represent &lt;c0&gt;&lt;a1&gt;ObjectAnimator&lt;/a1&gt;&lt;/c0&gt; or &lt;c2&gt;&lt;a3&gt;AnimatorSet&lt;/a3&gt;&lt;/c2&gt; objects.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T114211Z" creationid="pingfangx" creationdate="20191117T114211Z">
        <seg>动画定义代表 &lt;c0&gt;&lt;a1&gt;ObjectAnimator&lt;/a1&gt;&lt;/c0&gt; 或 &lt;c2&gt;&lt;a3&gt;AnimatorSet&lt;/a3&gt;&lt;/c2&gt; 对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The animation framework automatically handles color values</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T063602Z" creationid="pingfangx" creationdate="20191117T063602Z">
        <seg>动画框架自动处理颜色值</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The animation framework automatically handles color values.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T063846Z" creationid="pingfangx" creationdate="20191117T063846Z">
        <seg>动画框架自动处理颜色值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The animation instructions define the transformations that you want to occur, when they will occur, and how long they should take to apply.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T075053Z" creationid="pingfangx" creationdate="20191117T075053Z">
        <seg>动画指令定义要发生的转换、转换将在何时发生以及转换应用所需的时间。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The app that defines the custom permission must be installed before the app that uses it.&lt;/s1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T062223Z" creationid="pingfangx" creationdate="20191030T062223Z">
        <seg>定义自定义权限的应用程序必须在使用它的应用程序之前安装。&lt;/s1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The barrier is set to the "end" (or the right side in a left-to-right layout) of both view A and view B. So the barrier moves depending on whether the right side of view A or view B is is farthest right.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T073513Z" creationid="pingfangx" creationdate="20191103T073513Z">
        <seg>屏障设置在视图 A 和视图 B 的“end”(或从左到右布局中的右侧)。因此屏障的移动取决于视图 A 或视图 B 的右侧，哪一个是最右侧。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The benefits, as small as they might seem, are multiplied several times because this layout is used for every item in a list.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T092605Z" creationid="pingfangx" creationdate="20191103T092605Z">
        <seg>这些好处虽然看起来很小，但却成倍增加，因为这个布局用于列表中的每一项。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The broadcast message is wrapped in an &lt;c0&gt;&lt;a1&gt;Intent&lt;/a1&gt;&lt;/c0&gt; object.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T061424Z" creationid="pingfangx" creationdate="20191030T061424Z">
        <seg>广播消息包装在 &lt;c0&gt;&lt;a1&gt;Intent&lt;/a1&gt;&lt;/c0&gt; 对象中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The broadcast message itself is wrapped in an &lt;c0&gt;&lt;a1&gt;Intent&lt;/a1&gt;&lt;/c0&gt; object whose action string identifies the event that occurred (for example &lt;c2&gt;android.intent.action.AIRPLANE_MODE&lt;/c2&gt;).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T051139Z" creationid="pingfangx" creationdate="20191030T051115Z">
        <seg>广播消息本身包装在一个 &lt;c0&gt;&lt;a1&gt;Intent&lt;/a1&gt;&lt;/c0&gt; 对象中，该对象的 action 字符串标识发生的事件(例如 &lt;c2&gt;android.Intent.action.AIRPLANE_MODE&lt;/c2&gt;)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The broadcast receiver in the following example logs and displays the contents of the broadcast:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T053034Z" creationid="pingfangx" creationdate="20191030T053034Z">
        <seg>以下示例中的广播接收器记录并显示广播的内容：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The calculations take into account the view's padding.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T065623Z" creationid="pingfangx" creationdate="20191103T065623Z">
        <seg>计算考虑了 view 的 padding。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The call to &lt;c0&gt;&lt;a1&gt;fling()&lt;/a1&gt;&lt;/c0&gt; sets up the physics model for the fling gesture.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T070215Z" creationid="pingfangx" creationdate="20191103T070215Z">
        <seg>对 &lt;c0&gt;&lt;a1&gt;fling()&lt;/a1&gt;&lt;/c0&gt; 的调用设置了投掷手势的物理模型。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The chain's "head" view (the left-most view in a horizontal chain and the top-most view in a vertical chain) defines the chain's style in XML.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T074938Z" creationid="pingfangx" creationdate="20191103T074938Z">
        <seg>链的 '头部' view(水平链中最左侧的 view 和垂直链中最顶部的 view)在 XML 中定义为链的样式。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The change bounces at the end.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T072538Z" creationid="pingfangx" creationdate="20191117T072538Z">
        <seg>变化在结束处反弹。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The change flings forward and overshoots the last value, then comes back.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T072635Z" creationid="pingfangx" creationdate="20191117T072635Z">
        <seg>变化向前跳，超出最后一个值，然后返回。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The change in the target value results in a change in force.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T054647Z" creationid="pingfangx" creationdate="20191117T054647Z">
        <seg>目标值的变化导致力的变化。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The change starts backward then flings forward.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T072439Z" creationid="pingfangx" creationdate="20191117T072439Z">
        <seg>变化开始向后，然后向前。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The change starts backward, flings forward and overshoots the target value, then settles at the final value.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T072519Z" creationid="pingfangx" creationdate="20191117T072519Z">
        <seg>变化从后开始，向前抛出并超出目标值，然后稳定在最终值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The class is defined with the following line:&lt;br0/&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064456Z" creationid="pingfangx" creationdate="20191103T064456Z">
        <seg>该类使用以下行定义：&lt;br0/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The code example below shows how to animate moving a single button to the bottom of the screen.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T075603Z" creationid="pingfangx" creationdate="20191103T075603Z">
        <seg>下面的代码示例演示如何设置将单个按钮移动到屏幕底部的动画。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The custom component is created as a generic view in the XML, and the class is specified using the full package.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064533Z" creationid="pingfangx" creationdate="20191103T064533Z">
        <seg>该自定义组件在 XML 中被视为一个通用的 view 创建，并且这个类要使用完整的包名。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The deceleration rate (default is 1).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T072615Z" creationid="pingfangx" creationdate="20191117T072615Z">
        <seg>减速率(默认为 1)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The default evaluator to calculate values for &lt;c0&gt;float&lt;/c0&gt; properties.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T093636Z" creationid="pingfangx" creationdate="20191117T093636Z">
        <seg>用于计算 &lt;c0&gt;float&lt;/c0&gt; 属性值的默认求值器。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The default evaluator to calculate values for &lt;c0&gt;int&lt;/c0&gt; properties.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T093634Z" creationid="pingfangx" creationdate="20191117T093634Z">
        <seg>用于计算 &lt;c0&gt;int&lt;/c0&gt; 属性值的默认求值器。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The default evaluator to calculate values for color properties that are represented as hexadecimal values.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T093648Z" creationid="pingfangx" creationdate="20191117T093648Z">
        <seg>用于计算以十六进制值表示的颜色属性值的默认求值器。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The default is set to refresh every 10 ms, but the speed in which your application can refresh frames is ultimately dependent on how busy the system is overall and how fast the system can service the underlying timer.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T080301Z" creationid="pingfangx" creationdate="20191117T080301Z">
        <seg>默认设置为每 10 毫秒刷新一次，但应用程序刷新帧的速度最终取决于系统整体的繁忙程度以及系统为底层计时器提供服务的速度。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The default length is 300 ms.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T080100Z" creationid="pingfangx" creationdate="20191117T080100Z">
        <seg>默认长度为 300 毫秒。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The default maximum depth is 10.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T093335Z" creationid="pingfangx" creationdate="20191103T093335Z">
        <seg>默认的最大深度为 10。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The default value for this attribute is &lt;c1&gt;false&lt;/c1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T081546Z" creationid="pingfangx" creationdate="20191103T081546Z">
        <seg>该属性的缺省值是 &lt;c1&gt;false&lt;/c1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The default value for this attribute is &lt;c1&gt;true&lt;/c1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T081535Z" creationid="pingfangx" creationdate="20191103T081535Z">
        <seg>该属性的缺省值是 &lt;c1&gt;true&lt;/c1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The default value is &lt;c3&gt;"0"&lt;/c3&gt;, which means no repetition.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T063517Z" creationid="pingfangx" creationdate="20191117T063517Z">
        <seg>默认值为 &lt;c3&gt;"0"&lt;/c3&gt;，表示不重复。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The documentation for each of these classes describes in more detail how they impact the overall life-cycle of their application.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191029T080331Z" creationid="pingfangx" creationdate="20191029T080331Z">
        <seg>这些类的文档更详细地描述了它们如何影响应用程序的整个生命周期。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The drawable to use for this frame.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T072923Z" creationid="pingfangx" creationdate="20191117T072923Z">
        <seg>用于此帧的 drawable。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The drawback is that &lt;c0&gt;&lt;a1&gt;ValueAnimator&lt;/a1&gt;&lt;/c0&gt; is not available prior to API level 11, so this technique cannot be used on devices running Android versions lower than 3.0.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T070301Z" creationid="pingfangx" creationdate="20191103T070301Z">
        <seg>缺点是在 API 级别 11 之前 &lt;c0&gt;&lt;a1&gt;ValueAnimator&lt;/a1&gt;&lt;/c0&gt; 不可用，因此该技术不能用于运行低于 3.0 的 Android 版本的设备。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The duration of the animation is set to 40 ms and the distance to travel is 40 pixels.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T081652Z" creationid="pingfangx" creationdate="20191117T081652Z">
        <seg>动画的持续时间设置为 40 毫秒，移动距离为 40 像素。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The duration to show this frame, in milliseconds.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T072930Z" creationid="pingfangx" creationdate="20191117T072930Z">
        <seg>显示此帧的持续时间(毫秒)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The editor shows view C below A, but it has no vertical constraint</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T072839Z" creationid="pingfangx" creationdate="20191103T072839Z">
        <seg>编辑器显示 A 下面的 view C，但没有垂直约束</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The effect is most visible when the view size is set to "fixed" or "wrap content," in which case the view is centered between the constraints.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T072515Z" creationid="pingfangx" creationdate="20191103T072515Z">
        <seg>当 view 大小设置为 "Fixed" 或 "Wrap Content" 时，效果最明显，在这种情况下 view 在约束之间居中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The elapsed fraction represents the percentage of time that the animation has completed, 0 meaning 0% and 1 meaning 100%.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T091224Z" creationid="pingfangx" creationdate="20191117T091224Z">
        <seg>经过的分数表示动画完成的时间百分比，0 表示 0%，1 表示 100%。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The entire feature-set of the Android OS is available to you through APIs written in the Java language.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T043718Z" creationid="pingfangx" creationdate="20191030T043718Z">
        <seg>Android 操作系统的整个特性集都可以通过用 Java 语言编写的 API 获得。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The exact policy of ordering on this list is an implementation detail of the platform, but generally it will try to keep more useful processes (one hosting the user's home application, the last activity they saw, etc) before other types of processes.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191029T081823Z" creationid="pingfangx" creationdate="20191029T081823Z">
        <seg>在这个列表上进行排序的确切策略是平台的实现细节，但通常它会尝试在其他类型的进程之前保留更多有用的进程(用户 home 应用程序的宿主、他们看到的最后一个 activity 等)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The file must have a single root element: either &lt;c0&gt;&lt;set&gt;&lt;/c0&gt;, &lt;c1&gt;&lt;objectAnimator&gt;&lt;/c1&gt;, or &lt;c2&gt;&lt;valueAnimator&gt;&lt;/c2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T062825Z" creationid="pingfangx" creationdate="20191117T062825Z">
        <seg>该文件必须具有一个根元素：&lt;c0&gt;&lt;set&gt;&lt;/c0&gt;，&lt;c1&gt;&lt;objectAnimator&gt;&lt;/c1&gt; 或 &lt;c2&gt;&lt;valueAnimator&gt;&lt;/c2&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The file must have a single root element: either an &lt;c0&gt;&lt;alpha&gt;&lt;/c0&gt;, &lt;c1&gt;&lt;scale&gt;&lt;/c1&gt;, &lt;c2&gt;&lt;translate&gt;&lt;/c2&gt;, &lt;c3&gt;&lt;rotate&gt;&lt;/c3&gt;, or &lt;c4&gt;&lt;set&gt;&lt;/c4&gt; element that holds a group (or groups) of other animation elements (even nested &lt;c5&gt;&lt;set&gt;&lt;/c5&gt; elements).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T070004Z" creationid="pingfangx" creationdate="20191117T070004Z">
        <seg>文件必须有一个根元素：一个 &lt;c0&gt;&lt;alpha&gt;&lt;/c0&gt;，&lt;c1&gt;&lt;scale&gt;&lt;/c1&gt;，&lt;c2&gt;&lt;translate&gt;&lt;/c2&gt;，&lt;c3&gt;&lt;rotate&gt;&lt;/c3&gt;，或 &lt;c4&gt;&lt;set&gt;&lt;/c4&gt; 元素，它包含一组(或多组)其他动画元素(甚至嵌套 &lt;c5&gt;&lt;set&gt;&lt;/c5&gt; 元素)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The file must have a single root element: this will be either a single &lt;c1&gt;&lt;alpha&gt;&lt;/c1&gt;, &lt;c2&gt;&lt;scale&gt;&lt;/c2&gt;, &lt;c3&gt;&lt;translate&gt;&lt;/c3&gt;, &lt;c4&gt;&lt;rotate&gt;&lt;/c4&gt;, interpolator element, or &lt;c5&gt;&lt;set&gt;&lt;/c5&gt; element that holds groups of these elements (which may include another &lt;c6&gt;&lt;set&gt;&lt;/c6&gt;).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T075234Z" creationid="pingfangx" creationdate="20191117T075234Z">
        <seg>文件必须有一个根元素：这将是一个单独的 &lt;c1&gt;&lt;alpha&gt;&lt;/c1&gt;，&lt;c2&gt;&lt;scale&gt;&lt;/c2&gt;，&lt;c3&gt;&lt;translate&gt;&lt;/c3&gt;，&lt;c4&gt;&lt;rotate&gt;&lt;/c4&gt;，interpolator 元素，或者是保存这些元素组的 &lt;c5&gt;&lt;set&gt;&lt;/c5&gt; 元素(其中可能包括另一个 &lt;c6&gt;&lt;set&gt;&lt;/c6&gt;)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The filename will be used as the resource ID.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T062544Z" creationid="pingfangx" creationdate="20191117T062544Z">
        <seg>文件名将被用作资源 ID。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The first and last view are affixed to the constraints on each end of the chain and the rest are evenly distributed.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T074918Z" creationid="pingfangx" creationdate="20191103T074918Z">
        <seg>第一个和最后一个 view 被附加到链的每个端部上的约束，并且其余的是均匀分布的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The first animator in this example rotates the target group 360 degrees:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T114231Z" creationid="pingfangx" creationdate="20191117T114231Z">
        <seg>本例中的第一个动画将目标组旋转 360 度：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The first option is to use an &lt;a0&gt;Animation Drawable&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T102231Z" creationid="pingfangx" creationdate="20191117T102231Z">
        <seg>第一种选择是使用一个 &lt;a0&gt;Animation Drawable&lt;/a0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following &lt;c0&gt;&lt;a1&gt;ViewStub&lt;/a1&gt;&lt;/c0&gt; is for a translucent progress bar overlay.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T095703Z" creationid="pingfangx" creationdate="20191103T095703Z">
        <seg>下面的 &lt;c0&gt;&lt;a1&gt;ViewStub&lt;/a1&gt;&lt;/c0&gt; 用于半透明进度条覆盖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following XML from one of the ApiDemos is used to stretch, then simultaneously spin and rotate a View object.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T075254Z" creationid="pingfangx" creationdate="20191117T075254Z">
        <seg>下面一个 ApiDemos 中的 XML 用于拉伸，然后同时旋转和旋转视图对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following code shows how to do this:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T065555Z" creationid="pingfangx" creationdate="20191117T065555Z">
        <seg>下面的代码演示如何做到这一点：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following code snippet demonstrates how to send a broadcast by creating an Intent and calling &lt;c0&gt;&lt;a1&gt;sendBroadcast(Intent)&lt;/a1&gt;&lt;/c0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T061330Z" creationid="pingfangx" creationdate="20191030T061330Z">
        <seg>下面的代码片段演示如何通过创建 intent 并调用 &lt;c0&gt;&lt;a1&gt;sendBroadcast(Intent)&lt;/a1&gt;&lt;/c0&gt; 来发送广播。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following diagram shows the major components of the Android platform.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T033052Z" creationid="pingfangx" creationdate="20191030T033052Z">
        <seg>下图显示了 Android 平台的主要组成部分。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following sections describe how to use both methods.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T065721Z" creationid="pingfangx" creationdate="20191117T065721Z">
        <seg>以下各节介绍如何使用这两种方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following snippet shows a &lt;c0&gt;&lt;a1&gt;BroadcastReceiver&lt;/a1&gt;&lt;/c0&gt; that uses &lt;c2&gt;&lt;a3&gt;goAsync()&lt;/a3&gt;&lt;/c2&gt; to flag that it needs more time to finish after &lt;c4&gt;onReceive()&lt;/c4&gt; is complete.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T055133Z" creationid="pingfangx" creationdate="20191030T055133Z">
        <seg>下面的代码片段显示了一个 &lt;c0&gt;&lt;a1&gt;BroadcastReceiver&lt;/a1&gt;&lt;/c0&gt;，它使用 &lt;c2&gt;&lt;a3&gt;goAsync()&lt;/a3&gt;&lt;/c2&gt; 来标记在完成 &lt;c4&gt;onReceive()&lt;/c4&gt; 之后需要更多时间才能完成。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following snippet shows how &lt;c0&gt;PieChart&lt;/c0&gt; exposes a property called &lt;c1&gt;showText&lt;/c1&gt;:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T065056Z" creationid="pingfangx" creationdate="20191103T065056Z">
        <seg>以下代码段显示 &lt;c0&gt;PieChart&lt;/c0&gt; 如何公开名为 &lt;c1&gt;showText&lt;/c1&gt; 的属性：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following subclasses extend &lt;c2&gt;&lt;a3&gt;Animator&lt;/a3&gt;&lt;/c2&gt;:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T092947Z" creationid="pingfangx" creationdate="20191117T092947Z">
        <seg>以下子类扩展 &lt;c2&gt;&lt;a3&gt;Animator&lt;/a3&gt;&lt;/c2&gt;：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following table specifies the resource to use for each interpolator:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T072117Z" creationid="pingfangx" creationdate="20191117T072117Z">
        <seg>下表指定用于每个插值的资源：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following tables describe the main components of the property animation system.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T092903Z" creationid="pingfangx" creationdate="20191117T092903Z">
        <seg>下表描述了属性动画系统的主要组件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The foundation of the Android platform is the Linux kernel.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T033115Z" creationid="pingfangx" creationdate="20191030T033115Z">
        <seg>Android 平台的基础是 Linux 内核。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The framework animates the views at runtime by changing some of their property values over time.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T051954Z" creationid="pingfangx" creationdate="20191117T051954Z">
        <seg>框架在运行时通过随时间更改视图的某些属性值来设置视图的动画。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The framework includes built-in animations for common effects and lets you create custom animations and transition lifecycle callbacks.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T052011Z" creationid="pingfangx" creationdate="20191117T052011Z">
        <seg>该框架包括用于公共效果的内置动画，并允许你创建自定义动画和过渡生命周期回调。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The getter and setter much match a specific pattern.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T081227Z" creationid="pingfangx" creationdate="20191103T081227Z">
        <seg>getter 和 setter 非常匹配特定的模式。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The helper method &lt;c0&gt;&lt;a1&gt;resolveSizeAndState()&lt;/a1&gt;&lt;/c0&gt; is used to create the final width and height values.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T065626Z" creationid="pingfangx" creationdate="20191103T065626Z">
        <seg>辅助方法 &lt;c0&gt;&lt;a1&gt;resolveSizeAndState()&lt;/a1&gt;&lt;/c0&gt; 用于创建最终的宽度和高度值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The implementation is much more efficient (no interprocess communication needed) and you don't need to worry about any security issues related to other apps being able to receive or send your broadcasts.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T061259Z" creationid="pingfangx" creationdate="20191030T061259Z">
        <seg>该实现效率更高(不需要进程间通信)，而且你不必担心与其他应用程序能够接收或发送广播相关的任何安全问题。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The information can be read by any app that registers to receive the broadcast.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T063942Z" creationid="pingfangx" creationdate="20191030T063942Z">
        <seg>任何注册接收广播的应用程序都可以读取该信息。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The intent filters specify the broadcast actions your receiver subscribes to.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T053000Z" creationid="pingfangx" creationdate="20191030T053000Z">
        <seg>intent 过滤器指定接收器订阅的广播操作。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The intent may also include additional information bundled into its extra field.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T051222Z" creationid="pingfangx" creationdate="20191030T051134Z">
        <seg>intent 还可以包括捆绑到其 extra 字段中的附加信息。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The intent's action string must provide the app's Java package name syntax and uniquely identify the broadcast event.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T061527Z" creationid="pingfangx" creationdate="20191030T061527Z">
        <seg>intent 的操作字符串必须提供应用程序的 Java 包名称语法，并唯一标识广播事件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The left side of a view is constrained to the left side of the parent</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T072946Z" creationid="pingfangx" creationdate="20191103T072946Z">
        <seg>一个 view 的左边限制为 parent 的左边。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The main timing engine for property animation that also computes the values for the property to be animated.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T093009Z" creationid="pingfangx" creationdate="20191117T093009Z">
        <seg>属性动画的主计时引擎，它还计算要设置动画的属性的值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The menu to convert a layout to &lt;c1&gt;ConstraintLayout&lt;/c1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T072905Z" creationid="pingfangx" creationdate="20191103T072905Z">
        <seg>将一个布局转换为 &lt;c1&gt;ConstraintLayout&lt;/c1&gt; 的菜单</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The most common input event in the Android system is &lt;e0&gt;touch&lt;/e0&gt;, which triggers &lt;c1&gt;&lt;a2&gt;onTouchEvent(android.view.MotionEvent)&lt;/a2&gt;&lt;/c1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T065944Z" creationid="pingfangx" creationdate="20191103T065944Z">
        <seg>Android 系统中最常见的输入事件是 &lt;e0&gt;touch&lt;/e0&gt;，它触发 &lt;c1&gt;&lt;a2&gt;onTouchEvent(android.view.MotionEvent)&lt;/a2&gt;&lt;/c1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The most generic view you can extend is, unsurprisingly, &lt;c0&gt;&lt;a1&gt;View&lt;/a1&gt;&lt;/c0&gt;, so you will usually start by extending this to create your new super component.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064000Z" creationid="pingfangx" creationdate="20191103T064000Z">
        <seg>不出意料的，你可以继承的最通用的 view 是 &lt;c0&gt;&lt;a1&gt;View&lt;/a1&gt;&lt;/c0&gt; 所以通常情况你会从继承这个类开始创建你的组件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The most important part of a custom view is its appearance.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T065433Z" creationid="pingfangx" creationdate="20191103T065433Z">
        <seg>自定义 view 最重要的部分是它的外观。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The most important step in drawing a custom view is to override the &lt;c0&gt;&lt;a1&gt;onDraw()&lt;/a1&gt;&lt;/c0&gt; method.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T065454Z" creationid="pingfangx" creationdate="20191103T065454Z">
        <seg>绘制自定义 view 最重要的步骤是覆盖 &lt;c0&gt;&lt;a1&gt;onDraw()&lt;/a1&gt;&lt;/c0&gt; 方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The name of the styleable entity is, by convention, the same name as the name of the class that defines the custom view.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064956Z" creationid="pingfangx" creationdate="20191103T064956Z">
        <seg>按照惯例，styleable 实体的名称与定义自定义 view 的类的名称相同。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The namespace for broadcast actions is global.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T064218Z" creationid="pingfangx" creationdate="20191030T064218Z">
        <seg>广播操作的命名空间是全局的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The nested &lt;c9&gt;&lt;a10&gt;LinearLayout&lt;/a10&gt;&lt;/c9&gt; serves no real purpose other than to slow down your UI performance.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T095159Z" creationid="pingfangx" creationdate="20191103T095159Z">
        <seg>嵌套的 &lt;c9&gt;&lt;a10&gt;LinearLayout&lt;/a10&gt;&lt;/c9&gt; 除了降低用户界面的性能外，没有任何实际用途。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The new force applies on the existing velocity, which makes a continuous transition to the new target.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T054724Z" creationid="pingfangx" creationdate="20191117T054724Z">
        <seg>新的力应用于现有的速度，这使得向新目标连续过渡。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The next section deals with retrieving and applying the values at runtime.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064945Z" creationid="pingfangx" creationdate="20191103T064945Z">
        <seg>下一节将介绍如何在运行时获取和应用值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The next section discusses &lt;c2&gt;&lt;a3&gt;Paint&lt;/a3&gt;&lt;/c2&gt; in more detail.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T065505Z" creationid="pingfangx" creationdate="20191103T065505Z">
        <seg>下一节将更详细地讨论 &lt;c2&gt;&lt;a3&gt;Paint&lt;/a3&gt;&lt;/c2&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The number of cycles (default is 1).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T072607Z" creationid="pingfangx" creationdate="20191117T072607Z">
        <seg>周期的数目(默认值为 1)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The number of these processes running in the system is less bounded than foreground processes, but still relatively controlled.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191029T081155Z" creationid="pingfangx" creationdate="20191029T081155Z">
        <seg>在系统中运行的这些进程的数量比前台进程的限制要小，但仍然是相对可控的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The object still moves 40 pixels in 40 ms, but non-linearly.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T082017Z" creationid="pingfangx" creationdate="20191117T082017Z">
        <seg>这个物体在 40 毫秒内仍然会移动 40 个像素，但是是非线性的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The object's property to animate, referenced by its name.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T063114Z" creationid="pingfangx" creationdate="20191117T063114Z">
        <seg>要设置动画的对象的属性，由其名称引用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The offset is defined by the constrained view's margin.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T072603Z" creationid="pingfangx" creationdate="20191103T072603Z">
        <seg>偏移由被约束的 view 的 margin 定义。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The only difference is that your custom attributes belong to a different namespace.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T065000Z" creationid="pingfangx" creationdate="20191103T065000Z">
        <seg>唯一的区别是你的自定义属性属于不同的命名空间。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The only limit is your imagination and what you need the component to do.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064614Z" creationid="pingfangx" creationdate="20191103T064614Z">
        <seg>唯一的限制就是你的想象力和你需要组件干什么。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The only reason to keep such a process around is as a cache to improve startup time the next time a component of its application needs to run.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191029T080223Z" creationid="pingfangx" creationdate="20191029T080223Z">
        <seg>保留这样一个进程的唯一原因是作为一个缓存，以便在其应用程序的组件下次需要运行时提高启动时间。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The only time you should return &lt;c14&gt;false&lt;/c14&gt; from &lt;c15&gt;&lt;a16&gt;onDown()&lt;/a16&gt;&lt;/c15&gt; is if you truly want to ignore an entire gesture.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T070038Z" creationid="pingfangx" creationdate="20191103T070038Z">
        <seg>你应该从 &lt;c15&gt;&lt;a16&gt;onDown()&lt;/a16&gt;&lt;/c15&gt; 返回 &lt;c14&gt;false&lt;/c14&gt; 的唯一时间是如果你真的想要忽略整个手势。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The order receivers run in can be controlled with the android:priority attribute of the matching intent-filter; receivers with the same priority will be run in an arbitrary order.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T061025Z" creationid="pingfangx" creationdate="20191030T060952Z">
        <seg>可以使用匹配 intent 过滤器的 android:priority 属性控制接收器的运行顺序；具有相同优先级的接收器将以任意顺序运行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The other attribute you must provide is based on the value type.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T081347Z" creationid="pingfangx" creationdate="20191103T081347Z">
        <seg>必须提供的另一个属性基于值类型。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The other attributes and parameters in the definition are the ones passed into the custom component constructor, and then passed through to the EditText constructor, so they are the same parameters that you would use for an EditText view.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064559Z" creationid="pingfangx" creationdate="20191103T064559Z">
        <seg>定义的其他属性和参数会传递到自定义组件的构造方法中，然后再传给 EditText 的构造方法，所以和 EditText 使用的参数相同。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The overridden &lt;c0&gt;onMeasure()&lt;/c0&gt; method is called with width and height measure specifications (&lt;c1&gt;widthMeasureSpec&lt;/c1&gt; and &lt;c2&gt;heightMeasureSpec&lt;/c2&gt; parameters, both are integer codes representing dimensions) which should be treated as requirements for the restrictions on the width and height measurements you should produce.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064048Z" creationid="pingfangx" creationdate="20191103T064048Z">
        <seg>重写的 &lt;c0&gt;onMeasure()&lt;/c0&gt; 方法调用时会传递宽高的测量规格。(&lt;c1&gt;widthMeasureSpec&lt;/c1&gt; 和 &lt;c2&gt;heightMeasureSpec&lt;/c2&gt; 参数，两者都是整型表示的尺寸)，宽高的测量规格应该被视为你计算的宽高测量结果的限制。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The parameter to &lt;c2&gt;&lt;a3&gt;onDraw()&lt;/a3&gt;&lt;/c2&gt; is a &lt;c4&gt;&lt;a5&gt;Canvas&lt;/a5&gt;&lt;/c4&gt; object that the view can use to draw itself.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T065457Z" creationid="pingfangx" creationdate="20191103T065457Z">
        <seg>&lt;c2&gt;&lt;a3&gt;onDraw()&lt;/a3&gt;&lt;/c2&gt; 的参数是一个 &lt;c4&gt;&lt;a5&gt;Canvas&lt;/a5&gt;&lt;/c4&gt; 对象，view 可用于绘制自身。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The property animation system is a robust framework that allows you to animate almost anything.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T075943Z" creationid="pingfangx" creationdate="20191117T075943Z">
        <seg>属性动画系统是一个健壮的框架，允许你对几乎所有内容进行动画。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The property animation system is also more robust in the way it carries out animation.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T091937Z" creationid="pingfangx" creationdate="20191117T091937Z">
        <seg>属性动画系统在执行动画的方式上也更加健壮。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The property animation system lets you define the following characteristics of an animation:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T080051Z" creationid="pingfangx" creationdate="20191117T080051Z">
        <seg>属性动画系统允许你定义动画的以下特征：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The property animation system provides the following evaluators:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T093619Z" creationid="pingfangx" creationdate="20191117T093619Z">
        <seg>属性动画系统提供以下求值器：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The rate of change follows a sinusoidal pattern.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T072554Z" creationid="pingfangx" creationdate="20191117T072554Z">
        <seg>变化率遵循正弦曲线。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The rate of change is constant.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T072623Z" creationid="pingfangx" creationdate="20191117T072623Z">
        <seg>变化的速度是恒定的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The rate of change starts and ends slowly but accelerates through the middle.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T072405Z" creationid="pingfangx" creationdate="20191117T072405Z">
        <seg>变化的速度开始和结束都很慢，但从中间加速。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The rate of change starts out quickly, then decelerates.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T072611Z" creationid="pingfangx" creationdate="20191117T072611Z">
        <seg>变化的速度开始很快，然后减速。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The rate of change starts out slowly, then accelerates.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T072422Z" creationid="pingfangx" creationdate="20191117T072422Z">
        <seg>变化的速度开始缓慢，然后加速。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The receiver does not receive broadcasts from sources outside of the app.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T064150Z" creationid="pingfangx" creationdate="20191030T064150Z">
        <seg>接收器不接收来自应用程序外部源的广播。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The receiver then becomes a separate entry point into your app which means that the system can start the app and deliver the broadcast if the app is not currently running.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T053248Z" creationid="pingfangx" creationdate="20191030T053248Z">
        <seg>然后接收器成为应用程序的单独入口点，这意味着如果应用程序当前未运行，系统可以启动该应用程序并发送广播。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The receiver's host process becomes only as important as the other app components that are running in it.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T054749Z" creationid="pingfangx" creationdate="20191030T054749Z">
        <seg>接收器的宿主进程只会变得和运行在其中的其他应用程序组件一样重要。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The root &lt;c0&gt;&lt;a1&gt;View&lt;/a1&gt;&lt;/c0&gt; should be exactly how you'd like it to appear in each layout to which you add this layout.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T094559Z" creationid="pingfangx" creationdate="20191103T094559Z">
        <seg>根 &lt;c0&gt;&lt;a1&gt;View&lt;/a1&gt;&lt;/c0&gt; 应该正好是你希望它在添加此布局的每个布局中的显示方式。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The second animator in this example morphs the vector drawable's path from one shape to another.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T114309Z" creationid="pingfangx" creationdate="20191117T114309Z">
        <seg>本例中的第二个动画将 vector drawable 的路径从一个形状变形到另一个形状。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The second form should parse and apply any attributes defined in the layout file.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064113Z" creationid="pingfangx" creationdate="20191103T064113Z">
        <seg>第二种形式应该解析并应用所有在布局文件中定义的属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The second option is to use an &lt;a2&gt;Animated Vector Drawable&lt;/a2&gt;, which lets you animate the properties of a &lt;a3&gt;vector drawable&lt;/a3&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T102305Z" creationid="pingfangx" creationdate="20191117T102305Z">
        <seg>第二个选择是使用一个 &lt;a2&gt;Animated Vector Drawable&lt;/a2&gt;，它可以让你动画一个 &lt;a3&gt;Vector Drawable&lt;/a3&gt; 的属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The sections below explain how to create custom Views and use them in your application.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T063839Z" creationid="pingfangx" creationdate="20191103T063839Z">
        <seg>下面的章节将介绍如何创建自定义的 View 并在应用中使用它们。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The solution to this problem is to start a &lt;c4&gt;&lt;a5&gt;Service&lt;/a5&gt;&lt;/c4&gt; from the BroadcastReceiver, so the system knows that there is still active work being done in the process.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191029T074337Z" creationid="pingfangx" creationdate="20191029T074337Z">
        <seg>解决此问题的方法是从广播接收器启动 &lt;c4&gt;&lt;a5&gt;Service&lt;/a5&gt;&lt;/c4&gt;，以便系统知道此进程中仍有活动工作正在进行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The solution to this problem is typically to schedule a &lt;c4&gt;&lt;a5&gt;JobService&lt;/a5&gt;&lt;/c4&gt; from the BroadcastReceiver, so the system knows that there is still active work being done in the process.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191029T080808Z" creationid="pingfangx" creationdate="20191029T080808Z">
        <seg>解决此问题的方法通常是从广播接收器调度一个 &lt;c4&gt;&lt;a5&gt;JobService&lt;/a5&gt;&lt;/c4&gt;，以便系统知道此进程中仍有活动工作正在进行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The starting and ending layout are each stored in a &lt;c0&gt;&lt;a1&gt;Scene&lt;/a1&gt;&lt;/c0&gt;, though the starting scene is usually determined automatically from the current layout.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T055658Z" creationid="pingfangx" creationdate="20191117T055658Z">
        <seg>开始和结束布局都存储在 &lt;c0&gt;&lt;a1&gt;Scene&lt;/a1&gt;&lt;/c0&gt; 中，尽管开始场景通常由当前布局自动确定。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The state of your &lt;c0&gt;&lt;a1&gt;BroadcastReceiver&lt;/a1&gt;&lt;/c0&gt; (whether it is running or not) affects the state of its containing process, which can in turn affect its likelihood of being killed by the system.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T054641Z" creationid="pingfangx" creationdate="20191030T054641Z">
        <seg>&lt;c0&gt;&lt;a1&gt;BroadcastReceiver&lt;/a1&gt;&lt;/c0&gt; 的状态(它是否正在运行)会影响其包含进程的状态，进而影响其被系统杀死的可能性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The super.onDraw() method is called before the method ends.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064516Z" creationid="pingfangx" creationdate="20191103T064516Z">
        <seg>super.onDraw() 方法在方法结束前被调用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The superclass method should be invoked, and in this case, we do it at the end after we have painted the lines we want to include.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064518Z" creationid="pingfangx" creationdate="20191103T064518Z">
        <seg>应该调用超类方法，在这种情况下，我们在绘制了要包含的行之后最后执行它。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The superclass methods to override start with '&lt;c0&gt;on&lt;/c0&gt;', for example, &lt;c1&gt;&lt;a2&gt;onDraw()&lt;/a2&gt;&lt;/c1&gt;, &lt;c3&gt;&lt;a4&gt;onMeasure()&lt;/a4&gt;&lt;/c3&gt;, and &lt;c5&gt;&lt;a6&gt;onKeyDown()&lt;/a6&gt;&lt;/c5&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T063908Z" creationid="pingfangx" creationdate="20191103T063908Z">
        <seg>父类要重写的方法以 '&lt;c0&gt;on&lt;/c0&gt;' 开头，比如 &lt;c1&gt;&lt;a2&gt;onDraw()&lt;/a2&gt;&lt;/c1&gt;、&lt;c3&gt;&lt;a4&gt;onMeasure()&lt;/a4&gt;&lt;/c3&gt;、&lt;c5&gt;&lt;a6&gt;onKeyDown()&lt;/a6&gt;&lt;/c5&gt; 等等。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The system apps function both as apps for users and to provide key capabilities that developers can access from their own app.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T050046Z" creationid="pingfangx" creationdate="20191030T050046Z">
        <seg>系统应用程序既可以作为用户的应用程序，也可以提供开发人员可以从自己的应用程序访问的关键功能。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The system automatically sends broadcasts when various system events occur, such as when the system switches in and out of airplane mode.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T051047Z" creationid="pingfangx" creationdate="20191030T051047Z">
        <seg>当各种系统事件发生时，例如当系统切换到飞行模式和退出飞行模式时，系统自动发送广播。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The system creates a new &lt;c0&gt;&lt;a1&gt;BroadcastReceiver&lt;/a1&gt;&lt;/c0&gt; component object to handle each broadcast that it receives.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T053421Z" creationid="pingfangx" creationdate="20191030T053421Z">
        <seg>系统创建一个新的 &lt;c0&gt;&lt;a1&gt;BroadcastReceiver&lt;/a1&gt;&lt;/c0&gt; 组件对象来处理其接收到的每个广播。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The system keeps the process running except under cases of extreme memory pressure.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T054712Z" creationid="pingfangx" creationdate="20191030T054712Z">
        <seg>系统保持进程运行，除非在极端内存压力的情况下。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The system package manager registers the receiver when the app is installed.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T053059Z" creationid="pingfangx" creationdate="20191030T053059Z">
        <seg>安装应用程序时，系统包管理器会注册接收器。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The system restricts the broadcast to the set of apps that match the package.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T064027Z" creationid="pingfangx" creationdate="20191030T064027Z">
        <seg>系统将广播限制为与包匹配的应用程序集。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The time in milliseconds of the animation.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T063420Z" creationid="pingfangx" creationdate="20191117T063420Z">
        <seg>动画的时间(毫秒)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The toolbar's &lt;b1&gt;Margin&lt;/b1&gt; button.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T074724Z" creationid="pingfangx" creationdate="20191103T074724Z">
        <seg>工具栏的 &lt;b1&gt;Margin&lt;/b1&gt; 按钮。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The traffic lights on each block represent its Measure, Layout and Draw performance, helping you identify potential issues.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T092114Z" creationid="pingfangx" creationdate="20191103T092114Z">
        <seg>每个块上红绿灯代表其测量、布局和绘制性能，帮助你识别潜在问题。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The usual starting point is a Layout of some kind, so create a class that extends a Layout.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064229Z" creationid="pingfangx" creationdate="20191103T064229Z">
        <seg>通常需要从某种类型的的 Layout 开始，所以创建一个继承 Layout 的类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The value must be a reference to a resource that specifies an interpolator (not an interpolator class name).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T070830Z" creationid="pingfangx" creationdate="20191117T070830Z">
        <seg>该值必须是对指定插值器(而不是插值器类名)的资源的引用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The value where the animated property ends.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T063302Z" creationid="pingfangx" creationdate="20191117T063302Z">
        <seg>动画属性结束的值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The value where the animated property starts.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T063321Z" creationid="pingfangx" creationdate="20191117T063321Z">
        <seg>动画属性开始的值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The value where the animation ends.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T063825Z" creationid="pingfangx" creationdate="20191117T063825Z">
        <seg>动画结束的值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The value where the animation starts.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T063829Z" creationid="pingfangx" creationdate="20191117T063829Z">
        <seg>动画开始的值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The view animation framework supports both tween and frame by frame animations, which can both be declared in XML.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T065724Z" creationid="pingfangx" creationdate="20191117T065713Z">
        <seg>view 动画框架支持补间动画和帧动画，这两种动画都可以用 XML 声明。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The view animation system is also constrained in the fact that it only exposes a few aspects of a &lt;c4&gt;&lt;a5&gt;View&lt;/a5&gt;&lt;/c4&gt; object to animate, such as the scaling and rotation of a View but not the background color, for instance.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T091756Z" creationid="pingfangx" creationdate="20191117T091756Z">
        <seg>视图动画系统也受到限制，因为它只支持要设置动画的 &lt;c4&gt;&lt;a5&gt;view&lt;/a5&gt;&lt;/c4&gt; 对象的几个方面，例如视图的缩放和旋转，而不支持背景色。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The view animation system provides the capability to only animate &lt;c0&gt;&lt;a1&gt;View&lt;/a1&gt;&lt;/c0&gt; objects, so if you wanted to animate non-&lt;c2&gt;&lt;a3&gt;View&lt;/a3&gt;&lt;/c2&gt; objects, you have to implement your own code to do so.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T091719Z" creationid="pingfangx" creationdate="20191117T091719Z">
        <seg>视图动画系统仅提供了对 &lt;c0&gt;&lt;a1&gt;View&lt;/a1&gt;&lt;/c0&gt; 对象设置动画的能力，因此如果要对非 &lt;c2&gt;&lt;a3&gt;View&lt;/a3&gt;&lt;/c2&gt;  对象设置动画，则必须实现自己的代码。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The view animation system, however, takes less time to setup and requires less code to write.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T092047Z" creationid="pingfangx" creationdate="20191117T092047Z">
        <seg>然而，视图动画系统的设置时间更短，并且需要编写的代码更少。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The view changes its background color as it moves.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T081443Z" creationid="pingfangx" creationdate="20191103T081443Z">
        <seg>视图在移动时更改其背景色。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The view expands as much as possible to meet the constraints on each side (after accounting for the view's margins).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T074223Z" creationid="pingfangx" creationdate="20191103T074223Z">
        <seg>视图尽可能扩展以满足每一侧的约束(在考虑视图的边距之后)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The view expands only as much as needed to fit its contents.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T074212Z" creationid="pingfangx" creationdate="20191103T074212Z">
        <seg>视图仅根据需要扩展以适合其内容。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The view inspector indicates which is set as a ratio by connecting the corresponding edges with a solid line.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T074543Z" creationid="pingfangx" creationdate="20191103T074543Z">
        <seg>视图检查器通过用实线链接相应的边来指示设置为比率。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The view is set to a 16:9 aspect with the width based on a ratio of the height.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T074523Z" creationid="pingfangx" creationdate="20191103T074523Z">
        <seg>view 设置为 16：9，宽度基于高度的比率。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The views are evenly distributed (after margins are accounted for).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T074910Z" creationid="pingfangx" creationdate="20191103T074851Z">
        <seg>view 均匀分布(在考虑边距之后)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The views are packed together (after margins are accounted for).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T074935Z" creationid="pingfangx" creationdate="20191103T074935Z">
        <seg>view 被打包在一起(在考虑边距之后)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The views within a chain can be distributed either vertically or horizontally.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T074754Z" creationid="pingfangx" creationdate="20191103T074754Z">
        <seg>链中的视图可以垂直或水平分布。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Then click on the text baseline and drag the line to another baseline.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T073139Z" creationid="pingfangx" creationdate="20191103T073139Z">
        <seg>然后单击文本基线并将该线拖动到另一个基线。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Then the system figures out and executes an animation between the two layouts.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T055328Z" creationid="pingfangx" creationdate="20191117T055328Z">
        <seg>然后系统计算出并执行两个布局之间的动画。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Then you can set up the other views to use within your new component; this is where you would create the EditText field and the PopupList.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064243Z" creationid="pingfangx" creationdate="20191103T064243Z">
        <seg>然后就可以设置在新的组件中要使用 view，这里就应该创建 EditText 和 PopupList。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Then, to be able to send broadcasts to those receivers, the sending app must request the permission as shown below:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T063012Z" creationid="pingfangx" creationdate="20191030T063012Z">
        <seg>然后，要向这些接收器发送广播，发送应用程序必须请求如下所示的权限：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There are default interpolator resources available from the platform or you can create your own interpolator resource.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T070922Z" creationid="pingfangx" creationdate="20191117T070922Z">
        <seg>平台上有默认的插值器资源，也可以创建自己的插值器资源。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There are three important things to note in this code:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T065621Z" creationid="pingfangx" creationdate="20191103T065621Z">
        <seg>此代码中有三个重要事项需要注意：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There are three ways to control who can receive your broadcasts:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T063948Z" creationid="pingfangx" creationdate="20191030T063948Z">
        <seg>有三种方法可以控制谁可以接收你的广播：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There are three ways to limit the broadcasts that your app receives:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T064118Z" creationid="pingfangx" creationdate="20191030T064118Z">
        <seg>有三种方法可以限制应用程序接收的广播：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There are two pieces to animating properties: calculating the animated values and setting those values on the object and property that is being animated.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T093057Z" creationid="pingfangx" creationdate="20191117T093057Z">
        <seg>设置属性动画有两个部分：计算动画值和设置正在设置动画的对象和属性的值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There are two types of animations that you can do with the view animation framework:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T061123Z" creationid="pingfangx" creationdate="20191117T061123Z">
        <seg>使用视图动画框架可以执行两种类型的动画：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There are two ways to do this:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T070244Z" creationid="pingfangx" creationdate="20191103T070244Z">
        <seg>有两种方法可以做到这一点：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There is a form of the constructor that are called when the view is created from code and a form that is called when the view is inflated from a layout file.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064107Z" creationid="pingfangx" creationdate="20191103T064107Z">
        <seg>有一种形式的构造方法是在用代码创建 view 时被调用，另一种形式是在 view 从资源文件中加载时调用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There is an even easier option for creating a custom View which is useful in certain circumstances.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064421Z" creationid="pingfangx" creationdate="20191103T064421Z">
        <seg>在某些情况下，创建自定义 View 有一种更简单的选择。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There will only ever be a few such processes in the system, and these will only be killed as a last resort if memory is so low that not even these processes can continue to run.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191029T074830Z" creationid="pingfangx" creationdate="20191029T074830Z">
        <seg>系统中只有少数这样的进程，如果内存太低，甚至这些进程都无法继续运行，这些进程将作为最后手段被终止。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>These APIs form the building blocks you need to create Android apps by simplifying the reuse of core, modular system components and services, which include the following:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T043854Z" creationid="pingfangx" creationdate="20191030T043854Z">
        <seg>通过简化核心、模块化系统组件和服务的重用，这些 API 构成了创建 Android 应用程序所需的构建块，这些组件和服务包括：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>These APIs update the properties of your &lt;c2&gt;&lt;a3&gt;View&lt;/a3&gt;&lt;/c2&gt; objects over a period of time, continuously redrawing the view as the properties change.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T053818Z" creationid="pingfangx" creationdate="20191117T053818Z">
        <seg>这些 API 在一段时间内更新 &lt;c2&gt;&lt;a3&gt;View&lt;/a3&gt;&lt;/c2&gt; 对象的属性，并随着属性的变化不断重新绘制视图。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>These animations give users feedback on their actions and help keep them oriented to the UI.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T051845Z" creationid="pingfangx" creationdate="20191117T051845Z">
        <seg>这些动画为用户提供有关其操作的反馈，并帮助他们保持面向 UI。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>These broadcasts are sent when an event of interest occurs.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T050445Z" creationid="pingfangx" creationdate="20191030T050445Z">
        <seg>这些广播在发生感兴趣的事件时发送。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>These calls are crucial to ensure that the view behaves reliably.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T065102Z" creationid="pingfangx" creationdate="20191103T065102Z">
        <seg>这些调用对于确保 view 可靠地运行至关重要。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>These deep view hierarchies cause performance problems.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T070615Z" creationid="pingfangx" creationdate="20191103T070615Z">
        <seg>这些深层 view 层次结构会导致性能问题。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>These endpoints are centered vertically (via &lt;c2&gt;app:layout_constraintTop_toTopOf="parent"&lt;/c2&gt; and &lt;c3&gt;app:layout_constraintBottom_toBottomOf="parent"&lt;/c3&gt;).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T081022Z" creationid="pingfangx" creationdate="20191103T081022Z">
        <seg>这些端点被垂直居中(通过 &lt;c2&gt;app:layout_constraintTop_toTopOf="parent"&lt;/c2&gt; 和 &lt;c3&gt;app:layout_constraintBottom_toBottomOf="parent"&lt;/c3&gt;)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>These endpoints are defined in the &lt;c2&gt;&lt;ConstraintSet&gt;&lt;/c2&gt; elements later in the MotionScene.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T080918Z" creationid="pingfangx" creationdate="20191103T080918Z">
        <seg>这些端点将在后面的在 MotionScene 的 &lt;c2&gt;&lt;ConstraintSet&gt;&lt;/c2&gt; 元素定义。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>These process types are (in order of importance):</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191029T074432Z" creationid="pingfangx" creationdate="20191029T074432Z">
        <seg>这些进程类型是(按重要性排序)：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>These processes are considered extremely important and will not be killed unless doing so is required to keep all foreground processes running.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191029T081210Z" creationid="pingfangx" creationdate="20191029T081210Z">
        <seg>这些进程被认为是非常重要的，并且不会被杀死，除非需要这样做来保持所有前台进程运行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>These processes are kept in a pseudo-LRU list, where the last process on the list is the first killed to reclaim memory.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191029T081710Z" creationid="pingfangx" creationdate="20191029T081710Z">
        <seg>这些进程保存在伪 LRU 列表中，其中列表中的最后一个进程是第一个被终止以回收内存的进程。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>These processes have no direct impact on the user experience.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191029T075247Z" creationid="pingfangx" creationdate="20191029T075247Z">
        <seg>这些进程对用户体验没有直接影响。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>These processes often hold one or more &lt;c0&gt;&lt;a1&gt;Activity&lt;/a1&gt;&lt;/c0&gt; instances that are not currently visible to the user (the &lt;c2&gt;&lt;a3&gt;onStop()&lt;/a3&gt;&lt;/c2&gt; method has been called and returned).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191029T081535Z" creationid="pingfangx" creationdate="20191029T081535Z">
        <seg>这些进程通常保存一个或多个用户当前不可见的 &lt;c0&gt;&lt;a1&gt;Activity&lt;/a1&gt;&lt;/c0&gt; 实例(调用了 &lt;c2&gt;&lt;a3&gt;onStop()&lt;/a3&gt;&lt;/c2&gt; 方法并返回)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>These symbols represent the size mode as follows (click the symbol to toggle between these settings):</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T074113Z" creationid="pingfangx" creationdate="20191103T074113Z">
        <seg>这些符号表示大小模式，如下所示(单击该符号可在这些设置之间切换)：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>They are especially useful when the UI changes state, such as when new content loads or new actions become available.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T053007Z" creationid="pingfangx" creationdate="20191117T053007Z">
        <seg>当 UI 更改状态时(例如新内容加载或新操作可用时)，它们特别有用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>They do not animate other attributes (such as color).&lt;/s1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T075552Z" creationid="pingfangx" creationdate="20191103T075552Z">
        <seg>它们不动画的其他属性(例如颜色)。&lt;/s1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>They take the timing data that is provided by an &lt;c0&gt;&lt;a1&gt;Animator&lt;/a1&gt;&lt;/c0&gt; class, the animation's start and end value, and calculate the animated values of the property based on this data.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T093610Z" creationid="pingfangx" creationdate="20191117T093610Z">
        <seg>它们获取由 &lt;c0&gt;&lt;a1&gt;Animator&lt;/a1&gt;&lt;/c0&gt; 类提供的计时数据、动画的开始和结束值，并基于此数据计算属性的动画值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This allows you to specify several static &lt;a1&gt;drawable files&lt;/a1&gt; that will be displayed one at a time to create an animation.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T102243Z" creationid="pingfangx" creationdate="20191117T102243Z">
        <seg>这允许你指定几个静态 &lt;a1&gt;drawable files&lt;/a1&gt;，这些文件将一次显示一个以创建动画。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This allows your existing animation effects to be accelerated, decelerated, repeated, bounced, etc.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T071931Z" creationid="pingfangx" creationdate="20191117T071931Z">
        <seg>这允许你现有的动画效果被加速、减速、重复、弹跳等。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This animation XML will apply the interpolator:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T072703Z" creationid="pingfangx" creationdate="20191117T072703Z">
        <seg>这个动画 XML 将运用插值器：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This animation runs for just three frames.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T102842Z" creationid="pingfangx" creationdate="20191117T102842Z">
        <seg>这个动画只有三帧。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This application code will apply the animation to an &lt;c0&gt;&lt;a1&gt;ImageView&lt;/a1&gt;&lt;/c0&gt; and start the animation:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T071840Z" creationid="pingfangx" creationdate="20191117T071840Z">
        <seg>此应用程序代码将动画应用于 &lt;c0&gt;&lt;a1&gt;ImageView&lt;/a1&gt;&lt;/c0&gt; 并启动动画：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This application code will set the animation as the background for a View, then play the animation:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T073010Z" creationid="pingfangx" creationdate="20191117T073010Z">
        <seg>此应用程序代码将动画设置为视图的背景，然后播放动画：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This bundle of options may include which views are shared between the activities so the transition framework can connect them during the animation.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T060212Z" creationid="pingfangx" creationdate="20191117T060212Z">
        <seg>该选项 bundle 可能包括 activity 之间共享的视图，以便过渡框架可以在动画期间连接它们。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This class updates the property accordingly when it computes a new value for the animation.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T093425Z" creationid="pingfangx" creationdate="20191117T093425Z">
        <seg>此类在计算动画的新值时相应地更新属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This code declares two custom attributes, &lt;c0&gt;showText&lt;/c0&gt; and &lt;c1&gt;labelPosition&lt;/c1&gt;, that belong to a styleable entity named &lt;c2&gt;PieChart&lt;/c2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064955Z" creationid="pingfangx" creationdate="20191103T064955Z">
        <seg>此代码声明了两个自定义属性 &lt;c0&gt;showText&lt;/c0&gt; 和 &lt;c1&gt;labelPosition&lt;/c1&gt;，它们属于名为 &lt;c2&gt;PieChart&lt;/c2&gt; 的 styleable 实体。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This constructor allows the layout editor to create and edit an instance of your view.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064909Z" creationid="pingfangx" creationdate="20191103T064909Z">
        <seg>此构造函数允许布局编辑器创建和编辑 view 的实例。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This directive assigns the alias &lt;c1&gt;custom&lt;/c1&gt; to the namespace &lt;c2&gt;http://schemas.android.com/apk/res/com.example.customviews&lt;/c2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T065011Z" creationid="pingfangx" creationdate="20191103T065011Z">
        <seg>此伪指令将别名 &lt;c1&gt;custom&lt;/c1&gt; 分配给命名空间 &lt;c2&gt;http://schemas.android.com/apk/res/com.example.customviews&lt;/c2&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This example overrides only one method, &lt;c0&gt;onDraw()&lt;/c0&gt;, but you might need to override others as you create your own custom components.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064513Z" creationid="pingfangx" creationdate="20191103T064513Z">
        <seg>此示例仅覆盖一个方法 &lt;c0&gt;onDraw()&lt;/c0&gt;，但你可能需要在创建自己的自定义组件时覆盖其他方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This gesture makes sense if the UI responds by moving quickly in the direction of the fling, then slowing down, as if the user had pushed on a flywheel and set it spinning.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T070118Z" creationid="pingfangx" creationdate="20191103T070118Z">
        <seg>如果 UI 通过快速朝向投掷方向移动来响应，然后减速，则该手势是有意义的，就好像用户已经按下飞轮并将其旋转一样。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This helper returns an appropriate &lt;c2&gt;&lt;a3&gt;View.MeasureSpec&lt;/a3&gt;&lt;/c2&gt; value by comparing the view's desired size to the spec passed into &lt;c4&gt;&lt;a5&gt;onMeasure()&lt;/a5&gt;&lt;/c4&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T065628Z" creationid="pingfangx" creationdate="20191103T065628Z">
        <seg>此助手通过将 view 的所需大小与传递到&lt;c4&gt; &lt;a5&gt; onMeasure()&lt;/a5&gt; &lt;/c4&gt; 的 spec 进行比较，返回适当的 &lt;c2&gt;&lt;a3&gt;View.MeasureSpec&lt;/a3&gt;&lt;/c2&gt; 值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This helps avoid situations where very long running services with memory leaks or other problems consume so much RAM that they prevent the system from making effective use of cached processes.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191029T081333Z" creationid="pingfangx" creationdate="20191029T081333Z">
        <seg>这有助于避免长时间运行的带有内存泄漏或其他问题的服务消耗大量 RAM，从而阻止系统有效使用缓存进程的情况。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This includes users with disabilities that prevent them from seeing or using a touchscreen.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T065150Z" creationid="pingfangx" creationdate="20191103T065150Z">
        <seg>这包括看到或使用触摸屏有困难的残障用户。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is a cleaner way to create inner classes if they do not need access to state from the outer class, keeps the generated class small, and allows it to be used easily from other classes.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064503Z" creationid="pingfangx" creationdate="20191103T064503Z">
        <seg>如果他们不需要从外部类访问状态，这是一个更简洁的方法来创建内部类，它可以让生成的类更小，而且方便从其他类访问。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is a traditional animation in the sense that it is created with a sequence of different images, played in order, like a roll of film.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T102403Z" creationid="pingfangx" creationdate="20191117T102403Z">
        <seg>这是一个传统的动画，从某种意义上说，它是由一系列不同的图像组成的，按顺序播放，就像一卷电影。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is an example of an animation with linear interpolation, meaning the object moves at a constant speed.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T081717Z" creationid="pingfangx" creationdate="20191117T081717Z">
        <seg>这是一个带有线性插值的动画示例，表示对象以恒定速度移动。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is based on the same transition framework described above to &lt;a0&gt;animate layout changes&lt;/a0&gt;, but it allows you to create animations between layouts in &lt;e1&gt;separate activities&lt;/e1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T055956Z" creationid="pingfangx" creationdate="20191117T055929Z">
        <seg>这是基于上述相同的过渡框架来 &lt;a0&gt;设置布局更改的动画&lt;/a0&gt;，但它允许你在 &lt;e1&gt;separate activities&lt;/e1&gt; 中的布局之间创建动画。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is called a Normal Broadcast.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T061157Z" creationid="pingfangx" creationdate="20191030T061157Z">
        <seg>这被称为正常广播。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is especially useful if the work you want to complete in your &lt;c5&gt;onReceive()&lt;/c5&gt; is long enough to cause the UI thread to miss a frame (&gt;16ms), making it better suited for a background thread.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T055150Z" creationid="pingfangx" creationdate="20191030T055150Z">
        <seg>如果你想在 &lt;c5&gt;onReceive()&lt;/c5&gt; 中完成的工作足够长，以致于 UI 线程错过一个帧(&gt;16ms)，这一点特别有用，使其更适合于后台线程。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is made slightly more complex by the requirements of limits from the parent (which are passed in to the &lt;c3&gt;onMeasure()&lt;/c3&gt; method) and by the requirement to call the &lt;c4&gt;setMeasuredDimension()&lt;/c4&gt; method with the measured width and height once they have been calculated.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064039Z" creationid="pingfangx" creationdate="20191103T064039Z">
        <seg>由于 2 个限制使得该方法稍微有点复杂，一是来自父类的限制（通过 &lt;c3&gt;onMeasure()&lt;/c3&gt; 方法传递），2 是当测量出宽高后需要调用 &lt;c4&gt;setMeasuredDimension()&lt;/c4&gt; 方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is more efficient, but means that receivers cannot read results from other receivers, propagate data received from the broadcast, or abort the broadcast.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T061217Z" creationid="pingfangx" creationdate="20191030T061217Z">
        <seg>这更有效，但意味着接收器无法读取其他接收器的结果、传播从广播接收到的数据或中止广播。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is not a perfect example, and the APIs for doing this might change, but it does demonstrate the principles.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064443Z" creationid="pingfangx" creationdate="20191103T064443Z">
        <seg>这不是一个完美的例子，用于这样做的 API 可能会更改，但它确实证明了这些原则。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is particularly important when the layout is inflated repeatedly, such as when used in a &lt;c5&gt;&lt;a6&gt;ListView&lt;/a6&gt;&lt;/c5&gt; or &lt;c7&gt;&lt;a8&gt;GridView&lt;/a8&gt;&lt;/c7&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T091952Z" creationid="pingfangx" creationdate="20191103T091952Z">
        <seg>当布局重复加载时(例如在 &lt;c5&gt;&lt;a6&gt;ListView&lt;/a6&gt;&lt;/c5&gt; 或 &lt;c7&gt;&lt;a8&gt;GridView&lt;/a8&gt;&lt;/c7&gt; 中使用时)，这一点尤为重要。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is similar to the &lt;c7&gt;on...&lt;/c7&gt; events in &lt;c8&gt;&lt;a9&gt;Activity&lt;/a9&gt;&lt;/c8&gt; or &lt;c10&gt;&lt;a11&gt;ListActivity&lt;/a11&gt;&lt;/c10&gt; that you override for lifecycle and other functionality hooks.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T063911Z" creationid="pingfangx" creationdate="20191103T063911Z">
        <seg>这和在 &lt;c8&gt;&lt;a9&gt;Activity&lt;/a9&gt;&lt;/c8&gt; 或 &lt;c10&gt;&lt;a11&gt;ListActivity&lt;/a11&gt;&lt;/c10&gt; 中的 &lt;c7&gt;on...&lt;/c7&gt; 事件一样，你可以重写生命周期或其他一些有用 hook。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is the default behavior.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T074254Z" creationid="pingfangx" creationdate="20191103T074254Z">
        <seg>这是默认的行为。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is the default.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T074852Z" creationid="pingfangx" creationdate="20191103T074852Z">
        <seg>这是默认值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is useful because it controls access to them but isn't necessary (perhaps you want to create a new public View for wider use in your application).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T063931Z" creationid="pingfangx" creationdate="20191103T063931Z">
        <seg>定义为内部类是有用的但不是必须的。有用是因为它可以控制对它的访问，不是必须是因为你可能想要创建一个公用的类来在应用中广泛使用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is useful if you want to display a custom loading animation comprised of several images, or if you want one icon to morph into another after a user's action.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T102111Z" creationid="pingfangx" creationdate="20191117T102111Z">
        <seg>如果要显示由多个图像组成的自定义加载动画，或者在用户操作后希望一个图标变形为另一个图标，则这非常有用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is useful when you want to constrain a view to the a set of views rather than to one specific view.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T073402Z" creationid="pingfangx" creationdate="20191103T073402Z">
        <seg>当你希望将视图约束到一组视图而不是一个特定视图时，这非常有用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This keeps the broadcast active after returning from &lt;c5&gt;onReceive()&lt;/c5&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T064558Z" creationid="pingfangx" creationdate="20191030T064558Z">
        <seg>从 &lt;c5&gt;onReceive()&lt;/c5&gt; 返回后，这将使广播保持活动状态。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This layout shows a small bitmap image on the left and two stacked items of text on the right.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T092149Z" creationid="pingfangx" creationdate="20191103T092149Z">
        <seg>此布局在左侧显示一个小位图图像，在右侧显示两个堆叠的文本项。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This lesson covers some of the most common operations.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T065436Z" creationid="pingfangx" creationdate="20191103T065436Z">
        <seg>本课程介绍了一些最常见的操作。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This lesson demonstrates how to use features of the Android framework to add these real-world behaviors to your custom view.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T065933Z" creationid="pingfangx" creationdate="20191103T065933Z">
        <seg>本课程演示如何使用 Android 框架的功能将这些真实行为添加到自定义view中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This lesson discusses how to use the Android framework to create the core functionality of a view class.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064858Z" creationid="pingfangx" creationdate="20191103T064858Z">
        <seg>本类讨论如何使用 Android 框架创建视图类的核心函数式。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This lesson shows how you can improve your layout's initialization performance by loading portions of your layout on demand.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T091717Z" creationid="pingfangx" creationdate="20191103T091717Z">
        <seg>本课演示如何通过按需加载部分布局来提高布局的初始化性能。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This lesson shows how you can use SDK tools to inspect your layout and discover performance bottlenecks.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T091613Z" creationid="pingfangx" creationdate="20191103T091613Z">
        <seg>本课介绍如何使用 SDK 工具检查布局并发现性能瓶颈。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This may occur, for example, if the foreground Activity is displayed as a dialog that allows the previous Activity to be seen behind it.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191029T075018Z" creationid="pingfangx" creationdate="20191029T075018Z">
        <seg>这可能会发生，例如，如果前台 Activity 显示为一个对话框，允许在它后面观察前一个 Activity。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This means that you can instantly show any point within the transition based on some condition, such as touch input.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T080411Z" creationid="pingfangx" creationdate="20191103T080411Z">
        <seg>这意味着你可以根据某些条件(例如触摸输入)立即显示转换中的任何点。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This method passes back a &lt;c4&gt;&lt;a5&gt;TypedArray&lt;/a5&gt;&lt;/c4&gt; array of values that have already been dereferenced and styled.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T065038Z" creationid="pingfangx" creationdate="20191103T065038Z">
        <seg>此方法传回已取消引用和样式化的 &lt;c4&gt;&lt;a5&gt;TypedArray&lt;/a5&gt;&lt;/c4&gt; 值数组。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This method's parameters are &lt;c2&gt;&lt;a3&gt;View.MeasureSpec&lt;/a3&gt;&lt;/c2&gt; values that tell you how big your view's parent wants your view to be, and whether that size is a hard maximum or just a suggestion.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T065606Z" creationid="pingfangx" creationdate="20191103T065606Z">
        <seg>此方法的参数是 &lt;c2&gt;&lt;a3&gt;View.MeasureSpec&lt;/a3&gt;&lt;/c2&gt; 值，用于告诉你 view 的父级想要 view 的大小，以及该大小是最大值还是仅仅是建议。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This must be the root element.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T072845Z" creationid="pingfangx" creationdate="20191117T072845Z">
        <seg>这必须是根元素。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This object is valid only for the duration of the call to &lt;c2&gt;&lt;a3&gt;onReceive(Context, Intent)&lt;/a3&gt;&lt;/c2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T053442Z" creationid="pingfangx" creationdate="20191030T053442Z">
        <seg>此对象仅在调用 &lt;c2&gt;&lt;a3&gt;onReceive(Context, Intent)&lt;/a3&gt;&lt;/c2&gt; 时有效。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This page provides a guide to building a layout with &lt;a0&gt;&lt;c1&gt;ConstraintLayout&lt;/c1&gt;&lt;/a0&gt; in Android Studio 3.0 or higher.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T071154Z" creationid="pingfangx" creationdate="20191103T071154Z">
        <seg>本页提供了在 Android Studio 3.0 或更高版本中使用 &lt;a0&gt;&lt;c1&gt;ConstraintLayout&lt;/c1&gt;&lt;/a0&gt; 构建布局的指南。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This phenomenon is called &lt;e0&gt;double taxation&lt;/e0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T092709Z" creationid="pingfangx" creationdate="20191103T092709Z">
        <seg>这种现象被称为 &lt;e0&gt;double taxation (双重征税)&lt;/e0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This point can be the edge of another view, the edge of the layout, or a guideline.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T072033Z" creationid="pingfangx" creationdate="20191103T072033Z">
        <seg>锚点可以是另一个 view 的边缘，布局的边缘，或一个参考线。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This process is created for the application when some of its code needs to be run, and will remain running until it is no longer needed &lt;e0&gt;and&lt;/e0&gt; the system needs to reclaim its memory for use by other applications.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191029T073644Z" creationid="pingfangx" creationdate="20191029T073644Z">
        <seg>此进程是在应用程序的某些代码需要运行时为其创建的，并将保持运行状态，直到不再需要它为止 &lt;e0&gt;并且&lt;/e0&gt; 系统需要回收其内存以供其他应用程序使用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This process results in a more natural-looking animation, as shown in figure 4.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T054730Z" creationid="pingfangx" creationdate="20191117T054730Z">
        <seg>这个过程会产生一个更自然的动画，如图 4 所示。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This section discusses how to define custom attributes and specify their values.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064943Z" creationid="pingfangx" creationdate="20191103T064943Z">
        <seg>本节讨论如何定义自定义属性并指定其值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This step is necessary because all gestures begin with an &lt;c5&gt;&lt;a6&gt;onDown()&lt;/a6&gt;&lt;/c5&gt; message.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T070035Z" creationid="pingfangx" creationdate="20191103T070035Z">
        <seg>此步骤是必要的，因为所有手势都以 &lt;c5&gt;&lt;a6&gt;onDown()&lt;/a6&gt;&lt;/c5&gt; 消息开头。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This takes a &lt;c0&gt;dp&lt;/c0&gt; dimension for the view's maximum width.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T074400Z" creationid="pingfangx" creationdate="20191103T074400Z">
        <seg>这需要一个 &lt;c0&gt;dp&lt;/c0&gt; 尺寸作为视图的最大宽度。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This takes a &lt;c0&gt;dp&lt;/c0&gt; dimension for the view's minimum width.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T074354Z" creationid="pingfangx" creationdate="20191103T074354Z">
        <seg>这需要一个 &lt;c0&gt;dp&lt;/c0&gt; 尺寸作为视图的最小宽度。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This technique is slightly more complex to set up, but it works more closely with the animation system and doesn't require potentially unnecessary view invalidation.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T070258Z" creationid="pingfangx" creationdate="20191103T070258Z">
        <seg>这种技术设置稍微复杂一些，但它与动画系统的关系更为密切，并且不需要潜在的不必要的 view 失效调用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This technique requires that you compute scroll offsets in &lt;c4&gt;&lt;a5&gt;onDraw()&lt;/a5&gt;&lt;/c4&gt; and call &lt;c6&gt;&lt;a7&gt;postInvalidate()&lt;/a7&gt;&lt;/c6&gt; every time the scroll offset changes.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T070251Z" creationid="pingfangx" creationdate="20191103T070251Z">
        <seg>此技术要求你在 &lt;c4&gt;&lt;a5&gt;onDraw()&lt;/a5&gt;&lt;/c4&gt; 中计算滚动偏移，并在每次滚动偏移时调用 &lt;c6&gt;&lt;a7&gt;postInvalidate()&lt;/a7&gt;&lt;/c6&gt; 变化。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This way, you can ensure that all views in the barrier always align to each other, even if you don't know which view will be the longest or tallest.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T073744Z" creationid="pingfangx" creationdate="20191103T073744Z">
        <seg>通过这种方式，可以确保在屏障所有视图始终对准对方，即使你不知道哪个视图将是最长或最高。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Though these processes are not directly visible to the user, they are generally doing things that the user cares about (such as background mp3 playback or background network data upload or download), so the system will always keep such processes running unless there is not enough memory to retain all foreground and visible process.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191029T075209Z" creationid="pingfangx" creationdate="20191029T075209Z">
        <seg>虽然这些进程对用户不直接可见，但它们通常都在做用户关心的事情(如后台 MP3 播放或后台网络数据上传或下载)，因此系统将始终保持这些进程的运行，除非没有足够的内存来保留所有的前台和可见进程。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Though these processes are not directly visible to the user, they are generally doing things that the user cares about (such as background network data upload or download), so the system will always keep such processes running unless there is not enough memory to retain all foreground and visible processes.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191029T081251Z" creationid="pingfangx" creationdate="20191029T081251Z">
        <seg>虽然这些进程对用户不直接可见，但它们通常都在做用户关心的事情(如后台网络数据上传或下载)，因此系统将始终保持这些进程的运行，除非没有足够的内存来保留所有前台和可见的进程。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Time interpolation: You can specify how the values for the property are calculated as a function of the animation's current elapsed time.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T080120Z" creationid="pingfangx" creationdate="20191117T080120Z">
        <seg>时间插值：可以指定如何根据动画的当前运行时间计算属性值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To add a built-in &lt;c0&gt;&lt;a1&gt;View&lt;/a1&gt;&lt;/c0&gt; to your user interface, you specify it in an XML element and control its appearance and behavior with element attributes.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064913Z" creationid="pingfangx" creationdate="20191103T064913Z">
        <seg>要将内置的 &lt;c0&gt;&lt;a1&gt;View&lt;/a1&gt;&lt;/c0&gt; 添加到用户界面，可以在 XML 元素中指定它并使用元素属性控制其外观和行为。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To add a constraint, do the following:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T071810Z" creationid="pingfangx" creationdate="20191103T071810Z">
        <seg>要添加约束，请执行以下操作：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To allow Android Studio to interact with your view, at a minimum you must provide a constructor that takes a &lt;c0&gt;&lt;a1&gt;Context&lt;/a1&gt;&lt;/c0&gt; and an &lt;c2&gt;&lt;a3&gt;AttributeSet&lt;/a3&gt;&lt;/c2&gt; object as parameters.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064908Z" creationid="pingfangx" creationdate="20191103T064908Z">
        <seg>要允许 Android Studio 与你的 view 进行交互，你必须至少提供一个构造函数，该构造函数接受 &lt;c0&gt;&lt;a1&gt;Context&lt;/a1&gt;&lt;/c0&gt; 和 &lt;c2&gt;&lt;a3&gt;AttributeSet&lt;/a3&gt;&lt;/c2&gt; 对象作为参数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To animate something, you specify the object property that you want to animate, such as an object's position on the screen, how long you want to animate it for, and what values you want to animate between.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T080040Z" creationid="pingfangx" creationdate="20191117T080040Z">
        <seg>要设置某个对象的动画，可以指定要设置动画的对象属性，例如对象在屏幕上的位置、要设置动画的时间以及要在其间设置动画的值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To avoid a UI that feels sluggish or stutters during playback, ensure that animations consistently run at 60 frames per second.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T070532Z" creationid="pingfangx" creationdate="20191103T070532Z">
        <seg>为避免在播放过程中感觉迟缓或不流畅的 UI，请确保动画始终以每秒 60 帧的速度运行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To avoid including such a redundant view group, you can instead use the &lt;c0&gt;&lt;merge&gt;&lt;/c0&gt; element as the root view for the re-usable layout.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T095209Z" creationid="pingfangx" creationdate="20191103T095209Z">
        <seg>为了避免包含这样的冗余视图组，你可以使用 &lt;c0&gt;&lt;merge&gt;&lt;/c0&gt; 元素作为可重用布局的根视图。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To avoid this, prefer using context registration over manifest declaration.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T063909Z" creationid="pingfangx" creationdate="20191030T063909Z">
        <seg>为了避免这种情况，最好使用上下文注册而不是清单声明。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To avoid this, you should either call &lt;c1&gt;&lt;a2&gt;goAsync()&lt;/a2&gt;&lt;/c1&gt; (if you want a little more time to process the broadcast in a background thread) or schedule a &lt;c3&gt;&lt;a4&gt;JobService&lt;/a4&gt;&lt;/c3&gt; from the receiver using the &lt;c5&gt;&lt;a6&gt;JobScheduler&lt;/a6&gt;&lt;/c5&gt;, so the system knows that the process continues to perform active work.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T055053Z" creationid="pingfangx" creationdate="20191030T055053Z">
        <seg>为了避免这种情况，你应该调用 &lt;c1&gt;&lt;a2&gt;goAsync()&lt;/a2&gt;&lt;/c1&gt;(如果你希望有更多的时间在后台线程中处理广播)，或者使用 &lt;c5&gt;&lt;a6&gt;JobScheduler&lt;/a6&gt;&lt;/c5&gt; 从接收器调度 &lt;c3&gt;&lt;a4&gt;JobService&lt;/a4&gt;&lt;/c3&gt;，以便系统知道该进程继续执行活动工作。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To better understand when you should use animations, also see the &lt;a0&gt;material design guide to motion&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T053202Z" creationid="pingfangx" creationdate="20191117T053202Z">
        <seg>为了更好地理解什么时候应该使用动画，也请参阅 &lt;a0&gt;material design guide To motion&lt;/a0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To build an animation using ConstraintSets, specify two layout files which act as a start and end keyframe for the animation.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T075516Z" creationid="pingfangx" creationdate="20191103T075516Z">
        <seg>若要使用 ConstraintSets 生成动画，请指定两个布局文件作为动画的开始和结束关键帧。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To convert an existing layout to a constraint layout, follow these steps:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T071719Z" creationid="pingfangx" creationdate="20191103T071719Z">
        <seg>要将现有布局转换为约束布局，请按照下列步骤操作：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To convert raw touch events into gestures, Android provides &lt;c0&gt;&lt;a1&gt;GestureDetector&lt;/a1&gt;&lt;/c0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T065955Z" creationid="pingfangx" creationdate="20191103T065955Z">
        <seg>要将原始触摸事件转换为手势，Android 提供 &lt;c0&gt;&lt;a1&gt;GestureDetector&lt;/a1&gt;&lt;/c0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To create a barrier, follow these steps:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T073517Z" creationid="pingfangx" creationdate="20191103T073517Z">
        <seg>要创建屏障，请执行以下步骤：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To create a baseline constraint, right-click the text view you want to constrain and then click &lt;b0&gt;Show Baseline&lt;/b0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T073119Z" creationid="pingfangx" creationdate="20191103T073119Z">
        <seg>要创建基线约束，请右键单击要约束的文本视图，然后单击 &lt;b0&gt;Show Baseline&lt;/b0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To create a chain, select all of the views to be included in the chain, right-click one of the views, select &lt;b0&gt;Chains&lt;/b0&gt; and then select either &lt;b1&gt;Center Horizontally&lt;/b1&gt; or &lt;b2&gt;Center Vertically&lt;/b2&gt;, as shown in video 4:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T075011Z" creationid="pingfangx" creationdate="20191103T075011Z">
        <seg>要创建链，请选择要包含在链中的所有视图，右键单击其中一个视图，选择 &lt;b0&gt;Chains&lt;/b0&gt;，然后选择 &lt;b1&gt;Center Horizontally&lt;/b1&gt; 或 &lt;b2&gt;Center Vertically&lt;/b2&gt;，如视频 4 所示：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To create a compound component:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064227Z" creationid="pingfangx" creationdate="20191103T064227Z">
        <seg>要创建一个组合组件：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To create a fully customized component:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T063954Z" creationid="pingfangx" creationdate="20191103T063954Z">
        <seg>要创建一个完全自定义的组件：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To create a guideline, click &lt;s0&gt;Guidelines&lt;/s0&gt; &lt;i1/&gt; in the toolbar, and then click either &lt;s2&gt;Add Vertical Guideline&lt;/s2&gt; or &lt;s3&gt;Add Horizontal Guideline&lt;/s3&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T073241Z" creationid="pingfangx" creationdate="20191103T073241Z">
        <seg>要创建参考线，请单击工具栏中的 &lt;s0&gt;Guidelines&lt;/s0&gt;&lt;i1/&gt;，然后单击 &lt;s2&gt;Add Vertical Guideline&lt;/s2&gt; 或 &lt;s3&gt;Add Horizontal Guideline&lt;/s3&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To create these animations with the least amount of effort, you can enable animations on your layout so that when you simply change the visibility of a view, an animation applies automatically.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T053856Z" creationid="pingfangx" creationdate="20191117T053856Z">
        <seg>若要以最少的工作量创建这些动画，可以在布局上启用动画，以便仅更改视图的可见性时，动画将自动应用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To declare a broadcast receiver in the manifest, perform the following steps:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T052804Z" creationid="pingfangx" creationdate="20191030T052804Z">
        <seg>要在清单中声明广播接收器，请执行以下步骤：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To define a view's position in &lt;c0&gt;ConstraintLayout&lt;/c0&gt;, you must add at least one horizontal and one vertical constraint for the view.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T071217Z" creationid="pingfangx" creationdate="20191103T071217Z">
        <seg>要在 &lt;c0&gt;ConstraintLayout&lt;/c0&gt; 中定义 view 的位置，你必须为 view 添加至少一个水平和垂直的约束。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To define custom attributes, add &lt;c0&gt;&lt;declare-styleable&gt; &lt;/c0&gt; resources to your project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064948Z" creationid="pingfangx" creationdate="20191103T064948Z">
        <seg>要定义自定义属性，请将 &lt;c0&gt;&lt;declare-styleable&gt; &lt;/c0&gt; 资源添加到项目中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To determine which processes should be killed when low on memory, Android places each process into an "importance hierarchy" based on the components running in them and the state of those components.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191029T074402Z" creationid="pingfangx" creationdate="20191029T074402Z">
        <seg>为了确定在内存不足时应该终止哪些进程，Android 根据运行在其中的组件和这些组件的状态将每个进程放入“重要性层次结构”。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To efficiently re-use complete layouts, you can use the &lt;c0&gt;&lt;include/&gt;&lt;/c0&gt; and &lt;c1&gt;&lt;merge/&gt;&lt;/c1&gt; tags to embed another layout inside the current layout.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T094402Z" creationid="pingfangx" creationdate="20191103T094402Z">
        <seg>为了有效地重用完整的布局，可以使用 &lt;c0&gt;&lt;include/&gt;&lt;/c0&gt; 和 &lt;c1&gt;&lt;merge/&gt;&lt;/c1&gt; 标签在当前布局中嵌入另一个布局。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To enable the ratio, click &lt;b1&gt;Toggle Aspect Ratio Constraint&lt;/b1&gt; (callout &lt;s2&gt;1&lt;/s2&gt; in figure 13), and then enter the &lt;v3&gt;width&lt;/v3&gt;:&lt;v4&gt;height&lt;/v4&gt; ratio in the input that appears.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T074541Z" creationid="pingfangx" creationdate="20191103T074541Z">
        <seg>要启用比率，点击 &lt;b1&gt;Toggle Aspect Ratio Constraint&lt;/b1&gt; (如图 13 中的编号 &lt;s2&gt;1&lt;/s2&gt;)，然后在出现的输入框中输入 &lt;v3&gt;width&lt;/v3&gt;:&lt;v4&gt;height&lt;/v4&gt; 。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To enable this behavior in your custom view, you must:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064916Z" creationid="pingfangx" creationdate="20191103T064916Z">
        <seg>要在自定义 view 中启用此行为，你必须：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To ensure that all your views are evenly spaced, click &lt;s0&gt;Margin&lt;/s0&gt; &lt;i1/&gt; in the toolbar to select the default margin for each view that you add to the layout.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T074654Z" creationid="pingfangx" creationdate="20191103T074654Z">
        <seg>若要确保所有视图的间距均匀，请单击工具栏中的 &lt;s0&gt;Margin&lt;/s0&gt; &lt;i1/&gt; 以选择添加到布局中的每个视图的默认边距。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To get started, watch the video embedded here and read the &lt;a0&gt;Animations Overview&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T052041Z" creationid="pingfangx" creationdate="20191117T052020Z">
        <seg>要开始，看这里的嵌入视频和阅读 &lt;a0&gt;Animations Overview&lt;/a0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To get this information, call &lt;a0&gt;&lt;c1&gt;getConnectionInfo()&lt;/c1&gt;&lt;/a0&gt; instead.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T052041Z" creationid="pingfangx" creationdate="20191030T052041Z">
        <seg>要获取此信息，请改为调用 &lt;a0&gt;&lt;c1&gt;getConnectionInfo()&lt;/c1&gt;&lt;/a0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To give an idea of the control you get with custom views, here are some examples of what you could do with them:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T063806Z" creationid="pingfangx" creationdate="20191103T063806Z">
        <seg>给控制你自定义 VIew 的一些意见，这里是一些你可做的例子：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To help you avoid missing constraints, the Layout Editor can automatically add constraints for you with the &lt;a2&gt;Autoconnect and infer constraints&lt;/a2&gt; features.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T071304Z" creationid="pingfangx" creationdate="20191103T071304Z">
        <seg>为了帮助我们去避免出现缺少约束的错误，布局编辑器的 &lt;a2&gt;Autoconnect and infer constraints&lt;/a2&gt; 功能可以为你自动添加约束。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To keep layout information separate from motion descriptions, each &lt;c4&gt;MotionLayout&lt;/c4&gt; references a separate MotionScene.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T080838Z" creationid="pingfangx" creationdate="20191103T080812Z">
        <seg>为了使布局信息与运动描述分开，每个 &lt;c4&gt;MotionLayout&lt;/c4&gt; 引用一个单独的 MotionScene。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To learn how to build animations with the property animation system, read the &lt;a0&gt;Property Animation Overview&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T053921Z" creationid="pingfangx" creationdate="20191117T053921Z">
        <seg>要了解如何使用属性动画系统构建动画，请阅读 &lt;a0&gt;Property Animation Overview&lt;/a0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To make several transformations happen simultaneously, give them the same start time; to make them sequential, calculate the start time plus the duration of the preceding transformation.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T075204Z" creationid="pingfangx" creationdate="20191117T075204Z">
        <seg>若要使多个转换同时发生，请为它们指定相同的开始时间；若要使它们连续，请计算开始时间加上前面转换的持续时间。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To make them occur sequentially, you must specify the &lt;c7&gt;startOffset&lt;/c7&gt; attribute, as shown in the example below.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T075246Z" creationid="pingfangx" creationdate="20191117T075246Z">
        <seg>要使它们按顺序发生，必须指定 &lt;c7&gt;startOffset&lt;/c7&gt; 属性，如下例所示。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To move, reveal, or hide views within the current layout, you can use the property animation system provided by the &lt;c0&gt;&lt;a1&gt;android.animation&lt;/a1&gt;&lt;/c0&gt; package, available in Android 3.0 (API level 11) and higher.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T053758Z" creationid="pingfangx" creationdate="20191117T053758Z">
        <seg>要在当前布局中移动、显示或隐藏视图，可以使用 &lt;c0&gt;&lt;a1&gt;android.animation&lt;/a1&gt;&lt;/c0&gt; 包提供的属性动画系统，该包在 android 3.0(API 级别 11)及更高版本中提供。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To provide dynamic behavior, expose a property getter and setter pair for each custom attribute.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T065055Z" creationid="pingfangx" creationdate="20191103T065055Z">
        <seg>要提供动态行为，请为每个自定义属性公开属性 getter 和 setter 方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To provide these behaviors, the Android Support library includes physics-based animation APIs that rely on the laws of physics to control how your animations occur.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T054403Z" creationid="pingfangx" creationdate="20191117T054403Z">
        <seg>为了提供这些行为，Android 支持库包括基于物理的动画 API，它们依赖物理定律来控制动画的发生方式。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To receive the broadcast, the receiving app must request the permission as shown below:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T062102Z" creationid="pingfangx" creationdate="20191030T062102Z">
        <seg>要接收广播，接收应用程序必须请求如下所示的权限：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To register a receiver with a context, perform the following steps:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T053524Z" creationid="pingfangx" creationdate="20191030T053524Z">
        <seg>要用上下文注册接收器，请执行以下步骤：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To see a full example of property animation, see the &lt;c0&gt;ChangeColor&lt;/c0&gt; class in the &lt;a1&gt;CustomTransition&lt;/a1&gt; sample on GitHub.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T080309Z" creationid="pingfangx" creationdate="20191117T080309Z">
        <seg>要查看属性动画的完整示例，请参见 GitHub 上的 &lt;a1&gt;CustomTransition&lt;/a1&gt; 示例中的 &lt;c0&gt;ChangeColor&lt;/c0&gt; 类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To see a variety of layouts you can create with &lt;c0&gt;ConstraintLayout&lt;/c0&gt;, check out the &lt;a1&gt;Constraint Layout Examples project on GitHub&lt;/a1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T071214Z" creationid="pingfangx" creationdate="20191103T071214Z">
        <seg>要查看使用 ConstraintLayout 创建的各种布局，请查看 GitHub 上的 &lt;c0&gt;ConstraintLayout&lt;/c0&gt; 项目： &lt;a1&gt;Constraint Layout Examples project on GitHub&lt;/a1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To select a different sizing mode, click a view and open the &lt;s0&gt;Attributes&lt;/s0&gt; &lt;i1/&gt; window on the right side of the editor.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T074045Z" creationid="pingfangx" creationdate="20191103T074037Z">
        <seg>要选择不同的大小调整模式，请单击视图并打开编辑器右侧的 &lt;s0&gt;Attributes&lt;/s0&gt; &lt;i1/&gt; 窗口。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To speed up your view, eliminate unnecessary code from routines that are called frequently.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T070553Z" creationid="pingfangx" creationdate="20191103T070553Z">
        <seg>要加快 view 速度，请从频繁调用的例程中删除不必要的代码。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To start a fling, call &lt;c0&gt;&lt;a1&gt;fling()&lt;/a1&gt;&lt;/c0&gt; with the starting velocity and the minimum and maximum x and y values of the fling.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T070158Z" creationid="pingfangx" creationdate="20191103T070158Z">
        <seg>要开始投掷，请使用起始速度以及投掷的最小和最大 x 和 y 值调用 &lt;c0&gt;&lt;a1&gt;fling()&lt;/a1&gt;&lt;/c0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To start a new constraint layout file, follow these steps:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T071742Z" creationid="pingfangx" creationdate="20191103T071742Z">
        <seg>要创建新的约束布局文件，请按照下列步骤：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To start an animation, create a &lt;c0&gt;&lt;a1&gt;ValueAnimator&lt;/a1&gt;&lt;/c0&gt; and give it the starting and ending values for the property that you want to animate, along with the duration of the animation.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T091100Z" creationid="pingfangx" creationdate="20191117T091100Z">
        <seg>要启动动画，请创建一个 &lt;c0&gt;&lt;a1&gt;ValueAnimator&lt;/a1&gt;&lt;/c0&gt;，并为其提供要设置动画的属性的开始和结束值以及动画的持续时间。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To start with, the platform includes a variety of prebuilt View and ViewGroup subclasses — called widgets and layouts, respectively — that you can use to construct your UI.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T063733Z" creationid="pingfangx" creationdate="20191103T063733Z">
        <seg>初始时，安卓平台包含了各种预制的 View 和 ViewGroup 的子类，分别叫做 widgets 和 layouts，你可以用它们来创建自己的 UI。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To stop receiving broadcasts, call &lt;c0&gt;&lt;a1&gt;unregisterReceiver(android.content.BroadcastReceiver)&lt;/a1&gt;&lt;/c0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T054307Z" creationid="pingfangx" creationdate="20191030T054307Z">
        <seg>要停止接收广播，调用 &lt;c0&gt;&lt;a1&gt;unregisterReceiver(android.content.BroadcastReceiver)&lt;/a1&gt;&lt;/c0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To summarize, the use of a Layout as the basis for a Custom Control has a number of advantages, including:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064355Z" creationid="pingfangx" creationdate="20191103T064355Z">
        <seg>总之，使用 Layout 作为自定义控件的基类有一些优点，包括：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To support users with disabilities, you should:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T065151Z" creationid="pingfangx" creationdate="20191103T065151Z">
        <seg>为了支持残障用户，你应该：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To use &lt;c0&gt;ConstraintLayout&lt;/c0&gt; in your project, proceed as follows:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T071321Z" creationid="pingfangx" creationdate="20191103T071321Z">
        <seg>要在项目中使用 &lt;c0&gt;ConstraintLayout&lt;/c0&gt;，按下列步骤进行：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To use &lt;c1&gt;MotionLayout&lt;/c1&gt; in your project, add the &lt;c2&gt;ConstraintLayout&lt;/c2&gt; 2.0 dependency to your app's &lt;c3&gt;build.gradle&lt;/c3&gt; file.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T080616Z" creationid="pingfangx" creationdate="20191103T080616Z">
        <seg>要在项目中使用 &lt;c1&gt;MotionLayout&lt;/c1&gt;，请将 &lt;c2&gt;ConstraintLayout&lt;/c2&gt;2.0 依赖项添加到应用程序的 &lt;c3&gt;build.gradle&lt;/c3&gt; 文件中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To use the animation system, whenever a property changes that will affect your view's appearance, do not change the property directly.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T070408Z" creationid="pingfangx" creationdate="20191103T070408Z">
        <seg>要使用动画系统，只要属性发生更改会影响 view 的外观，请不要直接更改属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To use the custom attributes from this class, you would use the tag &lt;c2&gt;com.example.customviews.charting.PieChart$PieView&lt;/c2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T065024Z" creationid="pingfangx" creationdate="20191103T065024Z">
        <seg>要使用此类中的自定义属性，可以使用标记 &lt;c2&gt;com.example.customviews.charting.PieChart$PieView&lt;/c2&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To view the errors and other warnings, click &lt;s0&gt;Show Warnings and Errors&lt;/s0&gt; &lt;i1/&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T071303Z" creationid="pingfangx" creationdate="20191103T071247Z">
        <seg>要查看错误和其他警告，请单击 &lt;s0&gt;Show Warnings and Errors&lt;/s0&gt; &lt;i1/&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Touch events by themselves are not particularly useful.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T065949Z" creationid="pingfangx" creationdate="20191103T065949Z">
        <seg>触摸事件本身并不是特别有用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Transformations can be sequential or simultaneous - for example, you can have the contents of a TextView move from left to right, and then rotate 180 degrees, or you can have the text move and rotate simultaneously.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T075127Z" creationid="pingfangx" creationdate="20191117T075127Z">
        <seg>转换可以是连续的，也可以是同时的——例如，可以让 TextView 的内容从左向右移动，然后旋转 180 度，或者让文本同时移动和旋转。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Tween animation</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T062358Z" creationid="pingfangx" creationdate="20191117T062358Z">
        <seg>补间动画</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Tween animation calculates the animation with information such as the start point, end point, size, rotation, and other common aspects of an animation.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T074832Z" creationid="pingfangx" creationdate="20191117T074832Z">
        <seg>补间动画使用动画的起点、终点、大小、旋转和其他常见方面的信息计算动画。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Two common physics-based animations are the following:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T054410Z" creationid="pingfangx" creationdate="20191117T054410Z">
        <seg>以下是两种常见的基于物理的动画：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>UI designers sometimes create deep hierarchies of nested &lt;c2&gt;&lt;a3&gt;ViewGroup&lt;/a3&gt;&lt;/c2&gt; objects in order to get the UI to behave properly.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T070614Z" creationid="pingfangx" creationdate="20191103T070614Z">
        <seg>UI 设计人员有时会创建嵌套的 &lt;c2&gt;&lt;a3&gt;ViewGroup&lt;/a3&gt;&lt;/c2&gt; 对象的深层次结构，以使 UI 正常运行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>UI elements fade in and out instead of appearing and disappearing.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T070401Z" creationid="pingfangx" creationdate="20191103T070401Z">
        <seg>UI 元素淡入淡出而不是出现和消失。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Unlike the built-in views, your custom view can make application-specific assumptions about the size and shape of its children, and thus avoid traversing its children to calculate measurements.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T070623Z" creationid="pingfangx" creationdate="20191103T070623Z">
        <seg>与内置 view 不同，你的自定义 view 可以针对其子项的大小和形状进行特定于应用程序的假设，从而避免遍历其子项以计算度量。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Use AnimatedVectorDrawable</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T111112Z" creationid="pingfangx" creationdate="20191117T111112Z">
        <seg>使用 AnimatedVectorDrawable</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Use AnimationDrawable</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T102308Z" creationid="pingfangx" creationdate="20191117T102308Z">
        <seg>使用 AnimationDrawable</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Use Lint</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T092737Z" creationid="pingfangx" creationdate="20191103T092737Z">
        <seg>使用 Lint</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Use compound drawables - A &lt;c0&gt;&lt;a1&gt;LinearLayout&lt;/a1&gt;&lt;/c0&gt; which contains an &lt;c2&gt;&lt;a3&gt;ImageView&lt;/a3&gt;&lt;/c2&gt; and a &lt;c4&gt;&lt;a5&gt;TextView&lt;/a5&gt;&lt;/c4&gt; can be more efficiently handled as a compound drawable.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T092954Z" creationid="pingfangx" creationdate="20191103T092954Z">
        <seg>使用复合 drawable -  &lt;c0&gt;&lt;a1&gt;LinearLayout&lt;/a1&gt;&lt;/c0&gt; 其中包含一个 &lt;c2&gt;&lt;a3&gt;ImageView&lt;/a3&gt;&lt;/c2&gt; 和 &lt;c4&gt;&lt;a5&gt;TextView&lt;/a5&gt;&lt;/c4&gt; 可以替换为一个复合 drawable 可以更有效地处理。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Use the &lt;include&gt; tag</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T094708Z" creationid="pingfangx" creationdate="20191103T094708Z">
        <seg>使用 &lt;include&gt; 标签</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Use the &lt;merge&gt; tag</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T095002Z" creationid="pingfangx" creationdate="20191103T095002Z">
        <seg>使用 &lt;merge&gt; 标签</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Use the Custom Component</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064518Z" creationid="pingfangx" creationdate="20191103T064518Z">
        <seg>使用自定义的组件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Use your new extension class.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T063923Z" creationid="pingfangx" creationdate="20191103T063923Z">
        <seg>使用你新的继承类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Useless leaf - A layout that has no children or no background can often be removed (since it is invisible) for a flatter and more efficient layout hierarchy.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T093153Z" creationid="pingfangx" creationdate="20191103T093153Z">
        <seg>无用的叶子 - 没有子级或背景的布局通常可以删除(因为它是不可见的)，以获得更平坦和更高效的布局层次。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Useless parent - A layout with children that has no siblings, is not a &lt;c0&gt;&lt;a1&gt;ScrollView&lt;/a1&gt;&lt;/c0&gt; or a root layout, and does not have a background, can be removed and have its children moved directly into the parent for a flatter and more efficient layout hierarchy.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T093254Z" creationid="pingfangx" creationdate="20191103T093254Z">
        <seg>无用的父级 - 具有没有同级子级、不是 &lt;c0&gt;&lt;a1&gt;ScrollView&lt;/a1&gt;&lt;/c0&gt; 或根级布局且没有背景的布局，可以删除并将其子级直接移到父级中，以获得更平坦、更高效的布局层次结构。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>User actions are turned into events that trigger callbacks, and you can override the callbacks to customize how your application responds to the user.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T065942Z" creationid="pingfangx" creationdate="20191103T065942Z">
        <seg>用户操作将转换为触发回调的事件，你可以重写回调以自定义应用程序响应用户的方式。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Users also sense subtle behavior or feel in an interface, and react best to subtleties that mimic the real world.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T065926Z" creationid="pingfangx" creationdate="20191103T065926Z">
        <seg>用户还可以在界面中感受微妙的行为或感觉，并对模仿现实世界的细微之处做出最佳反应。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Users expect a modern UI to transition smoothly between states.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T070359Z" creationid="pingfangx" creationdate="20191103T070359Z">
        <seg>用户期望现代 UI 在各状态之间平滑过渡。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Using a Linux kernel allows Android to take advantage of &lt;a0&gt;key security features&lt;/a0&gt; and allows device manufacturers to develop hardware drivers for a well-known kernel.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T033308Z" creationid="pingfangx" creationdate="20191030T033308Z">
        <seg>使用 Linux 内核的 Android 利用 &lt;a0&gt;关键安全特性&lt;/a0&gt;，并允许设备制造商开发为知名的内核开发硬件驱动程序。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Using this mode on either the height or width also allows you to &lt;a0&gt;set a size ratio&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T074424Z" creationid="pingfangx" creationdate="20191103T074424Z">
        <seg>在“高度”或“宽度”上使用此模式还可以&lt;a0&gt;设置大小比&lt;/a0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Using this tool helps you discover bottlenecks in the layout performance.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T092034Z" creationid="pingfangx" creationdate="20191103T092034Z">
        <seg>使用这个工具可以帮助你发现在布局中的性能瓶颈。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Usually there are many of these processes running, so they are kept in an LRU list to ensure the process that was most recently seen by the user is the last to be killed when running low on memory.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191029T075402Z" creationid="pingfangx" creationdate="20191029T075402Z">
        <seg>通常有许多这样的进程在运行，因此它们被保存在 LRU 列表中，以确保用户最近看到的进程是在内存不足时最后被终止的进程。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Usually, these animations are defined statically with a drawable resource, but you can also define the animation behavior at runtime.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T053411Z" creationid="pingfangx" creationdate="20191117T053411Z">
        <seg>通常，这些动画是使用 drawable 资源静态定义的，但你也可以在运行时定义动画行为。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Various application components can cause its containing process to be considered foreground in different ways.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191029T074641Z" creationid="pingfangx" creationdate="20191029T074602Z">
        <seg>不同的应用组件可以用不同的方式，使其包含进程被认为是前台进程。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>View Animation</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T061110Z" creationid="pingfangx" creationdate="20191117T061110Z">
        <seg>View 动画</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>View C is constrained to a barrier, which moves based on the position/size of both view A and view B</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T073815Z" creationid="pingfangx" creationdate="20191103T073815Z">
        <seg>视图 C 被限制为一个屏障，其移动同时基于图 A 和图 B 的位置/尺寸</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>View C is now vertically constrained below view A</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T072848Z" creationid="pingfangx" creationdate="20191103T072848Z">
        <seg>view C 现在垂直限制在 view A 下方</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>View animation</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T065633Z" creationid="pingfangx" creationdate="20191117T065633Z">
        <seg>View 动画</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Views are redrawn very frequently, and many drawing objects require expensive initialization.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T065535Z" creationid="pingfangx" creationdate="20191103T065535Z">
        <seg>view 重新绘制非常频繁，许多绘制对象需要昂贵的初始化。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Visually, this process creates an abrupt stop in the animation, and a disjointed movement afterwards, as shown in figure 3.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T054545Z" creationid="pingfangx" creationdate="20191117T054545Z">
        <seg>从视觉上看，这个过程会在动画中创建一个突然的停止，和一个脱节的运动，如图 3 所示。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We now have our custom component, but how can we use it?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064525Z" creationid="pingfangx" creationdate="20191103T064525Z">
        <seg>我们现在有自己的自定义组件了，怎么使用呢？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Well-written custom views can also be added and styled via XML.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064915Z" creationid="pingfangx" creationdate="20191103T064915Z">
        <seg>编写良好的自定义 view 也可以通过 XML 添加和设置样式。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When a broadcast is sent, the system automatically routes broadcasts to apps that have subscribed to receive that particular type of broadcast.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T050540Z" creationid="pingfangx" creationdate="20191030T050540Z">
        <seg>发送广播时，系统会自动将广播路由到已订阅接收该特定类型广播的应用程序。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When a framework API makes a call to access device hardware, the Android system loads the library module for that hardware component.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T033448Z" creationid="pingfangx" creationdate="20191030T033448Z">
        <seg>当一个框架 API 调用访问设备硬件时，Android 系统加载该硬件组件的库模块。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When a view is created from an XML layout, all of the attributes in the XML tag are read from the resource bundle and passed into the view's constructor as an &lt;c0&gt;&lt;a1&gt;AttributeSet&lt;/a1&gt;&lt;/c0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T065027Z" creationid="pingfangx" creationdate="20191103T065027Z">
        <seg>从 XML 布局创建 view 时，XML 标记中的所有属性都从资源包中读取，并作为 &lt;c0&gt;&lt;a1&gt;AttributeSet&lt;/a1&gt;&lt;/c0&gt; 传递到 view 的构造函数中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When creating constraints, remember the following rules:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T072331Z" creationid="pingfangx" creationdate="20191103T072331Z">
        <seg>创建约束时，请记住以下规则：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When deciding how to classify a process, the system will base its decision on the most important level found among all the components currently active in the process.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191029T080254Z" creationid="pingfangx" creationdate="20191029T080254Z">
        <seg>在决定如何对进程进行分类时，系统将根据在进程中当前活动的所有组件中找到的最重要级别来进行决策。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When selecting a view, the &lt;b1&gt;Attributes&lt;/b1&gt; window includes controls for &lt;s2&gt;1&lt;/s2&gt; size ratio, &lt;s3&gt;2&lt;/s3&gt; deleting constraints, &lt;s4&gt;3&lt;/s4&gt; height/width mode, &lt;s5&gt;4&lt;/s5&gt; margins, and &lt;s6&gt;5&lt;/s6&gt; constraint bias.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T073952Z" creationid="pingfangx" creationdate="20191103T073952Z">
        <seg>当选择一个视图，在 &lt;b1&gt;Attributes&lt;/b1&gt; 窗口包括用于控制 &lt;s2&gt;1&lt;/s2&gt; 尺寸比，&lt;s3&gt;2&lt;/s3&gt; 删除约束，&lt;s4&gt;3&lt;/s4&gt; 高度/宽度模式，&lt;s5&gt;4&lt;/s5&gt; 边距和 &lt;s6&gt;5&lt;/s6&gt; 约束偏移。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When the &lt;c0&gt;&lt;a1&gt;ValueAnimator&lt;/a1&gt;&lt;/c0&gt; is done calculating an elapsed fraction, it calls the &lt;c2&gt;&lt;a3&gt;TimeInterpolator&lt;/a3&gt;&lt;/c2&gt; that is currently set, to calculate an &lt;e4&gt;interpolated fraction&lt;/e4&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T091350Z" creationid="pingfangx" creationdate="20191117T091350Z">
        <seg>当 &lt;c0&gt;&lt;a1&gt;ValueAnimator&lt;/a1&gt;&lt;/c0&gt; 完成经过分数的计算时，它调用当前设置的 &lt;c2&gt;&lt;a3&gt;TimeInterpolator&lt;/a3&gt;&lt;/c2&gt;，来计算 &lt;e4&gt;interpolated fraction (插值分数)&lt;/e4&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When the chain is set to either &lt;b1&gt;spread&lt;/b1&gt; or &lt;b2&gt;spread inside&lt;/b2&gt;, you can fill the remaining space by setting one or more views to "match constraints" (&lt;c3&gt;0dp&lt;/c3&gt;).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T074926Z" creationid="pingfangx" creationdate="20191103T074926Z">
        <seg>当链被设置为 &lt;b1&gt;spread&lt;/b1&gt; 或 &lt;b2&gt;spread inside&lt;/b2&gt;，你可以通过将一个或多个 view 设置为(&lt;c3&gt;0dp&lt;/c3&gt;)来填充剩余空间。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When the class is nested in the &lt;c1&gt;NoteEditor&lt;/c1&gt; class, this technique will not work.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064558Z" creationid="pingfangx" creationdate="20191103T064558Z">
        <seg>当这个类嵌套在 &lt;c1&gt;NoteEditor&lt;/c1&gt; 类中时，这个技巧将无效。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When the constraint is created, the editor gives it a &lt;a0&gt;default margin&lt;/a0&gt; to separate the two views.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T072330Z" creationid="pingfangx" creationdate="20191103T072330Z">
        <seg>创建约束时，编辑器会给它一个 &lt;a0&gt;default margin&lt;/a0&gt; 来分隔两个视图。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When the interpolated fraction is calculated, &lt;c0&gt;&lt;a1&gt;ValueAnimator&lt;/a1&gt;&lt;/c0&gt; calls the appropriate &lt;c2&gt;&lt;a3&gt;TypeEvaluator&lt;/a3&gt;&lt;/c2&gt;, to calculate the value of the property that you are animating, based on the interpolated fraction, the starting value, and the ending value of the animation.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T091551Z" creationid="pingfangx" creationdate="20191117T091551Z">
        <seg>计算插值分数后，&lt;c0&gt;&lt;a1&gt;ValueAnimator&lt;/a1&gt;&lt;/c0&gt; 调用相应的 &lt;c2&gt;&lt;a3&gt;TypeEvaluator&lt;/a3&gt;&lt;/c2&gt;，根据插值分数、动画的起始值和结束值计算要设置动画的属性的值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When we are finished, the new class will be able to substitute for a normal &lt;c1&gt;EditText&lt;/c1&gt; view.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064505Z" creationid="pingfangx" creationdate="20191103T064505Z">
        <seg>当我们完成后，新的类可以替换一个正常的 &lt;c1&gt;EditText&lt;/c1&gt; 类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When you add a constraint to both sides of a view (and the view size for the same dimension is either "fixed" or "wrap content"), the view becomes centered between the two constraints with a bias of 50% by default.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T073819Z" creationid="pingfangx" creationdate="20191103T073819Z">
        <seg>当向 view 的两侧添加约束时(并且 view 的尺寸的大小为 "fixed" 或 "wrap content")，默认情况下，view 将在两个约束之间居中，偏差为 50%。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When you add a view in a &lt;c0&gt;ConstraintLayout&lt;/c0&gt;, it displays a bounding box with square resizing handles on each corner and circular constraint handles on each side.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T071851Z" creationid="pingfangx" creationdate="20191103T071851Z">
        <seg>当你在 &lt;c0&gt;ConstraintLayout&lt;/c0&gt; 中添加一个 view 时，它会显示一个边框，每个角上都有方形调整大小的手柄，每边都有圆形的约束手柄。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When you apply a &lt;c2&gt;ConstraintSet&lt;/c2&gt; to a displayed &lt;c3&gt;ConstraintLayout&lt;/c3&gt;, the layout updates the constraints of all of its children.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T075454Z" creationid="pingfangx" creationdate="20191103T075454Z">
        <seg>将 &lt;c2&gt;ConstraintSet&lt;/c2&gt; 应用于显示的 &lt;c3&gt;ConstraintLayout&lt;/c3&gt; 时，布局将更新其所有子级的约束。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When you call &lt;c0&gt;&lt;a1&gt;sendBroadcast(Intent, String)&lt;/a1&gt;&lt;/c0&gt; or &lt;c2&gt;&lt;a3&gt;sendOrderedBroadcast(Intent, String, BroadcastReceiver, Handler, int, String, Bundle)&lt;/a3&gt;&lt;/c2&gt;, you can specify a permission parameter.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T061930Z" creationid="pingfangx" creationdate="20191030T061930Z">
        <seg>当你调用 &lt;c0&gt;&lt;a1&gt;sendBroadcast(Intent, String)&lt;/a1&gt;&lt;/c0&gt; 或 &lt;c2&gt;&lt;a3&gt;sendOrderedBroadcast(Intent, String, BroadcastReceiver, Handler, int, String, Bundle)&lt;/a3&gt;&lt;/c2&gt; 时，可以指定一个权限参数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When you call &lt;c2&gt;&lt;a3&gt;start()&lt;/a3&gt;&lt;/c2&gt; the animation begins.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T091104Z" creationid="pingfangx" creationdate="20191117T091104Z">
        <seg>当你调用 &lt;c2&gt;&lt;a3&gt;start()&lt;/a3&gt;&lt;/c2&gt; 时，动画开始。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When you define a vector drawable that you want to animate, use the &lt;c0&gt;android:name&lt;/c0&gt; attribute to assign a unique name to groups and paths, so you can refer to them from your animator definitions.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T113917Z" creationid="pingfangx" creationdate="20191117T113805Z">
        <seg>定义要设置动画的 vector drawable 时，请使用 &lt;c0&gt;android:name&lt;/c0&gt; 属性为组和路径指定一个唯一的名称，以便可以从动画器定义中引用它们。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When you drop a view into the Layout Editor, it stays where you leave it even if it has no constraints.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T071228Z" creationid="pingfangx" creationdate="20191103T071228Z">
        <seg>当你拖动一个 view 到布局编辑器中，它会停留在你放开它的地方，即使它没有任何约束。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When you need to change the visibility or position of views in your layout, you should include subtle animations to help the user understand how the UI is changing.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T053720Z" creationid="pingfangx" creationdate="20191117T053720Z">
        <seg>当你需要更改视图在布局中的可见性或位置时，你应该包含一些细微的动画，以帮助用户了解 UI 是如何更改的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When you pass &lt;c0&gt;&lt;a1&gt;onTouchEvent()&lt;/a1&gt;&lt;/c0&gt; a touch event that it doesn't recognize as part of a gesture, it returns &lt;c2&gt;false&lt;/c2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T070048Z" creationid="pingfangx" creationdate="20191103T070048Z">
        <seg>当你传递 &lt;c0&gt;&lt;a1&gt;onTouchEvent()&lt;/a1&gt;&lt;/c0&gt; 触摸事件时，它无法识别为手势的一部分，它将返回 &lt;c2&gt;false&lt;/c2&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When you register a receiver, any app can send potentially malicious broadcasts to your app's receiver.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T064111Z" creationid="pingfangx" creationdate="20191030T064111Z">
        <seg>注册接收器时，任何应用都可以向应用的接收器发送潜在的恶意广播。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When you want to animate a bitmap graphic such as an icon or illustration, you should use the drawable animation APIs.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T053327Z" creationid="pingfangx" creationdate="20191117T053327Z">
        <seg>当你想动画位图图形，例如图标或插图，你应该使用 drawable 动画 API。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When you want to load the layout specified by the &lt;c0&gt;&lt;a1&gt;ViewStub&lt;/a1&gt;&lt;/c0&gt;, either set it visible by calling &lt;c2&gt;&lt;a3&gt;setVisibility(View.VISIBLE)&lt;/a3&gt;&lt;/c2&gt; or call &lt;c4&gt;&lt;a5&gt;inflate()&lt;/a5&gt;&lt;/c4&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T095908Z" creationid="pingfangx" creationdate="20191103T095855Z">
        <seg>当你要加载由 &lt;c0&gt;&lt;a1&gt;ViewStub&lt;/a1&gt;&lt;/c0&gt; 指定的布局时，可以通过调用 &lt;c2&gt;&lt;a3&gt;setVisibility(View.VISIBLE)&lt;/a3&gt;&lt;/c2&gt; 将其设置为 visible，或调用 &lt;c4&gt;&lt;a5&gt;inflate()&lt;/a5&gt;&lt;/c4&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When your UI changes in response to user action, you should animate the layout transitions.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T051735Z" creationid="pingfangx" creationdate="20191117T051735Z">
        <seg>当用户界面响应用户操作而更改时，应设置布局转换的动画。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When your view is assigned a size, the layout manager assumes that the size includes all of the view's padding.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T065554Z" creationid="pingfangx" creationdate="20191103T065554Z">
        <seg>为 view 指定大小时，布局管理器会假定该大小包含所有 view 的 padding。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Whenever possible, your animations should apply real-world physics so they are natural-looking.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T054330Z" creationid="pingfangx" creationdate="20191117T054330Z">
        <seg>只要可能，你的动画应该应用现实世界的物理，使他们是自然的外观。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Whereas, animations built by with physics-based animation APIs such as &lt;c0&gt;&lt;a1&gt;DynamicAnimation&lt;/a1&gt;&lt;/c0&gt; are driven by force.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T054630Z" creationid="pingfangx" creationdate="20191117T054630Z">
        <seg>然而，使用基于物理的动画 API 如 &lt;c0&gt;&lt;a1&gt;DynamicAnimation&lt;/a1&gt;&lt;/c0&gt; 生成的动画是由力驱动的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Whether or not you use &lt;c0&gt;&lt;a1&gt;GestureDetector.SimpleOnGestureListener&lt;/a1&gt;&lt;/c0&gt;, you must always implement an &lt;c2&gt;&lt;a3&gt;onDown()&lt;/a3&gt;&lt;/c2&gt; method that returns &lt;c4&gt;true&lt;/c4&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T070034Z" creationid="pingfangx" creationdate="20191103T070034Z">
        <seg>无论你是否使用 &lt;c0&gt;&lt;a1&gt;GestureDetector.SimpleOnGestureListener&lt;/a1&gt;&lt;/c0&gt;，你必须始终实现返回 &lt;c4&gt;true&lt;/c4&gt; 的 &lt;c2&gt;&lt;a3&gt;onDown()&lt;/a3&gt;&lt;/c2&gt; 方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Whether they are item details, progress indicators, or undo messages, you can reduce memory usage and speed up rendering by loading the views only when they are needed.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T095444Z" creationid="pingfangx" creationdate="20191103T095444Z">
        <seg>无论是项目详细信息、进度指示器还是撤消消息，都可以通过仅在需要视图时加载视图来减少内存使用并加快渲染速度。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>While both have default behavior, the default &lt;c2&gt;onDraw()&lt;/c2&gt; will do nothing, and the default &lt;c3&gt;onMeasure()&lt;/c3&gt; will always set a size of 100x100 — which is probably not what you want.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064013Z" creationid="pingfangx" creationdate="20191103T064013Z">
        <seg>虽然这 2 个方法都有默认的行为，默认的 &lt;c2&gt;onDraw()&lt;/c2&gt; 什么也不做，默认的 &lt;c3&gt;onMeasure()&lt;/c3&gt; 将设置尺寸为 100x100 — 这可能并不是你想的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>While you can define the frames of an animation in your code, using the &lt;c0&gt;&lt;a1&gt;AnimationDrawable&lt;/a1&gt;&lt;/c0&gt; class API, it's more simply accomplished with a single XML file that lists the frames that compose the animation.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T102512Z" creationid="pingfangx" creationdate="20191117T102512Z">
        <seg>虽然可以在代码中定义动画的帧，但使用 &lt;c0&gt;&lt;a1&gt;AnimationDrawable&lt;/a1&gt;&lt;/c0&gt; 类 API ，但可以更简单地使用一个列出构成动画的帧的 XML 文件来完成。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>With Android Studio, you can also run lint inspections for a specific build variant, or for all build variants.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T093358Z" creationid="pingfangx" creationdate="20191103T093358Z">
        <seg>使用 Android Studio，你还可以对特定的构建变体或所有构建变体运行 lint 检查。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>With the property animation system, these constraints are completely removed, and you can animate any property of any object (Views and non-Views) and the object itself is actually modified.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T091901Z" creationid="pingfangx" creationdate="20191117T091901Z">
        <seg>使用属性动画系统，这些约束将被完全删除，你可以设置任何对象(视图和非视图)的任何属性的动画，并且对象本身实际上已被修改。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>With this XML saved as &lt;c0&gt;hyperspace_jump.xml&lt;/c0&gt; in the &lt;c1&gt;res/anim/&lt;/c1&gt; directory of the project, the following code will reference it and apply it to an &lt;c2&gt;&lt;a3&gt;ImageView&lt;/a3&gt;&lt;/c2&gt; object from the layout.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T075544Z" creationid="pingfangx" creationdate="20191117T075544Z">
        <seg>在项目的 &lt;c1&gt;res/anim/&lt;/c1&gt; 目录中将此 XML 保存为 &lt;c0&gt;hyperspace_jump.XML&lt;/c0&gt; 后，下面的代码将引用它并将其应用于布局中的 &lt;c2&gt;&lt;a3&gt;ImageView&lt;/a3&gt;&lt;/c2&gt; 对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>With this XML saved as &lt;c3&gt;rocket_thrust.xml&lt;/c3&gt; in the &lt;c4&gt;res/drawable/&lt;/c4&gt; directory of the project, it can be added as the background image to a View and then called to play.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T102919Z" creationid="pingfangx" creationdate="20191117T102919Z">
        <seg>在项目的 &lt;c4&gt;res/drawable/&lt;/c4&gt; 目录中将此 XML 保存为 &lt;c3&gt;rocket_thrust.XML&lt;/c3&gt; 后，可以将其作为背景图像添加到视图中，然后调用以播放。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Within a &lt;c0&gt;&lt;Constraint&gt;&lt;/c0&gt;, you can use the &lt;c1&gt;&lt;CustomAttribute&gt;&lt;/c1&gt; element to specify a transition for attributes that aren't simply related to position or &lt;c2&gt;View&lt;/c2&gt; attributes.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T081146Z" creationid="pingfangx" creationdate="20191103T081146Z">
        <seg>在 &lt;c0&gt;&lt;Constraint&gt;&lt;/c0&gt; 中，你可以使用 &lt;c1&gt;&lt;CustomAttribute&gt;&lt;/c1&gt; 元素为不只是与位置或 &lt;c2&gt;View&lt;/c2&gt; 属性相关的属性指定转换。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Within a &lt;c0&gt;ConstraintLayout&lt;/c0&gt;, you can animate changes to the size and position of elements by using &lt;a1&gt;ConstraintSet&lt;/a1&gt; and &lt;a2&gt;TransitionManager&lt;/a2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T075305Z" creationid="pingfangx" creationdate="20191103T075305Z">
        <seg>在 &lt;c0&gt;ConstraintLayout&lt;/c0&gt; 中，可以使用 &lt;a1&gt;ConstraintSet&lt;/a1&gt; 和 &lt;a2&gt;TransitionManager&lt;/a2&gt; 设置元素大小和位置的更改动画。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Within a MotionScene file, &lt;c0&gt;ConstraintSet&lt;/c0&gt; elements can contain additional attributes that are interpolated during transition.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T081058Z" creationid="pingfangx" creationdate="20191103T081058Z">
        <seg>在 MotionScene 文件中，&lt;c0&gt;ConstraintSet&lt;/c0&gt; 元素可以包含在转换期间插值的其他属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Work required to animate your UI is added to the &lt;a0&gt;animation stage&lt;/a0&gt; of the rendering pipeline.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T094247Z" creationid="pingfangx" creationdate="20191117T094247Z">
        <seg>动画化用户界面所需的工作将添加到渲染管道的 &lt;a0&gt;animation stage&lt;/a0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>XML file saved at &lt;c0&gt;res/anim/hyperspace_jump.xml&lt;/c0&gt;:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T071756Z" creationid="pingfangx" creationdate="20191117T071756Z">
        <seg>XML 文件保存在 &lt;c0&gt;res/anim/hyperspace_jump.XML&lt;/c0&gt;：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>XML file saved at &lt;c0&gt;res/anim/my_overshoot_interpolator.xml&lt;/c0&gt;:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T072653Z" creationid="pingfangx" creationdate="20191117T072653Z">
        <seg>XML 文件保存在 &lt;c0&gt;res/anim/my_overshoot_interpolator.XML&lt;/c0&gt;：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>XML file saved at &lt;c0&gt;res/animator/property_animator.xml&lt;/c0&gt;:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T063912Z" creationid="pingfangx" creationdate="20191117T063912Z">
        <seg>XML 文件保存在 &lt;c0&gt;res/animator/property_animator.XML&lt;/c0&gt;：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>XML file saved at &lt;c0&gt;res/drawable/rocket.xml&lt;/c0&gt;:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T072936Z" creationid="pingfangx" creationdate="20191117T072936Z">
        <seg>XML 文件保存在 &lt;c0&gt;res/drawable/rocket.XML&lt;/c0&gt;：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You also need to make your view respond to user input in a way that closely resembles the real-world action you're mimicking.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T065922Z" creationid="pingfangx" creationdate="20191103T065922Z">
        <seg>你还需要使 view 以与你模仿的真实动作非常相似的方式响应用户输入。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can add a vertical or horizontal guideline to which you can constrain views, and the guideline will be invisible to app users.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T073219Z" creationid="pingfangx" creationdate="20191103T073219Z">
        <seg>你可以添加可以约束 view 的垂直或者水平的参考线，并且该参考线对于应用用户而言是不可见的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can adjust the bias by dragging the bias slider in the &lt;b0&gt;Attributes&lt;/b0&gt; window or by dragging the view, as shown in video 3.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T073848Z" creationid="pingfangx" creationdate="20191103T073848Z">
        <seg>你可以通过拖动 &lt;b0&gt;Attributes&lt;/b0&gt; 窗口中的“偏移”滑块或拖动视图来调整偏移，如视频 3 所示。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can also constrain views that are &lt;i0&gt;inside&lt;/i0&gt; the barrier to the barrier.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T073729Z" creationid="pingfangx" creationdate="20191103T073729Z">
        <seg>你还可以将位于屏障 &lt;i0&gt;inside (内部)&lt;/i0&gt; 的视图约束到屏障。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can also create listeners for events that your contained views might generate, for example, a listener method for the List Item Click Listener to update the contents of the EditText if a list selection is made.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064250Z" creationid="pingfangx" creationdate="20191103T064250Z">
        <seg>你也可以监听器来临听内部容纳的 view 产生的事件，比如如果设置了 list 选项，可以设置 List Item 的点击监听器来更新 EditText 的内容。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can also highlight individual constraints in the Layout Editor by clicking on them in the &lt;s7&gt;6&lt;/s7&gt; constraint list.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T074006Z" creationid="pingfangx" creationdate="20191103T074006Z">
        <seg>你也可以通过单击 &lt;s7&gt;6&lt;/s7&gt; 约束列表中的各个约束来突出显示布局编辑器中的各个约束。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can also include a guideline inside a barrier to ensure a "minimum" position for the barrier.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T073801Z" creationid="pingfangx" creationdate="20191103T073801Z">
        <seg>你还可以在屏障内包含一个参考线，以确保屏障的“最小”位置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can also limit a broadcast to a set of apps in the same organization by calling &lt;c4&gt;&lt;a5&gt;setPackage(String)&lt;/a5&gt;&lt;/c4&gt; on the intent.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T061622Z" creationid="pingfangx" creationdate="20191030T061622Z">
        <seg>你还可以通过调用 &lt;c4&gt;&lt;a5&gt;setPackage(String)&lt;/a5&gt;&lt;/c4&gt; 来将广播限制为同一组织中的一组应用程序。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can also manage inspection profiles and configure inspections within Android Studio with the &lt;s0&gt;File&gt;Settings&gt;Project Settings&lt;/s0&gt; option.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T093407Z" creationid="pingfangx" creationdate="20191103T093407Z">
        <seg>你还可以使用 &lt;s0&gt;File&gt;Settings&gt;Project Settings&lt;/s0&gt; 选项在 Android Studio 中管理检查配置文件并配置检查。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can also override all the layout parameters (any &lt;c0&gt;android:layout_*&lt;/c0&gt; attributes) of the included layout's root view by specifying them in the &lt;c1&gt;&lt;include/&gt;&lt;/c1&gt; tag.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T094941Z" creationid="pingfangx" creationdate="20191103T094941Z">
        <seg>你还可以通过在 &lt;c1&gt;&lt;include/&gt;&lt;/c1&gt; 标签中指定布局参数，来覆盖包含的布局的根视图的所有布局参数(任何 &lt;c0&gt;android:layout&lt;/c0&gt; 属性)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can also select all the views you want to align, and then click &lt;b0&gt;Align&lt;/b0&gt; &lt;i1&gt; in the toolbar to select the alignment type.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T072605Z" creationid="pingfangx" creationdate="20191103T072605Z">
        <seg>你还可以选择所有要对齐的 view，然后单击工具栏中的 &lt;b0&gt;Align&lt;/b0&gt; &lt;i1&gt;来选择对齐方式。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can also specify a custom &lt;c5&gt;&lt;a6&gt;TypeEvaluator&lt;/a6&gt;&lt;/c5&gt; for &lt;c7&gt;int&lt;/c7&gt;, &lt;c8&gt;float&lt;/c8&gt;, and color values as well, if you want to process those types differently than the default behavior.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T093822Z" creationid="pingfangx" creationdate="20191117T093822Z">
        <seg>如果要以不同于默认行为的方式处理这些类型，还可以为 &lt;c7&gt;int&lt;/c7&gt;、&lt;c8&gt;float&lt;/c8&gt; 和颜色值指定自定义的 &lt;c5&gt;&lt;a6&gt;TypeEvaluator&lt;/a6&gt;&lt;/c5&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can also specify animations to have a non-linear interpolation.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T081919Z" creationid="pingfangx" creationdate="20191117T081919Z">
        <seg>你还可以指定动画具有非线性插值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can also specify whether you want the animation to play back in reverse.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T080142Z" creationid="pingfangx" creationdate="20191117T080142Z">
        <seg>还可以指定是否希望动画反向播放。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can apply simple animations such as sliding the new activity in from the side or fading it in, but you can also create animations that transition between shared views in each activity.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T060013Z" creationid="pingfangx" creationdate="20191117T060013Z">
        <seg>你可以应用简单的动画，例如从侧面滑入或淡入新 activity，但也可以创建在每个 activity 中的共享视图之间切换的动画。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can attach additional information to the intent with &lt;c2&gt;&lt;a3&gt;putExtra(String, Bundle)&lt;/a3&gt;&lt;/c2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T061553Z" creationid="pingfangx" creationdate="20191030T061553Z">
        <seg>你可以使用 &lt;c2&gt;&lt;a3&gt;putExtra(String, Bundle)&lt;/a3&gt;&lt;/c2&gt; 将附加信息附加到 intent 中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can change the way the height and width are calculated by clicking the symbols indicated with callout &lt;s0&gt;3&lt;/s0&gt; in figure 14.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T074104Z" creationid="pingfangx" creationdate="20191103T074104Z">
        <seg>你可以通过单击图 10 中标注 &lt;s0&gt;3&lt;/s0&gt; 所示的符号来更改计算高度和宽度的方式。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can choose any alias you want for your namespace.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T065013Z" creationid="pingfangx" creationdate="20191103T065013Z">
        <seg>你可以为命名空间选择所需的任何别名。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can control the margin for each view in the &lt;s0&gt;Attributes&lt;/s0&gt; window by clicking the number on the line that represents each constraint (in figure 13, callout &lt;s1&gt;4&lt;/s1&gt; shows the bottom margin is set to 16dp).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T074719Z" creationid="pingfangx" creationdate="20191103T074719Z">
        <seg>你可以通过单击表示每个约束的行上的数字来控制 &lt;s0&gt;Attributes&lt;/s0&gt; 窗口中每个视图的边距(在图 13 中，callout&lt;s1&gt;4&lt;/s1&gt; 显示底部边距设置为 16dp)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can create constraints only between a constraint handle and an anchor point that share the same plane.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T072348Z" creationid="pingfangx" creationdate="20191103T072348Z">
        <seg>只能在共享的同一平面的约束句柄和锚点之间创建约束。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can define an animation to change any object property over time, regardless of whether it draws to the screen or not.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T075957Z" creationid="pingfangx" creationdate="20191117T075957Z">
        <seg>可以定义动画以随时间更改任何对象属性，而不管它是否绘制到屏幕。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can define the distance from the edge with margin.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T072532Z" creationid="pingfangx" creationdate="20191103T072532Z">
        <seg>你可以使用 margin 定义到边缘的距离。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can delete a constraint by doing any of the following:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T072406Z" creationid="pingfangx" creationdate="20191103T072406Z">
        <seg>可以通过执行以下任一操作删除约束：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can determine how a transformation is applied over time by assigning an &lt;c0&gt;&lt;a1&gt;Interpolator&lt;/a1&gt;&lt;/c0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T075446Z" creationid="pingfangx" creationdate="20191117T075446Z">
        <seg>你可以通过指定一个 &lt;c0&gt;&lt;a1&gt;Interpolator&lt;/a1&gt;&lt;/c0&gt; 来确定如何随时间应用变换。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can do all of the things you would do with a fully customized component, but by starting with a more specialized class in the View hierarchy, you can also get a lot of behavior for free that probably does exactly what you want.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064427Z" creationid="pingfangx" creationdate="20191103T064427Z">
        <seg>一个完全自定义的可以做的，继承一个更特定的 view 也可以做，而且你还能免费获得更多的行为，也许正是你想要的行为。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can enforce restrictions on either the sender or receiver of a broadcast.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T061906Z" creationid="pingfangx" creationdate="20191030T061906Z">
        <seg>你可以对广播的发送者或接收器实施限制。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can find most of the property animation system's APIs in &lt;c0&gt;&lt;a1&gt;android.animation&lt;/a1&gt;&lt;/c0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T092710Z" creationid="pingfangx" creationdate="20191117T092710Z">
        <seg>你可以在 &lt;c0&gt;&lt;a1&gt;android.animation&lt;/a1&gt;&lt;/c0&gt; 中找到属性动画系统的大部分 API。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can find out if your animations impact the performance of your app by enabling &lt;s1&gt;Profile GPU Rendering&lt;/s1&gt; and monitoring the animation stage.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T094303Z" creationid="pingfangx" creationdate="20191117T094303Z">
        <seg>通过启用 &lt;s1&gt;Profile GPU Rendering&lt;/s1&gt; 并监视动画阶段，可以确定动画是否影响应用程序的性能。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can group animation elements together inside the &lt;c3&gt;&lt;set&gt;&lt;/c3&gt; element, including other &lt;c4&gt;&lt;set&gt;&lt;/c4&gt; elements.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T062837Z" creationid="pingfangx" creationdate="20191117T062837Z">
        <seg>可以在 &lt;c3&gt;&lt;set&gt;&lt;/c3&gt; 元素中将动画元素组合在一起，包括其他 &lt;c4&gt;&lt;set&gt;&lt;/c4&gt; 元素。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can implement this technique by defining a &lt;c0&gt;&lt;a1&gt;ViewStub&lt;/a1&gt;&lt;/c0&gt; for those complex and rarely used views.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T095524Z" creationid="pingfangx" creationdate="20191103T095524Z">
        <seg>你可以通过为那些复杂且很少使用的视图定义一个 &lt;c0&gt;&lt;a1&gt;ViewStub&lt;/a1&gt;&lt;/c0&gt; 来实现这一技术。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can limit yourself to only local broadcasts with &lt;c0&gt;&lt;a1&gt;LocalBroadcastManager&lt;/a1&gt;&lt;/c0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T064209Z" creationid="pingfangx" creationdate="20191030T064209Z">
        <seg>你可以仅使用 &lt;c0&gt;&lt;a1&gt;LocalBroadcastManager&lt;/a1&gt;&lt;/c0&gt; 进行本地广播。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can offset the alignment by dragging the view inward from the constraint.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T072558Z" creationid="pingfangx" creationdate="20191103T072558Z">
        <seg>你可以通过从视图向内拖动约束来偏移对齐。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can position the guideline within the layout based on either dp units or percent, relative to the layout's edge.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T073220Z" creationid="pingfangx" creationdate="20191103T073220Z">
        <seg>你可以根据相对于布局边缘的 dp 单位或者百分百在布局中定位参考线。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can send local broadcasts with &lt;c0&gt;&lt;a1&gt;LocalBroadcastManager&lt;/a1&gt;&lt;/c0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T064059Z" creationid="pingfangx" creationdate="20191030T064059Z">
        <seg>你可以使用 &lt;c0&gt;&lt;a1&gt;LocalBroadcastManager&lt;/a1&gt;&lt;/c0&gt; 发送本地广播。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can set animations to play together, sequentially, or after a specified delay.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T093530Z" creationid="pingfangx" creationdate="20191117T093530Z">
        <seg>可以将动画设置为一起播放、顺序播放或在指定的延迟之后播放。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can set the view size to a ratio such as 16:9 if at least one of the view dimensions is set to "match constraints" (&lt;c0&gt;0dp&lt;/c0&gt;).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T074526Z" creationid="pingfangx" creationdate="20191103T074526Z">
        <seg>如果至少有一个 view 尺寸设置为 "match constraints" (&lt;c0&gt;0dp&lt;/c0&gt;)，则可以将 view 大小设置为比例，例如 16:9。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can specify a permission when registering a broadcast receiver.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T064132Z" creationid="pingfangx" creationdate="20191030T064132Z">
        <seg>你可以在注册一个广播接收器时指定权限。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can specify a permission when sending a broadcast.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T063953Z" creationid="pingfangx" creationdate="20191030T063953Z">
        <seg>你可以在发送广播时指定权限。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can specify either an existing system permission like &lt;c0&gt;&lt;a1&gt;SEND_SMS&lt;/a1&gt;&lt;/c0&gt; or define a custom permission with the &lt;a2&gt;&lt;c3&gt;&lt;permission&gt;&lt;/c3&gt;&lt;/a2&gt; element.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T062128Z" creationid="pingfangx" creationdate="20191030T062128Z">
        <seg>你可以指定现有的系统权限，如 &lt;c0&gt;&lt;a1&gt;SEND_SMS&lt;/a1&gt;&lt;/c0&gt;，或者使用 &lt;a2&gt;&lt;c3&gt;&lt;permission&gt;&lt;/c3&gt;&lt;/a2&gt; 元素定义自定义权限。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can specify nested &lt;c0&gt;&lt;set&gt;&lt;/c0&gt; tags to further group animations together.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T062911Z" creationid="pingfangx" creationdate="20191117T062911Z">
        <seg>你可以指定嵌套的 &lt;c0&gt;&lt;set&gt;&lt;/c0&gt; 标签以将动画进一步组合在一起。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can specify the center point of the image from which it grows outward (or inward) by specifying &lt;c0&gt;pivotX&lt;/c0&gt; and &lt;c1&gt;pivotY&lt;/c1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T071217Z" creationid="pingfangx" creationdate="20191117T071217Z">
        <seg>通过指定 &lt;c0&gt;pivotX&lt;/c0&gt; 和 &lt;c1&gt;pivotY&lt;/c1&gt;，可以指定图像向外(或向内)生长的中心点。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can specify the layout using the declarative XML files just like with an activity screen, or you can create views programmatically and nest them into the layout from your code.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064404Z" creationid="pingfangx" creationdate="20191103T064404Z">
        <seg>就像 Activity 一样，你可以在 XML 文件中申明布局，也可以通过编程的方式用代码嵌套。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can still use a &lt;a0&gt;context-registered receiver&lt;/a0&gt; when the user is actively using your app.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191030T052142Z" creationid="pingfangx" creationdate="20191030T052142Z">
        <seg>当用户正在积极使用你的应用程序时，您仍然可以使用 &lt;a0&gt; 上下文注册接收器&lt;/a0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can supply a constructor which can take attributes and parameters from the XML, and you can also consume your own such attributes and parameters (perhaps the color and range of the VU meter, or the width and damping of the needle, etc.)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064001Z" creationid="pingfangx" creationdate="20191103T064001Z">
        <seg>你可以提供一个构造方法来从 XML 文件中获取属性和参数，你也可以使用这些属性和参数(比如 VU 表范围的颜色，指针的宽度和阻尼等)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can then adjust the whole chain's bias (left/right or up/down) by changing the chain's head view bias.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T074936Z" creationid="pingfangx" creationdate="20191103T074936Z">
        <seg>然后，你可以通过更改链头 view 的偏差来调整整个链的偏差(左/右或上/下)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can then load a &lt;c0&gt;ConstraintSet&lt;/c0&gt; from the second keyframe file and apply it to the displayed &lt;c1&gt;ConstraintLayout&lt;/c1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T075532Z" creationid="pingfangx" creationdate="20191103T075532Z">
        <seg>然后，可以从第二个关键帧文件加载 &lt;c0&gt;ConstraintSet&lt;/c0&gt;，并将其应用于显示的 &lt;c1&gt;ConstraintLayout&lt;/c1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can then run your own custom gesture-detection code.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T070050Z" creationid="pingfangx" creationdate="20191103T070050Z">
        <seg>然后，你可以运行自己的自定义手势检测代码。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can use any floating-point value from &lt;c1&gt;0&lt;/c1&gt; (the start of the transition) to &lt;c2&gt;1&lt;/c2&gt; (the end of the transition).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T081602Z" creationid="pingfangx" creationdate="20191103T081602Z">
        <seg>你可以使用任何浮点值，从 &lt;c1&gt;0&lt;/c1&gt;(转换的开始)到 &lt;c2&gt;1&lt;/c2&gt;(转换的结束)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can use constraints to achieve different types of layout behavior, as described in the following sections.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T072521Z" creationid="pingfangx" creationdate="20191103T072521Z">
        <seg>你可以使用约束来实现不同类型的布局行为，如一下各章节所述。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can use the corner handles to resize a view, but this hard codes the size so the view will not resize for different content or screen sizes.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T074018Z" creationid="pingfangx" creationdate="20191103T074018Z">
        <seg>你可以使用拐角手柄来调整 view 大小，但这样会硬编码大小，因此 view 不会调整为不同的内容或屏幕尺寸大小。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can use the view animation system to perform tweened animation on Views.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T074811Z" creationid="pingfangx" creationdate="20191117T074811Z">
        <seg>你可以使用视图动画系统，在视图上执行补间动画。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can use these methods in &lt;c8&gt;&lt;a9&gt;onDraw()&lt;/a9&gt;&lt;/c8&gt; to create your custom user interface (UI).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T065502Z" creationid="pingfangx" creationdate="20191103T065502Z">
        <seg>你可以在 &lt;c8&gt;&lt;a9&gt;onDraw()&lt;/a9&gt;&lt;/c8&gt; 中使用这些方法来创建自定义用户界面(UI)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can use this to swap out the entire UI or to move/replace just some views.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T055338Z" creationid="pingfangx" creationdate="20191117T055338Z">
        <seg>你可以使用这个来交换整个 UI，或者只移动/替换一些视图。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You cannot use &lt;c1&gt;match_parent&lt;/c1&gt; for any view in a &lt;c2&gt;ConstraintLayout&lt;/c2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T074511Z" creationid="pingfangx" creationdate="20191103T074511Z">
        <seg>不能对 &lt;c2&gt;ConstraintLayout&lt;/c2&gt; 中的任何视图使用 &lt;c1&gt;match_parent&lt;/c1&gt; 。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You could capture other events like key presses and handle them in some custom way (such as for a game).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T063837Z" creationid="pingfangx" creationdate="20191103T063837Z">
        <seg>你可以捕获其他事件，比如按键，并且自己处理事件(比如在游戏中)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You could combine a group of View components into a new single component, perhaps to make something like a ComboBox (a combination of popup list and free entry text field), a dual-pane selector control (a left and right pane with a list in each where you can reassign which item is in which list), and so on.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T063820Z" creationid="pingfangx" creationdate="20191103T063820Z">
        <seg>你可以用一组 View 组件组成一个新的单一组件，比如类似于一个 ComboBox（弹出窗口列表和一个自由输入的文本框的组合）、一个双窗口的选择控制器（左右窗口各有一个列表，你可以重新分配哪些 item 是在所选列表中）等等。（译注：第二个比如日类似日期、时间选择的那种）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You could create a completely custom-rendered View type, for example a "volume control" knob rendered using 2D graphics, and which resembles an analog electronic control.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T063811Z" creationid="pingfangx" creationdate="20191103T063811Z">
        <seg>你可以创建完全自己渲染的 View 类，比如一个用 2D 图呈现的 "音量控制" 旋扭。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You could override the way that an EditText component is rendered on the screen (the &lt;a0&gt; Notepad Tutorial&lt;/a0&gt; uses this to good effect to create a lined notepad page).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T063824Z" creationid="pingfangx" creationdate="20191103T063824Z">
        <seg>你可以重写 EditText 在屏幕上呈现的方式(&lt;a0&gt;Notepad Tutorial&lt;/a0&gt; 使用这点创建一个按行排的记事本，效果良好)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You have to inflate your animation XML resource by calling &lt;c6&gt;&lt;a7&gt;loadAnimator()&lt;/a7&gt;&lt;/c6&gt; and call &lt;c8&gt;&lt;a9&gt;setTarget()&lt;/a9&gt;&lt;/c8&gt; to set the target object that contains this property.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T063259Z" creationid="pingfangx" creationdate="20191117T063259Z">
        <seg>必须通过调用 &lt;c6&gt;&lt;a7&gt;loadAnimator()&lt;/a7&gt;&lt;/c6&gt; 来加载动画 XML 资源，并调用 &lt;c8&gt;&lt;a9&gt;setTarget()&lt;/a9&gt;&lt;/c8&gt; 设置包含此属性的目标对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You have to invalidate the view after any change to its properties that might change its appearance, so that the system knows that it needs to be redrawn.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T065103Z" creationid="pingfangx" creationdate="20191103T065103Z">
        <seg>在对可能更改其外观的属性进行任何更改后，必须使 view 无效，以便系统知道需要重新绘制该 view。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You just need to make sure to check the current API level at runtime, and omit the calls to the view animation system if the current level is less than 11.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T070311Z" creationid="pingfangx" creationdate="20191103T070311Z">
        <seg>你只需确保在运行时检查当前 API 级别，如果当前级别小于 11，则忽略对 view 动画系统的调用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You might also create your own properties with accessors and modifiers, for example, allow the EditText value to be set initially in the component and query for its contents when needed.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064336Z" creationid="pingfangx" creationdate="20191103T064336Z">
        <seg>你也可以创建你自己属性的访问和修改方法，比如允许设置 EditText 的初始值或当需要时获取它的内容。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You might need to make some adjustments to be sure the layout responds as you intend for different screen sizes and orientations.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T075135Z" creationid="pingfangx" creationdate="20191103T075135Z">
        <seg>你可能需要进行一些调整，以确保布局响应你打算为不同的屏幕尺寸和方向。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You might override other &lt;c0&gt;on...&lt;/c0&gt; methods, like &lt;c1&gt;onKeyDown()&lt;/c1&gt;, to perhaps choose certain default values from the popup list of a combo box when a certain key is pressed.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064347Z" creationid="pingfangx" creationdate="20191103T064347Z">
        <seg>你可能要重写一些 &lt;c0&gt;on...&lt;/c0&gt; 方法，比如重写 &lt;c1&gt;onKeyDown()&lt;/c1&gt; 方法，当某个按键按下时，从 combo box 的 popup list 中选择某个值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You must handle the padding values when you calculate your view's size.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T065556Z" creationid="pingfangx" creationdate="20191103T065556Z">
        <seg>在计算 view 大小时，必须处理 padding 值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You normally define animated vector drawables in three XML files:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T113405Z" creationid="pingfangx" creationdate="20191117T113405Z">
        <seg>通常在三个 XML 文件中定义动画 vector drawable：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You normally do not use this class directly as it only provides minimal functionality that must be extended to fully support animating values.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T092933Z" creationid="pingfangx" creationdate="20191117T092933Z">
        <seg>通常不直接使用该类，因为它只提供必须扩展以完全支持动画值的最小功能。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You should never make assumptions about the size of your view on the screen.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T065543Z" creationid="pingfangx" creationdate="20191103T065543Z">
        <seg>你永远不应该在屏幕上对 view 的大小做出假设。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You specify a specific dimension in the text box below or by resizing the view in the editor.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T074155Z" creationid="pingfangx" creationdate="20191103T074155Z">
        <seg>你可以在下面的文本框中指定特定的尺寸，也可以在编辑器中调整 view 大小。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You then create a &lt;c2&gt;&lt;a3&gt;Transition&lt;/a3&gt;&lt;/c2&gt; to tell the system what type of animation you want, and then call &lt;c4&gt;&lt;a5&gt;TransitionManager.go()&lt;/a5&gt;&lt;/c4&gt; and the system runs the animation to swap the layouts.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T055722Z" creationid="pingfangx" creationdate="20191117T055722Z">
        <seg>然后，创建一个 &lt;c2&gt;&lt;a3&gt;Transition&lt;/a3&gt;&lt;/c2&gt; 以告诉系统你想要什么类型的动画，然后调用 &lt;c4&gt;&lt;a5&gt;TransitionManager.go()&lt;/a5&gt;&lt;/c4&gt; 并运行该动画以交换布局。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You use the predefined constants to read the attributes from the &lt;c3&gt;&lt;a4&gt;TypedArray&lt;/a4&gt;&lt;/c3&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T065045Z" creationid="pingfangx" creationdate="20191103T065045Z">
        <seg>你可以使用预定义常量从 &lt;c3&gt;&lt;a4&gt;TypedArray&lt;/a4&gt;&lt;/c3&gt; 中读取属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You want to use &lt;c2&gt;&lt;a3&gt;ObjectAnimator&lt;/a3&gt;&lt;/c2&gt; most of the time, because it makes the process of animating values on target objects much easier.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T093446Z" creationid="pingfangx" creationdate="20191117T093446Z">
        <seg>大多数情况下，你都希望使用 &lt;c2&gt;&lt;a3&gt;ObjectAnimator&lt;/a3&gt;&lt;/c2&gt; ，因为它使对目标对象上的值设置动画的过程更加容易。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You will almost certainly want to override &lt;c0&gt;onMeasure()&lt;/c0&gt; and are also likely to need to override &lt;c1&gt;onDraw()&lt;/c1&gt; if you want the component to show something.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064010Z" creationid="pingfangx" creationdate="20191103T064010Z">
        <seg>如果你想要你的组件显示一些东西，几乎可以肯定你需要重写 &lt;c0&gt;onMeasure()&lt;/c0&gt; 和 &lt;c1&gt;onDraw()&lt;/c1&gt; 方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You will probably want to create your own event listeners, property accessors and modifiers, and possibly more sophisticated behavior in your component class as well.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064003Z" creationid="pingfangx" creationdate="20191103T064003Z">
        <seg>你也可以在你的组件类中创建自己的事件监听器，属性的获取、设置方法，也可能更复杂的行为。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Your component's &lt;c0&gt;onMeasure()&lt;/c0&gt; method should calculate a measurement width and height which will be required to render the component.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064051Z" creationid="pingfangx" creationdate="20191103T064051Z">
        <seg>你的组件的 &lt;c0&gt;onMeasure()&lt;/c0&gt; 方法将计算出一个测量的宽度和高度，以用来呈现该组件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Your custom view can also extend &lt;c2&gt;&lt;a3&gt;View&lt;/a3&gt;&lt;/c2&gt; directly, or you can save time by extending one of the existing view subclasses, such as &lt;c4&gt;&lt;a5&gt;Button&lt;/a5&gt;&lt;/c4&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T064906Z" creationid="pingfangx" creationdate="20191103T064906Z">
        <seg>你的自定义 view 也可以直接继承 &lt;c2&gt;&lt;a3&gt;View&lt;/a3&gt;&lt;/c2&gt;，或者你可以通过继承其中一个现有 view 子类来节省时间，例如 &lt;c4&gt;&lt;a5&gt;Button&lt;/a5&gt;&lt;/c4&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Your custom view should support the widest range of users.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T065145Z" creationid="pingfangx" creationdate="20191103T065145Z">
        <seg>你的自定义 view 应该支持最广泛的用户。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>attributes:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T062917Z" creationid="pingfangx" creationdate="20191117T062917Z">
        <seg>属性：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>compiled resource datatype:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T062557Z" creationid="pingfangx" creationdate="20191117T062557Z">
        <seg>编译的资源数据类型：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>elements:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T062839Z" creationid="pingfangx" creationdate="20191117T062839Z">
        <seg>元素：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>example:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T071752Z" creationid="pingfangx" creationdate="20191117T071752Z">
        <seg>示例：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>file location:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T062520Z" creationid="pingfangx" creationdate="20191117T062520Z">
        <seg>文件位置：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>is a separate feature that you can enable.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T075143Z" creationid="pingfangx" creationdate="20191103T075143Z">
        <seg>是一个独立的功能，你可以启用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>or creates an animation by showing a sequence of images in order with an &lt;c1&gt;&lt;a2&gt;AnimationDrawable&lt;/a2&gt;&lt;/c1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T061531Z" creationid="pingfangx" creationdate="20191117T061531Z">
        <seg>使用 &lt;c1&gt;&lt;a2&gt;AnimationDrawable&lt;/a2&gt;&lt;/c1&gt; 创建一个按顺序显示一系列图像的动画</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>resource reference:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T062623Z" creationid="pingfangx" creationdate="20191117T062623Z">
        <seg>资源引用：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>scans the layout to determine the most effective set of constraints for all views.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T075131Z" creationid="pingfangx" creationdate="20191103T075131Z">
        <seg>扫描布局以确定所有 view 的最有效的约束集合。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>so you don't need to call &lt;c5&gt;&lt;a6&gt;findViewById()&lt;/a6&gt;&lt;/c5&gt; if you need to interact with the layout.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191103T100000Z" creationid="pingfangx" creationdate="20191103T100000Z">
        <seg>因此，如果需要与布局交互，则不需要调用 &lt;c5&gt;&lt;a6&gt;findViewById()&lt;/a6&gt;&lt;/c5&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>syntax:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20191117T062644Z" creationid="pingfangx" creationdate="20191117T062644Z">
        <seg>语法：</seg>
      </tuv>
    </tu>
<!-- Alternative translations -->
  </body>
</tmx>
